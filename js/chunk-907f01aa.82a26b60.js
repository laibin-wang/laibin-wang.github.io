(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-907f01aa"],{"00fd":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("Nestjs")])]),a("h2",{attrs:{id:"nestjs-wen-dang"}},[s._v("Nestjs 文档 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nestjs-wen-dang"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读的文章是："),a("a",{attrs:{href:"https://docs.nestjs.com/"}},[s._v("Nestjs 文档")])])]),a("blockquote",[a("p",[s._v("体验一下 nodejs mvc 框架的优雅设计。")])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i3/O1CN01t69Fct1E39Voy7ohY_!!6000000000295-2-tps-971-1200.png",width:"500",alt:"logo"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("Nestjs 是我见过的，将 Typescript 与 Nodejs Framework 结合的最好的例子。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[s._v("Nestjs 不是一个新轮子，它是基于 Express、socket.io 封装的 nodejs 后端开发框架，对 Typescript 开发者提供类型支持，也能优雅降级供 Js 使用，拥有诸多特性，像中间件等就不展开了，本文重点列举其亮点特性。")]),a("p",[a("strong",[s._v("1 Modules, Controllers, Providers")])]),a("p",[s._v("Nestjs 开发围绕着这三个单词，Modules 是最大粒度的拆分，表示应用或者模块。Controllers 是传统意义的控制器，一个 Module 拥有多个 Controller。Providers 一般用于做 Services，比如将数据库 CRUD 封装在 Services 中，每个 Service 就是一个 Provider。")]),a("br"),a("p",[a("strong",[s._v("2 装饰器路由")])]),a("p",[s._v("装饰器路由是个好东西，路由直接标志在函数头上，做到了路由去中心化：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Controller")]),s._v("()\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("UsersController")]),s._v(" ")]),s._v("{\n    "),a("span",{staticClass:"hljs-meta"},[s._v("@Get")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'users'")]),s._v(")\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getAllUsers")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {}\n\n    "),a("span",{staticClass:"hljs-meta"},[s._v("@Get")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'users/:id'")]),s._v(")\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getUser")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {}\n\n    "),a("span",{staticClass:"hljs-meta"},[s._v("@Post")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'users'")]),s._v(")\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("addUser")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {}\n}\n")])]),a("br"),a("p",[s._v("以前用过 Go 语言框架 "),a("a",{attrs:{href:"https://beego.me/docs/mvc/controller/router.md"}},[s._v("Beego")]),s._v("，就是采用了中心化路由管理方式，虽然引入了 "),a("code",[s._v("namespace")]),s._v(" 概念，但当协作者多、模块体量巨大时，路由管理成本直线上升。Nestjs 类似 namespace 的概念通过装饰器实现：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Controller")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'users'")]),s._v(")\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("UsersController")]),s._v(" ")]),s._v("{\n    "),a("span",{staticClass:"hljs-meta"},[s._v("@Get")]),s._v("()\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getAllUsers")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("req: Request, res: Response, next: NextFunction")]),s._v(")")]),s._v(" {}\n}\n")])]),a("br"),a("p",[s._v("访问 "),a("code",[s._v("/users")]),s._v(" 时会进入 "),a("code",[s._v("getAllUsers")]),s._v(" 函数。可以看到其 "),a("code",[s._v("namespace")]),s._v(" 也是去中心化的。")]),a("br"),a("p",[a("strong",[s._v("3 模块间依赖注入")])]),a("p",[s._v("Modules, Controllers, Providers 之间通过依赖注入相互关联，它们通过同名的 "),a("code",[s._v("@Module")]),s._v(" "),a("code",[s._v("@Controller")]),s._v(" "),a("code",[s._v("@Injectable")]),s._v(" 装饰器申明，如：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Controller")]),s._v("()\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("UsersController")]),s._v(" ")]),s._v("{\n    "),a("span",{staticClass:"hljs-meta"},[s._v("@Get")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'users'")]),s._v(")\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getAllUsers")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {}\n}\n")])]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Injectable")]),s._v("()\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("UsersService")]),s._v(" ")]),s._v("{\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getAllUsers")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" []\n    }\n}\n")])]),a("br"),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Module")]),s._v("({\n    "),a("span",{staticClass:"hljs-attr"},[s._v("controllers")]),s._v(": [ UsersController ],\n    "),a("span",{staticClass:"hljs-attr"},[s._v("providers")]),s._v(": [ UsersService ],\n})\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("ApplicationModule")]),s._v(" ")]),s._v("{}\n")])]),a("br"),a("p",[s._v("在 "),a("code",[s._v("ApplicationModule")]),s._v(" 申明其内部 Controllers 与 Providers 后，就可以在 Controllers 中注入 Providers 了：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Controller")]),s._v("()\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("UsersController")]),s._v(" ")]),s._v("{\n\t"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("constructor")]),s._v("("),a("span",{staticClass:"hljs-params"},[a("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" usersService: UsersService")]),s._v(")")]),s._v(" {}\n\t\n    "),a("span",{staticClass:"hljs-meta"},[s._v("@Get")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'users'")]),s._v(")\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getAllUsers")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    \t"),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".usersService.getAllUsers()\n    }\n}\n")])]),a("br"),a("p",[a("strong",[s._v("4 装饰器参数")])]),a("p",[s._v("与大部分框架从 "),a("code",[s._v("this.req")]),s._v(" 或 "),a("code",[s._v("this.context")]),s._v(" 等取请求参数不同，Nestjs 通过装饰器获取请求参数：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Get")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'/:id'")]),s._v(")\n"),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getUser")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("\n\t"),a("span",{staticClass:"hljs-meta"},[s._v("@Response")]),s._v("() res,\n\t"),a("span",{staticClass:"hljs-meta"},[s._v("@Param")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'id'")]),s._v(") id,\n")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" user = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".usersService.getUser(id);\n    res.status(HttpStatus.OK).json(user);\n}\n")])]),a("br"),a("p",[a("code",[s._v("@Response")]),s._v(" 获取 res，"),a("code",[s._v("@Param")]),s._v(" 获取路由参数，"),a("code",[s._v("@Query")]),s._v(" 获取 url query 参数，"),a("code",[s._v("@Body")]),s._v(" 获取 Http body 参数。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("由于临近双十一，项目工期很紧张，本期精读由我独自完成 :p。")]),a("p",[a("strong",[s._v("1 Typeorm")])]),a("p",[s._v("有了如此强大的后端框架，必须搭配上同等强大的 orm 才能发挥最大功力，"),a("a",{attrs:{href:"https://github.com/typeorm/typeorm"}},[s._v("Typeorm")]),s._v(" 就是最好的选择之一。它也完全使用 Typescript 编写，使用方式具有同样的艺术气息。")]),a("ul",[a("li",[s._v("定义实体")])]),a("p",[s._v("每个实体对应数据库的一张表，Typeorm 在每次启动都会同步表结构到数据库，我们完全不用使用数据库查看表结构，所有结构信息都定义在代码中：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Entity")]),s._v("()\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Card")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-meta"},[s._v("@PrimaryGeneratedColumn")]),s._v("({\n    "),a("span",{staticClass:"hljs-attr"},[s._v("comment")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'主键'")]),s._v(",\n  })\n  "),a("span",{staticClass:"hljs-attr"},[s._v("id")]),s._v(": "),a("span",{staticClass:"hljs-built_in"},[s._v("number")]),s._v(";\n\n  "),a("span",{staticClass:"hljs-meta"},[s._v("@Column")]),s._v("({\n    "),a("span",{staticClass:"hljs-attr"},[s._v("comment")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'名称'")]),s._v(",\n    "),a("span",{staticClass:"hljs-attr"},[s._v("length")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("30")]),s._v(",\n    "),a("span",{staticClass:"hljs-attr"},[s._v("unique")]),s._v(": "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(",\n  })\n  "),a("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": "),a("span",{staticClass:"hljs-built_in"},[s._v("string")]),s._v(" = "),a("span",{staticClass:"hljs-string"},[s._v("'nick'")]),s._v(";\n}\n")])]),a("br"),a("p",[s._v("通过 "),a("code",[s._v("@Entity")]),s._v(" 将类定义为实体，每个成员变量对应表中的每一列，如上定义了 "),a("code",[s._v("id")]),s._v(" "),a("code",[s._v("name")]),s._v(" 两个列，同时列 "),a("code",[s._v("id")]),s._v(" 通过 "),a("code",[s._v("@PrimaryGeneratedColumn")]),s._v(" 定义为了主键列，列 "),a("code",[s._v("name")]),s._v(" 通过参数定义了其最大长度、唯一的信息。")]),a("p",[s._v("至于类型，Typeorm 通过反射，拿到了类型定义，自动识别 "),a("code",[s._v("id")]),s._v(" 为数字类型、"),a("code",[s._v("name")]),s._v(" 为字符串类型，当然也可以手动设置 "),a("code",[s._v("type")]),s._v(" 参数。")]),a("p",[s._v("对于初始值，使用 js 语法就好，比如将 "),a("code",[s._v("name")]),s._v(" 初始值设置为 "),a("code",[s._v("nick")]),s._v("，在 "),a("code",[s._v("new Card()")]),s._v(" 时已经带上了初始值。")]),a("br"),a("ul",[a("li",[s._v("2 自动校验")])]),a("p",[s._v("光判断参数类型是不够的，我们可以使用 "),a("code",[s._v("class-validator")]),s._v(" 做任何形式的校验：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Column")]),s._v("({\n\t"),a("span",{staticClass:"hljs-attr"},[s._v("comment")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'配置 JSON'")]),s._v(",\n\t"),a("span",{staticClass:"hljs-attr"},[s._v("length")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("5000")]),s._v(",\n})\n"),a("span",{staticClass:"hljs-meta"},[s._v("@Validator")]),s._v(".IsString({ "),a("span",{staticClass:"hljs-attr"},[s._v("message")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'必须为字符串'")]),s._v(" })\n"),a("span",{staticClass:"hljs-meta"},[s._v("@Validator")]),s._v(".Length("),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("5000")]),s._v(", { "),a("span",{staticClass:"hljs-attr"},[s._v("message")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'长度在 0~5000'")]),s._v(" })\n"),a("span",{staticClass:"hljs-attr"},[s._v("content")]),s._v(": "),a("span",{staticClass:"hljs-built_in"},[s._v("string")]),s._v(";\n")])]),a("br"),a("p",[s._v("这里遇到一个问题：新增实体时，需要校验所有字段，但更新实体时，由于性能需要，我们一般不会一次查询所有字段，就需要指定更新时，不校验没有赋值的字段，我们通过 Typeorm 的 "),a("code",[s._v("EventSubscriber")]),s._v(" 完成数据库操作前的代码校验，并控制新增时全字段校验，更新时只校验赋值的字段，删除时不做校验：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@EventSubscriber")]),s._v("()\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("EverythingSubscriber")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("implements")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("EntitySubscriberInterface")]),s._v("<"),a("span",{staticClass:"hljs-title"},[s._v("any")]),s._v("> ")]),s._v("{\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 插入前校验")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("beforeInsert")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("event: InsertEvent<"),a("span",{staticClass:"hljs-built_in"},[s._v("any")]),s._v(">")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" validateErrors = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" validate(event.entity);\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (validateErrors.length > "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(") {\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" HttpException(getErrorMessage(validateErrors), "),a("span",{staticClass:"hljs-number"},[s._v("404")]),s._v(");\n    }\n  }\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 更新前校验")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("beforeUpdate")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("event: UpdateEvent<"),a("span",{staticClass:"hljs-built_in"},[s._v("any")]),s._v(">")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" validateErrors = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" validate(event.entity, {\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 更新操作不会验证没有涉及的字段")]),s._v("\n      "),a("span",{staticClass:"hljs-attr"},[s._v("skipMissingProperties")]),s._v(": "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(",\n    });\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (validateErrors.length > "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(") {\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" HttpException(getErrorMessage(validateErrors), "),a("span",{staticClass:"hljs-number"},[s._v("404")]),s._v(");\n    }\n  }\n}\n")])]),a("br"),a("p",[a("code",[s._v("HttpException")]),s._v(" 会在校验失败后，终止执行，并立即返回错误给客户端，这一步体现了 Nestjs 与 Typeorm 完美结合。这带来的好处就是，我们放心执行任何 CRUD 语句，完全不需要做错误处理，当校验失败或者数据库操作失败时，会自动终止执行后续代码，并返回给客户端友好的提示：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Post")]),s._v("()\n"),a("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("add")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("\n  "),a("span",{staticClass:"hljs-meta"},[s._v("@Res")]),s._v("() res: Response,\n  "),a("span",{staticClass:"hljs-meta"},[s._v("@Body")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'name'")]),s._v(") name: "),a("span",{staticClass:"hljs-built_in"},[s._v("string")]),s._v(",\n  "),a("span",{staticClass:"hljs-meta"},[s._v("@Body")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'description'")]),s._v(") description: "),a("span",{staticClass:"hljs-built_in"},[s._v("string")]),s._v(",\n")]),s._v(")")]),s._v(" {\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" card = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".cardService.add(name, description);\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 如果传入参数实体校验失败，会立刻返回失败，并提示 `@Validator.IsString({ message: '必须为字符串' })` 注册时的提示信息")]),s._v("\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 如果插入失败，也会立刻返回失败")]),s._v("\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 所以只需要处理正确情况")]),s._v("\n  res.status(HttpStatus.OK).json(card);\n}\n")])]),a("ul",[a("li",[s._v("外键")])]),a("p",[s._v("外键也是 Typeorm 的特色之一，通过装饰器语义化解释实体之间的关系，常用的有 "),a("code",[s._v("@OneToOne")]),s._v(" "),a("code",[s._v("@OneToMany")]),s._v(" "),a("code",[s._v("@ManyToOne")]),s._v(" "),a("code",[s._v("@ManyToMany")]),s._v(" 四种，比如用户表到评论表，是一对多的关系，可以这样设置实体：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Entity")]),s._v("()\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("User")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-meta"},[s._v("@PrimaryGeneratedColumn")]),s._v("({\n    "),a("span",{staticClass:"hljs-attr"},[s._v("comment")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'主键'")]),s._v(",\n  })\n  "),a("span",{staticClass:"hljs-attr"},[s._v("id")]),s._v(": "),a("span",{staticClass:"hljs-built_in"},[s._v("number")]),s._v(";\n\n  "),a("span",{staticClass:"hljs-meta"},[s._v("@OneToMany")]),s._v("("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("type")]),s._v(" =>")]),s._v(" Comment, "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("comment")]),s._v(" =>")]),s._v(" comment.user)\n  comments?: Comment[];\n}\n")])]),a("br"),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-meta"},[s._v("@Entity")]),s._v("()\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Comment")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-meta"},[s._v("@PrimaryGeneratedColumn")]),s._v("({\n    "),a("span",{staticClass:"hljs-attr"},[s._v("comment")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'主键'")]),s._v(",\n  })\n  "),a("span",{staticClass:"hljs-attr"},[s._v("id")]),s._v(": "),a("span",{staticClass:"hljs-built_in"},[s._v("number")]),s._v(";\n\n  "),a("span",{staticClass:"hljs-meta"},[s._v("@ManyToOne")]),s._v("("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("type")]),s._v(" =>")]),s._v(" User, "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("user")]),s._v(" =>")]),s._v(" user.Comments)\n  "),a("span",{staticClass:"hljs-meta"},[s._v("@JoinColumn")]),s._v("()\n  "),a("span",{staticClass:"hljs-attr"},[s._v("user")]),s._v(": User;\n}\n")])]),a("br"),a("p",[s._v("对 "),a("code",[s._v("User")]),s._v(" 来说，一个 "),a("code",[s._v("User")]),s._v(" 对应多个 "),a("code",[s._v("Comment")]),s._v("，就使用 "),a("code",[s._v("OneToMany")]),s._v(" 装饰器装饰 "),a("code",[s._v("Comments")]),s._v(" 字段；对 "),a("code",[s._v("Comment")]),s._v(" 来说，多个 "),a("code",[s._v("Comment")]),s._v(" 对应一个 "),a("code",[s._v("User")]),s._v("，所以使用 "),a("code",[s._v("ManyToOne")]),s._v(" 装饰 "),a("code",[s._v("User")]),s._v(" 字段。")]),a("p",[s._v("在使用 Typeorm 查询 "),a("code",[s._v("User")]),s._v(" 时，会自动外键查询到其关联的评论，保存在 "),a("code",[s._v("user.comments")]),s._v(" 中。查询 "),a("code",[s._v("Comment")]),s._v(" 时，会自动查询到其关联的 "),a("code",[s._v("User")]),s._v("，保存在 "),a("code",[s._v("comment.user")]),s._v(" 中。")]),a("br"),a("p",[a("strong",[s._v("2 部署")])]),a("p",[s._v("可以使用 Docker 部署 Mysql + Nodejs，通过 "),a("code",[s._v("docker-compose")]),s._v(" 将数据库与服务都跑在 docker 中，内部通信。")]),a("p",[s._v("有一个问题，就是 nodejs 服务运行时，要等待数据库服务启动完毕，也就是有一个启动等待的需求。可以通过 "),a("code",[s._v("environment")]),s._v(" 来拓展等待功能，以下是 "),a("code",[s._v("docker-compose.yml")]),s._v("：")]),a("pre",[a("code",{staticClass:"hljs language-yml"},[a("span",{staticClass:"hljs-attr"},[s._v("version:")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"2"')]),s._v("\n"),a("span",{staticClass:"hljs-attr"},[s._v("services:")]),s._v("\n  "),a("span",{staticClass:"hljs-attr"},[s._v("app:")]),s._v("\n    "),a("span",{staticClass:"hljs-attr"},[s._v("build:")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("./")]),s._v("\n    "),a("span",{staticClass:"hljs-attr"},[s._v("restart:")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("always")]),s._v("\n    "),a("span",{staticClass:"hljs-attr"},[s._v("ports:")]),s._v("\n      "),a("span",{staticClass:"hljs-bullet"},[s._v("-")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"5000:8000"')]),s._v("\n    "),a("span",{staticClass:"hljs-attr"},[s._v("links:")]),s._v("\n      "),a("span",{staticClass:"hljs-bullet"},[s._v("-")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("db")]),s._v("\n      "),a("span",{staticClass:"hljs-bullet"},[s._v("-")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("redis")]),s._v("\n    "),a("span",{staticClass:"hljs-attr"},[s._v("depends_on:")]),s._v("\n      "),a("span",{staticClass:"hljs-bullet"},[s._v("-")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("db")]),s._v("\n      "),a("span",{staticClass:"hljs-bullet"},[s._v("-")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("redis")]),s._v("\n    "),a("span",{staticClass:"hljs-attr"},[s._v("environment:")]),s._v("\n      "),a("span",{staticClass:"hljs-attr"},[s._v("WAIT_HOSTS:")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("db:3306")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("redis:6379")]),s._v("\n")])]),a("br"),a("p",[s._v("通过 "),a("code",[s._v("WAIT_HOSTS")]),s._v(" 指定要等待哪些服务的端口服务 ready。在 nodejs "),a("code",[s._v("Dockerfile")]),s._v(" 启动的 "),a("code",[s._v("CMD")]),s._v(" 加上一个 "),a("code",[s._v("wait-for.sh")]),s._v(" 脚本，它会读取 "),a("code",[s._v("WAIT_HOSTS")]),s._v(" 环境变量，等待端口 ready 后，再执行后面的启动脚本。")]),a("pre",[a("code",{staticClass:"hljs language-bash"},[s._v("CMD ./scripts/docker/wait-for.sh && npm run deploy\n")])]),a("br"),a("p",[s._v("以下是 "),a("code",[s._v("wait.sh")]),s._v(" 脚本内容：")]),a("pre",[a("code",{staticClass:"hljs language-bash"},[a("span",{staticClass:"hljs-meta"},[s._v("#!/bin/bash")]),s._v("\n\n"),a("span",{staticClass:"hljs-built_in"},[s._v("set")]),s._v(" -e\n\ntimeout="),a("span",{staticClass:"hljs-variable"},[s._v("${WAIT_HOSTS_TIMEOUT:-30}")]),s._v("\nwaitAfterHosts="),a("span",{staticClass:"hljs-variable"},[s._v("${WAIT_AFTER_HOSTS:-0}")]),s._v("\nwaitBeforeHosts="),a("span",{staticClass:"hljs-variable"},[s._v("${WAIT_BEFORE_HOSTS:-0}")]),s._v("\n\n"),a("span",{staticClass:"hljs-built_in"},[s._v("echo")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"Waiting for '),a("span",{staticClass:"hljs-variable"},[s._v("${waitBeforeHosts}")]),s._v(' seconds."')]),s._v("\nsleep "),a("span",{staticClass:"hljs-variable"},[s._v("$waitBeforeHosts")]),s._v("\n\n"),a("span",{staticClass:"hljs-comment"},[s._v('# our target format is a comma separated list where each item is "host:ip"')]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" [ -n "),a("span",{staticClass:"hljs-string"},[s._v('"'),a("span",{staticClass:"hljs-variable"},[s._v("$WAIT_HOSTS")]),s._v('"')]),s._v(" ]; "),a("span",{staticClass:"hljs-keyword"},[s._v("then")]),s._v("\n  uris=$("),a("span",{staticClass:"hljs-built_in"},[s._v("echo")]),s._v(" "),a("span",{staticClass:"hljs-variable"},[s._v("$WAIT_HOSTS")]),s._v(" | sed -e "),a("span",{staticClass:"hljs-string"},[s._v("'s/,/ /g'")]),s._v(" -e "),a("span",{staticClass:"hljs-string"},[s._v("'s/\\s+/\\n/g'")]),s._v(" | uniq)\n"),a("span",{staticClass:"hljs-keyword"},[s._v("fi")]),s._v("\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("# wait for each target")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" [ -z "),a("span",{staticClass:"hljs-string"},[s._v('"'),a("span",{staticClass:"hljs-variable"},[s._v("$uris")]),s._v('"')]),s._v(" ];\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("then")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("echo")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"No wait targets found."')]),s._v(" >&2;\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v("\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" uri "),a("span",{staticClass:"hljs-keyword"},[s._v("in")]),s._v(" "),a("span",{staticClass:"hljs-variable"},[s._v("$uris")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("do")]),s._v("\n    host=$("),a("span",{staticClass:"hljs-built_in"},[s._v("echo")]),s._v(" "),a("span",{staticClass:"hljs-variable"},[s._v("$uri")]),s._v(" | cut -d: -f1)\n    port=$("),a("span",{staticClass:"hljs-built_in"},[s._v("echo")]),s._v(" "),a("span",{staticClass:"hljs-variable"},[s._v("$uri")]),s._v(" | cut -d: -f2)\n    [ -n "),a("span",{staticClass:"hljs-string"},[s._v('"'),a("span",{staticClass:"hljs-variable"},[s._v("${host}")]),s._v('"')]),s._v(" ]\n    [ -n "),a("span",{staticClass:"hljs-string"},[s._v('"'),a("span",{staticClass:"hljs-variable"},[s._v("${port}")]),s._v('"')]),s._v(" ]\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("echo")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"Waiting for '),a("span",{staticClass:"hljs-variable"},[s._v("${uri}")]),s._v('."')]),s._v("\n    seconds=0\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("while")]),s._v(" [ "),a("span",{staticClass:"hljs-string"},[s._v('"'),a("span",{staticClass:"hljs-variable"},[s._v("$seconds")]),s._v('"')]),s._v(" -lt "),a("span",{staticClass:"hljs-string"},[s._v('"'),a("span",{staticClass:"hljs-variable"},[s._v("$timeout")]),s._v('"')]),s._v(" ] && ! nc -z -w1 "),a("span",{staticClass:"hljs-variable"},[s._v("$host")]),s._v(" "),a("span",{staticClass:"hljs-variable"},[s._v("$port")]),s._v("\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("do")]),s._v("\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("echo")]),s._v(" -n .\n      seconds=$((seconds+"),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("))\n      sleep 1\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("done")]),s._v("\n\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" [ "),a("span",{staticClass:"hljs-string"},[s._v('"'),a("span",{staticClass:"hljs-variable"},[s._v("$seconds")]),s._v('"')]),s._v(" -lt "),a("span",{staticClass:"hljs-string"},[s._v('"'),a("span",{staticClass:"hljs-variable"},[s._v("$timeout")]),s._v('"')]),s._v(" ]; "),a("span",{staticClass:"hljs-keyword"},[s._v("then")]),s._v("\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("echo")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"'),a("span",{staticClass:"hljs-variable"},[s._v("${uri}")]),s._v(' is up!"')]),s._v("\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v("\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("echo")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"  ERROR: unable to connect to '),a("span",{staticClass:"hljs-variable"},[s._v("${uri}")]),s._v('"')]),s._v(" >&2\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("exit")]),s._v(" 1\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("fi")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("done")]),s._v("\n"),a("span",{staticClass:"hljs-built_in"},[s._v("echo")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"All hosts are up"')]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("fi")]),s._v("\n\n"),a("span",{staticClass:"hljs-built_in"},[s._v("echo")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"Waiting for '),a("span",{staticClass:"hljs-variable"},[s._v("${waitAfterHosts}")]),s._v(' seconds."')]),s._v("\nsleep "),a("span",{staticClass:"hljs-variable"},[s._v("$waitAfterHosts")]),s._v("\n\n"),a("span",{staticClass:"hljs-built_in"},[s._v("exit")]),s._v(" 0\n")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("Nestjs 中间件实现也很精妙，与 Modules 完美结合起来，由于篇幅限制就不展开了。")]),a("p",[s._v("后端框架已经很成熟了，相反前端发展的就眼花缭乱了，如果前端可以舍弃 ie11 浏览器，我推荐纯 proxy 实现的 "),a("a",{attrs:{href:"https://github.com/ascoders/dob"}},[s._v("dob")]),s._v("，配合 react 效率非常高。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"057f":function(s,t,a){var e=a("c6b6"),n=a("fc6a"),l=a("241c").f,i=a("f36a"),r="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],v=function(s){try{return l(s)}catch(t){return i(r)}};s.exports.f=function(s){return r&&"Window"==e(s)?v(s):l(n(s))}},"0656":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("React")])]),a("h2",{attrs:{id:"ru-keng-react-qian-mei-you-ren-hui-gao-su-ni-de-shi"}},[s._v("入坑 React 前没有人会告诉你的事 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ru-keng-react-qian-mei-you-ren-hui-gao-su-ni-de-shi"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读的文章是一个组合：")])]),a("p",[s._v("一篇是 Gianluca Guarini 写的 《"),a("a",{attrs:{href:"https://medium.com/@gianluca.guarini/things-nobody-will-tell-you-about-react-js-3a373c1b03b4"}},[s._v("Things nobody will tell you about React.js")]),s._v("》，我将它译作 《那些入坑 React 前没有人会提醒你的事》，因为作者行文中明显带着对 React 的批判和失望。")]),a("p",[s._v("另一篇则是 Facebook 员工，也是 Redux 作者的 Dan Abramov 针对上文的回复 《"),a("a",{attrs:{href:"https://medium.com/@dan_abramov/hey-thanks-for-feedback-bf9502689ca4"}},[s._v("Hey, thanks for feedback!")]),s._v("》。")]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i3/O1CN01E6lPh91tyJBVCAH5B_!!6000000005970-2-tps-630-315.png",width:"500",alt:"logo"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("我为什么要选这篇文章呢？")]),a("p",[s._v("我们团队最早在 2014 年中就确定了 React 作为未来的发展方向，那个时候很多人都还在感叹 Angular（那时候还是 Angular 1）是一个多么超前的框架，很多人甚至听都没有听说过 React。")]),a("p",[s._v("在不到三年的时间里，React 社区迅速的发展壮大，许多 Angular、Ember、Knockout 等框架的拥趸，或主动或被动的都逐渐开始向 React 看齐。")]),a("p",[s._v("站在 React 已经繁荣昌盛、无需四处布道宣传的今天，我们不妨冷静下来问问自己，React 真的是一个完美的框架吗？社区里一直不缺少吐槽的声音，这周我们就来看看，React 到底有哪些槽点。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[s._v("Gianluca Guarini 着重吐槽的点在于：")]),a("ul",[a("li",[s._v("React 项目文件组织规范不统一，社区中 Starter Kit 太多（100+），新手不知道该怎么组织文件")]),a("li",[s._v("由于 React 只关心 View 层，开发者就要面临选择 mobx 还是 redux 的纠结，无论选择哪种都会带来一系列的问题（重新配置构建脚本，更新 eslint 规则等）")]),a("li",[s._v("如果选了 mobx，会发现 mobx 无法保证自己的 store 不被外部更新（官方建议是加上特殊的前缀）")]),a("li",[s._v("如果选了 redux，会发现要实现同样的功能需要写很多的重复代码（这也是为什么社区中有海量的 redux helper 存在）")]),a("li",[s._v("路由用起来也很蛋疼，因为 React Router 几乎是社区中唯一的选择，但是这货版本更新太快，一不小心就用了废弃的 API")]),a("li",[s._v("用 JSX 的时候总是要嵌很多没必要的 "),a("code",[s._v("div")]),s._v(" 或 "),a("code",[s._v("span")])]),a("li",[s._v("要上手一个 React 应用，要配置很多的构建工具和规则才能看到效果")]),a("li",[s._v("...")])]),a("p",[s._v("Dan Abramov 的回复：")]),a("ul",[a("li",[s._v("「React 16.0 引入的 Fiber 架构会导致现有代码全部需要重构」的说法是不对的，因为新的架构做到了向后兼容，而且 Facebook 内部超过 3 万个组件都能无痛迁移到新架构上")]),a("li",[s._v("缺少统一脚手架的问题，可以通过 create-react-app 解决")]),a("li",[s._v("觉得 redux 和 mobx 繁琐的话，对于刚刚上手的小应用不建议使用")]),a("li",[s._v("React Router 升级太频繁？2015 年发布的 1.0，2016 年 2 月发布的 2.0，2016 年 10 月发布的 3.0。虽然 4.0 紧接着 3.0 马上就发布了，但是 React Router 很早就已经公布了这样的升级计划。")]),a("li",[s._v("...")])]),a("pre",[a("code",{staticClass:"hljs"},[s._v("\n")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本次提出独到观点的同学有："),a("a",{attrs:{href:"https://www.zhihu.com/people/rccoder/answers"}},[s._v("@rccoder")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/turbe-xue"}},[s._v("@Turbe Xue")]),s._v(" "),a("a",{attrs:{href:"https://github.com/Pines-Cheng"}},[s._v("@Pines-Cheng")]),s._v(" "),a("a",{attrs:{href:"https://github.com/jin5354"}},[s._v("@An Yan")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/5ac53c9c0484e83672e1c1716bdf0ff9"}},[s._v("@淡苍")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/3ec85a04bc9eaa35b1830874cc463a52"}},[s._v("@黄子毅")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/twobin/pins/posts"}},[s._v("@宾彬")]),s._v(" "),a("a",{attrs:{href:"https://github.com/cisen"}},[s._v("@cisen")]),s._v(" "),a("a",{attrs:{href:"https://github.com/ybning"}},[s._v("@Bobo")]),s._v(" 精读由此归纳。")]),a("p",[s._v("很高兴能看到不少新同学积极参与到精读的讨论中来，每一个人的声音都是社区发展的一份力量。")]),a("ul",[a("li",[a("strong",[s._v("React 上手困难")])])]),a("p",[s._v("很早之前我们去四处布道 React 的时候，都会强调 React 很简单，因为它的 public API 非常之少，React 完整的文档 1 个小时就能看完。")]),a("p",[s._v("那么说「React 上手困难」又是从何谈起呢？参与精读的同学中有不少都有 Vue 的使用经验（包括本周吐槽文的作者），所以不免会把两个框架上手的难易程度放在心里做个对比。")]),a("p",[s._v("都说没有对比就没有伤害，大家普遍的观点是 Vue 上手简单、文档清晰、构建工具完善、脚手架统一……再反观 React，虽然 Dan 在文章里做了不少解释，但引用 @An Yan 的原话，『他也只是在说「事情没有那么糟糕」』。")]),a("p",[s._v("所以说，大家认为的 React 上手困难，很大程度上不是 React 本身，而是 React 附带的生态圈野蛮发展太快，导致新人再进入的时候普遍感觉无所适从。虽然官方的 create-react-app 缓解了这一问题，但还没有从根本程度上找到解法。")]),a("ul",[a("li",[a("strong",[s._v("状态管理的迷思")])])]),a("p",[s._v("在今时今日的前端圈子里，说 React 不说 Redux 就像说 Ruby 却不说 Rails 一样，总感觉缺点儿什么。")]),a("p",[s._v("因为 React 将自己定位成 View 层的解决方案，所以对于中大型业务来说一个合适的状态管理方案是不可或缺的。从最早的 Backbone Model，到 Flux，再到 reflux、Redux，再到 mobx 和 redux-observable，你不得不感叹 React 社区的活力是多么强大。")]),a("p",[s._v("然而当你真正开始做新项目架构的时候，你到底是选 Redux 还是 Mobx，疑惑是封装解决方案如 dva 呢？ @淡苍 认为，Redux 与 MobX，React 两大状态管理方案，各有千秋，Redux 崇尚自由，扩展性好，却也带来了繁琐，一个简单的异步请求都必须引入中间件才能解决，MobX 上手容易，Reactive 避免不必要的渲染，带来性能提升，但相对封闭，不利于业务抽象，缺少最佳实践。至于如何选择？根据具体场景与需求判断。")]),a("p",[s._v("不难看出，想要做好基于 React 的前端架构，你不仅需要对自己的业务了如指掌，还需要对各种解决方案的特性以及适合怎样的业务形态了如指掌。在 React 社区，永远没有标准解决方案。")]),a("ul",[a("li",[a("strong",[s._v("Redux 亦非万能解")])])]),a("p",[s._v("Redux 在刚刚推出的时候凭借酷炫的 devtool 和时间旅行功能，瞬间俘获了不少工程师的心。")]),a("p",[s._v("但当你真正开始使用 Redux 的时候，你会发现你不仅需要学习很多新的概念，如 reducer、store、dispatch、action 等，还有很多基础的问题都没有标准解法，最典型的例子就是异步 action。虽然 Redux 的 middleware 机制提供了实现异步 action 的可能性，但是对于小白来说去 dispatch 一个非 Object 类型的 action 之前需要先了解 thunk 的概念，还要给 Redux 添加一个 redux-thunk 中间件实属难题。")]),a("p",[s._v("不仅如此，在前端工程中常见的表单处理，Redux 社区也一直没有给出完美的解法。前有简单的 util 工具 redux-form-utils，后有庞大复杂的 redux-form，还有 rc-component 实现的一套基于 HOC 的解决方案。若没有充分的了解和调研，你将如何选择？")]),a("p",[s._v("这还没有提到最近非常火热的 redux-saga 和 redux-observable，虽然 Dan 说如果你不需要的话完全可以不用了解，但是如果你不了解他们的话怎么知道自己需不需要呢？")]),a("ul",[a("li",[a("strong",[s._v("React 与 Vue 之争")])])]),a("p",[s._v("Vue 之所以觉得入门简单，因为一开始就提供了 umd 的引入方式，这与传统 js 开发的习惯一致，以及 Avalon 多年布道的铺垫，大家可以很快接受一个不依赖于构建的 Vue。")]),a("p",[s._v("React 因为引入了 JSX 概念，本可以以 umd 方式推广，但为了更好的 DX 所以上来就推荐大家使用 JSX，导致新手觉得门槛高。")]),a("p",[s._v("React + Mobx 约等于一个复杂的 Vue，但这不是抛弃 React 的理由。为什么大家觉得 Vuex 比 Redux 更适合 Vue 呢？因为 Vuex 简单，而 Redux 麻烦，这已经将两个用户群划分开了。")]),a("p",[s._v("一个简单的小公司，就是需要这种数据流简单，不需要编译，没有太多技术选型要考虑的框架，他们看中的是开发效率，可维护性并不是第一位，这点根本性的导致了这两类人永远也撮合不到一块。")]),a("p",[s._v("而 Vue 就是解决了这个问题，帮助了那么多开发者，仅凭这点就非常值得称赞，而我们不应该从 React 维护性的角度去抨击谁好谁坏，因为站在我们的角度，大部分中小公司的开发者是不 care 的。")]),a("p",[s._v("React 用户圈汇集了一批高端用户，他们不断探索技术选型，为开源社区迸发活力，如果大家都转向 Vue，这块摊子就死了，函数式、响应式编程的演进也会从框架的大统一而暂时终止，起码这是不利于技术进步的，也是不可能发生的。Vue 在自己的领域做好，将 React 敏捷思想借鉴过来，帮助更多适合场景的开发者，应该才是作者的目的。")]),a("ul",[a("li",[a("strong",[s._v("tips：如何在开源社区优雅的撕逼")])])]),a("p",[s._v("开源社区撕逼常有，各种嘴炮也吃充斥在社区里，甚至有人在 Github 上维护了一份开源社区撕逼历史。虽然说做技术的人有争论很正常，但是撕的有理有据令人信服的案例却不多。这次 Facebook 的员工 Dan Abramov 就做出了很好的表率。面对咄咄逼人的文章，逐条回复，不回避、不扯淡且态度保持克制，实属难能可贵。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("React 开发者们也不要因为产生了 Mobx 这种亲 Vue 派而产生焦虑，这也是对特定业务场景的权衡，未来更多更好的数据流方案还会继续诞生，技术社区对技术的优化永无止尽。")]),a("br"),a("p",[s._v("比如 "),a("a",{attrs:{href:"https://github.com/mobxjs/mobx-state-tree"}},[s._v("mobx-state-tree")]),s._v(" 就是一种 redux 与 mobx 结合的大胆尝试，作者在很早之前也申明了，Mobx 一样可以做时间旅行，只要遵守一定的开发规范。")]),a("br"),a("p",[s._v("最后打个比方：安卓手机在不断进步，体验越来越逼近苹果，作为一个逼格高的用户，果断换苹果吧。但作为 java 开发人员的你，是否要为此换到 oc 流派呢？换，或者不换，其实都一样，安卓和苹果已经越来越像了。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"0816":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("html")])]),a("h2",{attrs:{id:"html"}},[s._v("html "),a("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[s._v("§")])]),a("br"),a("p",[a("em",[s._v("文档版本：v1.0")])]),a("p",[a("em",[s._v("修订时间：2019年10月11日")])]),a("p",[a("em",[s._v("范围： 各个产品研发侧前端产品")])]),a("table",{staticClass:"table"},[a("thead",[a("tr",[a("th",[s._v("版本")]),a("th",[s._v("修改人")]),a("th",[s._v("修订内容")]),a("th",[s._v("时间")])])]),a("tbody",[a("tr",[a("td",[s._v("v1.0")]),a("td",[s._v("王来彬")]),a("td",[s._v("第一版发布")]),a("td",[s._v("2019-10-11")])])])]),a("blockquote",[a("p",[a("strong",[s._v("特别说明：")])]),a("ul",[a("li",[s._v("协作开发及分工: 根据各个模块, 同时根据页面相似程序, 事先写好大体框架文件, 分配给前端人员实现内部结构&表现&行为; 共用html组件, 协作开发过程中， 此文件不可随意修改.")])])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容")])]),a("h2",{attrs:{id:"nei-rong"}},[s._v("内容 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong"}},[s._v("§")])]),a("br"),a("h3",{attrs:{id:"1.-dai-ma-ge-shi"}},[s._v("1. 代码格式 "),a("a",{staticClass:"header-anchor",attrs:{href:"#1.-dai-ma-ge-shi"}},[s._v("§")])]),a("pre",[a("code",[s._v('* 每个块级、列表、表格元素单独占一行，每个子元素都相对父元素缩进。\n* 纯文本在 HTML 标签结束之前不要换行。\n* 缩进: 统一两个空格缩进（总之缩进统一即可），不要使用 Tab 或者 Tab、空格混搭。\n* HTML 属性值使用双引号。\n* 结构、样式、行为分离: 尽量确保文档和模板只包含 HTML 结构，样式都放到样式表里，行为都放到脚本里。\n* 文件编码: 使用不带 BOM 的 UTF-8 编码,在 HTML中指定编码 <meta charset="utf-8">.\n* 充分利用html自身属性及样式继承原理减少代码量, 比如:\n')])]),a("pre",[a("code",{staticClass:"hljs language-html"},[s._v("\n"),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("ul")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("class")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"list"')]),s._v(">")]),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("li")]),s._v(">")]),s._v("这儿是标题列表"),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("span")]),s._v(">")]),s._v("2010-09-15"),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("span")]),s._v(">")]),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("ul")]),s._v(">")]),s._v("\n定义 ul.list li{position:relative}  ul.list li span{position:absolute; right:0}\n即可实现日期居右显示\n\n")])]),a("pre",[a("code",[s._v("* 书写代码前, 考虑并提高样式重复使用率。\n* 一律使用小写字母\n* 省略外链资源 URL 协议部分: 省略外链资源（图片及其它媒体资源）URL 中的 http / https 协议，使 URL 成为相对地址，避免Mixed Content 问题，减小文件字节数。其它协议（ftp 等）的 URL 不省略。\n* 语言属性: lang属性的取值应该遵循 BCP 47 - Tags for Identifying Languages。\n* 文档类型: 标准模式（standard mode）的声明， 这样能够确保在每个浏览器中拥有一致的表现。\n* 引号: 属性的定义，统一使用双引号。\n* 统一注释: 可以根据编译器统一生成注释。\n")])]),a("br"),a("h3",{attrs:{id:"2.-ming-ming-gui-ze"}},[s._v("2. 命名规则 "),a("a",{staticClass:"header-anchor",attrs:{href:"#2.-ming-ming-gui-ze"}},[s._v("§")])]),a("pre",[a("code",[s._v("* 头：header\n* 内容：content/container\n* 尾：footer\n* 导航：nav\n* 侧栏：sidebar\n* 栏目：column\n* 页面外围控制整体布局宽度：wrapper\n* 左右中：left right center\n* 登录条：loginbar\n* 标志：logo\n* 广告：banner\n* 页面主体：main\n* 热点：hot\n* 新闻：news\n* 下载：download\n* 子导航：subnav\n* 菜单：menu\n* 子菜单：submenu\n* 搜索：search\n* 友情链接：friendlink\n* 页脚：footer\n* 版权：copyright\n* 滚动：scroll\n* 内容：content\n* 标签页：tab\n* 文章列表：list\n* 提示信息：msg\n* 小技巧：tips\n* 栏目标题：title\n* 加入：joinus\n* 指南：guild\n* 服务：service\n* 注册：regsiter\n* 状态：status\n* 投票：vote\n* 合作伙伴：partner\n")])]),a("br"),a("h3",{attrs:{id:"3.-biao-qian-shi-yong"}},[s._v("3. 标签使用 "),a("a",{staticClass:"header-anchor",attrs:{href:"#3.-biao-qian-shi-yong"}},[s._v("§")])]),a("pre",[a("code",[s._v("* 自闭合（self-closing）标签，无需闭合 ( 例如： img input br hr 等 )。\n* 可选的闭合标签（closing tag），需闭合 ( 例如：</li> 或 </body> )。\n* 表格table: 互相嵌套时，严格按照的规范，对于单独的一个<table>来说，<table><tr>对齐，<td> 缩进两个半角空格，<td> 中如果还有嵌套的表格，<table>也缩进两个半角空格，如果<td>中没有任何嵌套的表格，</td> 结束标记应该与 <td> 处于同一行，不要换行\n")])]),a("pre",[a("code",{staticClass:"hljs language-html"},[s._v("  /*recommended*/\n\n  "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("td")]),s._v(">")]),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("img")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("src")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("”../images/sample.gif”")]),s._v(">")]),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("td")]),s._v(">")]),s._v("\n\n  /*not recommended*/\n\n  "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("td")]),s._v(">")]),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("img")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("src")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("”../images/sample.gif”")]),s._v(">")]),s._v(" \n  "),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("td")]),s._v(">")]),s._v("\n\n  这是因为浏览器认为换行相当于一个半角空格，以上不规范的写法相当于无意中增加一个半角空格，如果确实有必要增加一个半角空格，也应该这样写： \n  "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("td")]),s._v(">")]),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("img")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("src")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("”../images/sample.gif”")]),s._v(">")]),s._v(" "),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("td")]),s._v(">")]),s._v("\n")])]),a("pre",[a("code",[s._v("* 链接a: 网站中的链接路径全部采用相对路径，一般链接到某一目录下的缺省文件的链接路径不必写全名。\n")])]),a("pre",[a("code",{staticClass:"hljs language-html"},[s._v("  /*recommended*/\n\n  "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("a")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("href")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("”aboutus/index.htm”")]),s._v(">")]),s._v("\n\n  /*not recommended*/\n\n  "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("a")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("href")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("”aboutus/”")]),s._v(">")]),s._v("\n\n  所有内页指向首页的链接写成"),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("a")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("href")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("”/”")]),s._v(">")]),s._v("\n  在浏览器里，当我们点击空链接时，它会自动将当前页面重置到首端，从而影响用户正常的阅读内容，我们用代码“javascript:void(null)”代替原来的“#”标记\n\n")])]),a("pre",[a("code",[s._v("* Alt和Title\n")])]),a("pre",[a("code",{staticClass:"hljs language-html"},[s._v("\n  "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("p")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("Title")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"给链接文字提示"')]),s._v(">")]),s._v("文字"),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("p")]),s._v(">")]),s._v("\n\n  "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("a")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("href")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"#"')]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("Title")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"给链接文字提示"')]),s._v(">")]),s._v("文字"),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("a")]),s._v(">")]),s._v("\n\n  "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("img")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("src")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"图片.gif"')]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("alt")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"给图片提示"')]),s._v(">")]),s._v(" \n\n")])]),a("pre",[a("code",[s._v("* 尽量减少标签数量。\n")])]),a("br"),a("h3",{attrs:{id:"4.-tu-pian-chu-li"}},[s._v("4. 图片处理 "),a("a",{staticClass:"header-anchor",attrs:{href:"#4.-tu-pian-chu-li"}},[s._v("§")])]),a("pre",[a("code",[s._v("* banner\n  > 全尺寸banner为468X60px，半尺寸banner为234X60px，小banner为88X31px。\n    另外120X90，120X60也是小图标的标准尺寸。全尺寸banner不超过14K。\n    普遍的banner尺寸760X100，750X120，468X60，468X95，728X90，585X140\n    次级页的pip尺寸360X300，336X280\n    游标:100X100或120X120\n\n*  LOGO的国际标准规范\n  > 为了便于INTERNET上信息的传播，一个统一的国际标准是需要的。实际上已经有了这样的一整套标准。其中关于网站的LOGO，目前有三种规格：\n    88*31 这是互联网上最普遍的LOGO规格。\n    120*60 这种规格用于一般大小的LOGO。\n    120*90 这种规格用于大型LOGO。\n*  页面修饰图片处理: 图片经过优化以加快下载的速度,有较佳的视觉空间效果，用图要与页面风格、页面内容相符；制作精美，细节处理得当。\n")])]),a("br"),a("h3",{attrs:{id:"5.-class-yu-id"}},[s._v("5. Class 与 ID "),a("a",{staticClass:"header-anchor",attrs:{href:"#5.-class-yu-id"}},[s._v("§")])]),a("pre",[a("code",[s._v("* class 应以功能或内容命名，不以表现形式命名.\n* class 与 id 单词字母小写，多个单词组成时，采用中划线-分隔.\n* 使用唯一的 id 作为 Javascript hook, 同时避免创建无样式信息的 class.\n")])]),a("br"),a("h3",{attrs:{id:"6.-shu-xing-shun-xu"}},[s._v("6. 属性顺序 "),a("a",{staticClass:"header-anchor",attrs:{href:"#6.-shu-xing-shun-xu"}},[s._v("§")])]),a("pre",[a("code",[s._v("HTML 属性应该按照特定的顺序出现以保证易读性。\n* 1. id\n* 2. class\n* 3. name\n* 4. data-xxx\n* 5. src, for, type, href\n* 6. title, alt\n* 7. aria-xxx, role\n")])]),a("br"),a("h3",{attrs:{id:"7.-zhu-shi"}},[s._v("7. 注释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#7.-zhu-shi"}},[s._v("§")])]),a("pre",[a("code",{staticClass:"hljs language-html"},[s._v("  "),a("span",{staticClass:"hljs-comment"},[s._v('\x3c!--<div class="sell"></div>--\x3e')]),s._v("\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("\x3c!-- HTML推荐注释，注释符号一上一下覆盖整个要注释的区块，多行注释 --\x3e")]),s._v("\n  "),a("span",{staticClass:"hljs-comment"},[s._v('\x3c!--\n  <div class="sell">\n      <p>多行注释</p>\n      <p>多行注释</p>\n      <p>多行注释</p>\n      <p>多行注释</p>\n  </div>\n--\x3e')]),s._v("\n\n")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("参考文档")])]),a("h4",[s._v("参考文档")]),a("ul",[a("li",[a("code",[s._v("html")]),s._v(": 主要有缩进，标签，加载顺序等等。可以参考： "),a("ul",[a("li",[a("a",{attrs:{href:"http://imweb.github.io/CodeGuide/"}},[s._v("Code Guide")])])])])]),a("h6",[s._v("ps:建议大家在各个产品，严格遵守规范，以便后期的维护以及代码的健壮性等。")]),a("h6",[s._v("如果文档有更好的补充和好的建议，欢迎联系@王来彬")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"088c":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("Adapter")])]),a("h2",{attrs:{id:"chou-xiang-gong-han-gua-pei-qi-mo-shi"}},[s._v("抽象工厂（适配器模式） "),a("a",{staticClass:"header-anchor",attrs:{href:"#chou-xiang-gong-han-gua-pei-qi-mo-shi"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("Adapter（适配器模式）属于结构型模式，别名 "),a("code",[s._v("wrapper")]),s._v("，结构性模式关注的是如何组合类与对象，以获得更大的结构，我们平常工作大部分时间都在与这种设计模式打交道。")])]),a("p",[a("strong",[s._v("意图：将一个类的接口转换成客户希望的另一个接口。Adapter 模式使得原本由于接口不兼容而不能在一起工作的那些类可以一起工作。")])]),a("br"),a("p",[s._v("这个设计模式的意图很好懂，就是把接口不兼容问题抹平。注意，也仅仅能解决接口不一致的问题，而不能解决功能不一致的问题。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h3",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),a("br"),a("p",[a("strong",[s._v("接口转换器")])]),a("p",[s._v("插座的种类很多，我们都用过许多适配器，将不同的插头进行转换，可以在不替换插座的情况下正常使用。")]),a("br"),a("p",[s._v("USB 接口转换也同样精彩，有将 TypeC 接口转换为 TypeA 的，也有将 TypeA 接口转换为 TypeC 的，支持双向转换。")]),a("br"),a("p",[s._v("接口转换器就是我们在生活中使用到的适配器模式，因为厂商并没有生产一个新的插座，我们也没有因为接口不适配而换一个手机，一切只需要一个接口转换器即可，这就是运用设计模式的收益。")]),a("br"),a("p",[a("strong",[s._v("数据库 ORM")])]),a("p",[s._v("ORM 屏蔽了 SQL 这一层，带来的好处是不需要理解不同 SQL 语法之间的区别，对于通用功能，ORM 会根据不同的平台，比如 Postgresql、Mysql 进行 SQL 的转换。")]),a("br"),a("p",[s._v("对 ORM 来说，屏蔽不同平台的差异，就是利用适配器模式做到的。")]),a("br"),a("p",[a("strong",[s._v("API Deprecated")])]),a("p",[s._v("当一个广泛使用的库进行了含有 break change 的升级时，往往要留给开发者足够的时间去升级，而不能升级后就直接挂掉，因此被废弃的 API 要标记为 "),a("code",[s._v("deprecated")]),s._v("，而这种被废弃标记的 API 的实际实现，往往是使用新的 API 替代，这种场景正是使用了适配器模式，将新的 API 适配到旧的 API，实现 API Deprecated。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h3",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[s._v("上面三个例子都满足下面两个条件：")]),a("ul",[a("li",[s._v("API 不兼容：因为接口的不同；数据库 SQL 语法的不同；框架 API 的不同。")]),a("li",[s._v("但能力已支持：插座都拥有充电或读取能力；不同的 SQL 都拥有查询数据库能力；新 API 覆盖了旧 API 的能力。")])]),a("p",[s._v("这样就可以通过适配器满足 Adapter 的意图：")]),a("br"),a("p",[a("strong",[s._v("意图：将一个类的接口转换成客户希望的另一个接口。Adapter 模式使得原本由于接口不兼容而不能在一起工作的那些类可以一起工作。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h3",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("p",[s._v("适配器的实现分为继承与组合模式。")]),a("br"),a("p",[s._v("下面是名词解释：")]),a("ul",[a("li",[a("code",[s._v("Adapter")]),s._v(" 适配器，把 "),a("code",[s._v("Adeptee")]),s._v(" 适配成 "),a("code",[s._v("Target")]),s._v("。")]),a("li",[a("code",[s._v("Adaptee")]),s._v(" 被适配的内容，比如不兼容的接口。")]),a("li",[a("code",[s._v("Target")]),s._v(" 适配为的内容，比如需要用的接口。")])]),a("br"),a("p",[s._v("继承：")]),a("img",{attrs:{width:"400",src:"https://img.alicdn.com/tfs/TB1iy7Gk4vbeK8jSZPfXXariXXa-1590-518.png"}}),a("p",[s._v("适配器继承 "),a("code",[s._v("Adaptee")]),s._v(" 并实现 "),a("code",[s._v("Target")]),s._v("，适用场景是 "),a("code",[s._v("Adaptee")]),s._v(" 与 "),a("code",[s._v("Target")]),s._v(" 结构类似的情况，因为这样只需要实现部分差异化即可。")]),a("br"),a("p",[s._v("组合：")]),a("img",{attrs:{width:"400",src:"https://img.alicdn.com/tfs/TB1SrW21EY1gK0jSZFMXXaWcVXa-1524-500.png"}}),a("p",[s._v("组合的拓展性更强，但工作量更大，如果 "),a("code",[s._v("Target")]),s._v(" 与 "),a("code",[s._v("Adaptee")]),s._v(" 结构差异较大，适合用组合模式。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h3",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("下面例子使用 typescript 编写。")]),a("br"),a("p",[s._v("继承：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-keyword"},[s._v("interface")]),s._v(" ITarget {\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 标准方式是 hello")]),s._v("\n  "),a("span",{staticClass:"hljs-attr"},[s._v("hello")]),s._v(": "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("void")]),s._v("\n}\n\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Adaptee")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 要被适配的类方法叫 sayHello")]),s._v("\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("sayHello")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v("'hello'")]),s._v(")\n  }\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 适配器继承 Adaptee 并实现 ITarget")]),s._v("\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Adapter")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Adaptee")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("implements")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("ITarget")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("hello")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 用 sayHello 对接到 hello")]),s._v("\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("super")]),s._v(".sayHello()\n  }\n}\n")])]),a("br"),a("p",[s._v("组合：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-keyword"},[s._v("interface")]),s._v(" ITarget {\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 标准方式是 hello")]),s._v("\n  "),a("span",{staticClass:"hljs-attr"},[s._v("hello")]),s._v(": "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("void")]),s._v("\n}\n\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Adaptee")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 要被适配的类方法叫 sayHello")]),s._v("\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("sayHello")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v("'hello'")]),s._v(")\n  }\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 适配器继承 Adaptee 并实现 ITarget")]),s._v("\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Adapter")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("implements")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("ITarget")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" adaptee: Adaptee \n\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("constructor")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("adaptee: Adaptee")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".adaptee = adaptee\n  }\n\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("hello")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 用 adaptee.sayHello 对接到 hello")]),s._v("\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".adaptee.sayHello()\n  }\n}\n")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h3",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("使用适配器模式本身就可能是个问题")]),s._v("，因为一个好的系统内部不应该做任何侨界，模型应该保持一致性。只有在如下情况才考虑使用适配器模式：")]),a("ul",[a("li",[s._v("新老系统接替，改造成本非常高。")]),a("li",[s._v("三方包适配。")]),a("li",[s._v("新旧 API 兼容。")]),a("li",[s._v("统一多个类的接口。一般可以结合工厂方法使用。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("适配器模式也符合开闭原则，在不对原有对象改造的前提下，构造一个适配器就能完成模块衔接。")]),a("p",[s._v("适配器模式的实现分为类与对象模式，类模式用继承，对象模式用组合，分别适用于 "),a("code",[s._v("Adaptee")]),s._v(" 与 "),a("code",[s._v("Target")]),s._v(" 结构相似与结构差异较大的场景，在任何情况下，组合模式都是灵活性最高的。")]),a("p",[s._v("最后用一张图概括一下适配器模式的思维：")]),a("img",{attrs:{width:"400",src:"https://img.alicdn.com/tfs/TB16L2n1AY2gK0jSZFgXXc5OFXa-1254-630.png"}})],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"08ad":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("svgicon")])]),a("h2",{attrs:{id:"svgicon"}},[s._v("svgicon "),a("a",{staticClass:"header-anchor",attrs:{href:"#svgicon"}},[s._v("§")])]),a("br"),a("p",[a("em",[s._v("文档版本：v1.0")])]),a("p",[a("em",[s._v("修订时间：2019年10月11日")])]),a("p",[a("em",[s._v("范围： 各个产品研发侧前端产品")])]),a("table",{staticClass:"table"},[a("thead",[a("tr",[a("th",[s._v("版本")]),a("th",[s._v("修改人")]),a("th",[s._v("修订内容")]),a("th",[s._v("时间")])])]),a("tbody",[a("tr",[a("td",[s._v("v1.0")]),a("td",[s._v("王来彬")]),a("td",[s._v("第一版发布")]),a("td",[s._v("2019-10-11")])])])]),a("blockquote",[a("p",[a("strong",[s._v("特别说明：")])]),a("ul",[a("li",[s._v("前端项目使用"),a("span",[a("a",{attrs:{href:"http://www.iconfont.cn/"}},[s._v("iconfont")])]),s._v("字体库管理相关图标，下述以静态脱敏为例")])])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("增加新的图标")])]),a("h3",{attrs:{id:"zeng-jia-xin-de-tu-biao-dao-xiang-guan-xiang-mu"}},[s._v("增加新的图标到相关项目 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zeng-jia-xin-de-tu-biao-dao-xiang-guan-xiang-mu"}},[s._v("§")])]),a("br"),a("ul",[a("li",[s._v("步骤一：搜索相关图标；")]),a("li",[s._v("步骤二：加入购物车；")]),a("li",[s._v("步骤三：进入购物车，添加至相关项目；")]),a("li",[s._v("步骤四：进入相关项目，下载至本地；")]),a("li",[s._v("步骤五：覆盖相关项目中的"),a("code",[s._v("src/style/fonts/")]),s._v("目录文件即可。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引用图标")])]),a("h3",{attrs:{id:"xiang-mu-zhong-yin-yong-tu-biao"}},[s._v("项目中引用图标 "),a("a",{staticClass:"header-anchor",attrs:{href:"#xiang-mu-zhong-yin-yong-tu-biao"}},[s._v("§")])]),a("br"),a("p",[s._v("项目中采用"),a("strong",[s._v("symbol引用")]),s._v("方式")]),a("p",[s._v("这是一种全新的使用方式，应该说这才是未来的主流，也是平台目前推荐的用法。相关介绍可以参考这篇"),a("a",{attrs:{href:"http://www.iconfont.cn/help/detail?spm=a313x.7781069.1998910419.15&helptype=code"}},[s._v("文章")]),s._v(" 这种用法其实是做了一个svg的集合，与上面两种相比具有如下特点：")]),a("ul",[a("li",[s._v("支持多色图标了，不再受单色限制。")]),a("li",[s._v("通过一些技巧，支持像字体那样，通过"),a("code",[s._v("font-size")]),s._v(","),a("code",[s._v("color")]),s._v("来调整样式。")]),a("li",[s._v("兼容性较差，支持 ie9+,及现代浏览器。")]),a("li",[s._v("浏览器渲染svg的性能一般，还不如png。")])]),a("p",[a("strong",[s._v("使用步骤如下：")])]),a("br"),a("p",[a("strong",[s._v("步骤一：拷贝项目下面生成的symbol代码：")])]),a("pre",[a("code",{staticClass:"hljs language-html"},[s._v("//at.alicdn.com/t/font_8d5l8fzk5b87iudi.js\n")])]),a("br"),a("p",[a("strong",[s._v("步骤二：加入通用css代码（引入一次就行）：")])]),a("pre",[a("code",{staticClass:"hljs language-html"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("style")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("type")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"text/css"')]),s._v(">")]),a("span",{staticClass:"css"},[s._v("\n    "),a("span",{staticClass:"hljs-selector-class"},[s._v(".icon")]),s._v(" {\n       "),a("span",{staticClass:"hljs-attribute"},[s._v("width")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1em")]),s._v("; "),a("span",{staticClass:"hljs-attribute"},[s._v("height")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1em")]),s._v(";\n       "),a("span",{staticClass:"hljs-attribute"},[s._v("vertical-align")]),s._v(": -"),a("span",{staticClass:"hljs-number"},[s._v("0.15em")]),s._v(";\n       fill: currentColor;\n       "),a("span",{staticClass:"hljs-attribute"},[s._v("overflow")]),s._v(": hidden;\n    }\n")]),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("style")]),s._v(">")]),s._v("\n")])]),a("br"),a("p",[a("strong",[s._v("步骤三：挑选相应图标并获取类名，应用于页面：")])]),a("pre",[a("code",{staticClass:"hljs language-html"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("svg")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("class")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"icon"')]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("aria-hidden")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"true"')]),s._v(">")]),s._v("\n    "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("use")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("xlink:href")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"#icon-xxx"')]),s._v(">")]),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("use")]),s._v(">")]),s._v("\n"),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("svg")]),s._v(">")]),s._v("\n")])])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"0de7":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"})},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"15f8":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[s._m(0),s._m(1),s._m(2),s._m(3),s._m(4),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h3",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),a("br"),a("p",[a("strong",[s._v("公司组织关系树")])]),a("p",[s._v("公司组织关系可能分为部门与人，其中人属于部门，有的人有下属，有的人没有下属。如果我们统一将部门、人抽象为组织节点，就可以方便的统计某个部门下有多少人、财务数据等等，而不用关心当前节点是部门还是人。")]),a("br"),a("p",[a("strong",[s._v("操作系统的文件夹与文件")])]),a("p",[s._v("操作系统的文件夹与文件也是典型的树状结构，为了方便递归出文件夹内文件数量或者文件总大小，我们最好设计的时候就将文件夹与文件抽象为文件，这样每个节点都拥有相同的方法添加、删除、查找子元素，而不需要关心当前节点是文件夹或是文件。")]),a("br"),a("p",[a("strong",[s._v("搭建平台的组件与容器")])]),a("p",[s._v("容器与组件的关系很小，用户常常认为容器也是一种组件，但搭建平台实现时，容器与组件稍有不同，不同之处在于容器可以嵌套子元素，而组件不可以。如果因此搭建平台就将组件分为容器与组件，会导致 API 割裂为两套，不利于组件开发者维护与用户理解，比较好的设计思路是将组件与容器统一看成组件，组件只是一种没有子元素的特殊容器，这样组件与容器就可以拥有相同的 API，统一理解与操作了。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h3",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("意图：将对象组合成树形结构以表示 “部分 - 整体” 的层次结构。Composite 使得用户对单个对象和组合对象的使用具有一致性。")])]),a("br"),a("p",[s._v("比较好理解，组合是指多个对象虽然有一定差异，但共同组合成了一个树形结构，那么对象之间就一定存在 “部分 - 整体” 的关系，组合模式要求我们抽象一个对象 "),a("code",[s._v("Component")]),s._v(" 作为统一操作模型，叶子结点与非叶子结点都实现了所有功能，即便是没有子元素的叶子结点，为了强调透明性，还是具备比如 "),a("code",[s._v("getChildren")]),s._v(" 方法，只不过永远都返回 "),a("code",[s._v("null")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h3",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("img",{attrs:{width:"600",src:"https://img.alicdn.com/tfs/TB19t0j27Y2gK0jSZFgXXc5OFXa-1504-678.png"}}),a("p",[s._v("其中 "),a("code",[s._v("Component")]),s._v(" 是组合中对象声明接口，一般会实现所有公共类的所有接口，还要提供一个接口管理其子组件。")]),a("br"),a("p",[a("code",[s._v("Leaf")]),s._v(" 表示叶子结点，没有子结点，相应的 "),a("code",[s._v("Composite")]),s._v(" 就是有子结点的节点。")]),a("br"),a("p",[s._v("可以看到，组合模式就是将树状结构中所有节点统一抽象了，"),a("strong",[s._v("我们不需要关心叶子结点与非叶子结点的差异，而可以通过组合模式的抽象屏蔽掉这些差异，统一处理。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h3",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("下面例子使用 typescript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-comment"},[s._v("// 统一的抽象")]),s._v("\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 添加子元素")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("add")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {}\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 获取名称")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getName")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {}\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 获取子元素")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getChildren")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {}\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 非叶子结点")]),s._v("\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Composite")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("add")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("component: Component")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".children.push(component)\n  }\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getName")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".name\n  }\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getChildren")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".children\n  }\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 叶子结点")]),s._v("\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Leaf")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("add")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("component: Component")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Error")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'叶子结点无法添加元素'")]),s._v(")\n  }\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getName")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".name\n  }\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getChildren")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v("\n  }\n}\n")])]),a("br"),a("p",[s._v("最后我们把对所有节点的操作都转为 "),a("code",[s._v("Component")]),s._v(" 对象，而不用关心这个对象具体是 "),a("code",[s._v("Composite")]),s._v(" 或 "),a("code",[s._v("Leaf")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h3",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("组合模式进行了一层抽象，其实增加了复杂系统中业务复杂度。如果 "),a("code",[s._v("Composite")]),s._v(" 与 "),a("code",[s._v("Leaf")]),s._v(" 差异过大，那么统一抽象带来的理解成本是很高的。")]),a("p",[s._v("同时，"),a("code",[s._v("Leaf")]),s._v(" 不得不实现一些仅 "),a("code",[s._v("Composite")]),s._v(" 存在的空函数，比如 "),a("code",[s._v("add")]),s._v(" "),a("code",[s._v("delete")]),s._v("，即便这些方法对他们是无意义的，此时可能要进行统一的无效或错误处理，才能使业务层真正不用感知他们的区别，否则 "),a("code",[s._v("add")]),s._v(" 可能会失败，其本质上还是将节点的区别暴露给了业务层。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("组合模式是针对树状结构这个特定场景的统一抽象方案，对降低系统复杂度有很重要的意义，同时也不要忘了过度抽象是有害的，我们要拿捏其中的度。")]),a("br"),a("p",[s._v("下图做了一个简单的解释：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1_g24rvzO3e4jSZFxXXaP_FXa-1228-614.png"}}),a("p",[s._v("程序中始终关注 "),a("code",[s._v("Component")]),s._v(" 就行了，树状结构的差异已经被抹平。")])],2)],1)},n=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("blockquote",[a("blockquote",[a("p",[s._v("Composite")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"zu-he-mo-shi"}},[s._v("组合模式 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zu-he-mo-shi"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("Composite（组合模式）属于结构型模式，是一种统一管理树形结构的抽象方式。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("意图：将对象组合成树形结构以表示 “部分 - 整体” 的层次结构。Composite 使得用户对单个对象和组合对象的使用具有一致性。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("blockquote",[a("blockquote")])])}],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"1bd1":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("前后端渲染之争")])]),a("h2",{attrs:{id:"qian-hou-duan-xuan-ran-zhi-zheng"}},[s._v("前后端渲染之争 "),a("a",{staticClass:"header-anchor",attrs:{href:"#qian-hou-duan-xuan-ran-zhi-zheng"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读的文章是："),a("a",{attrs:{href:"https://medium.freecodecamp.com/heres-why-client-side-rendering-won-46a349fadb52"}},[s._v("Here's why Client-side Rendering Won")])])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i2/O1CN01PiYRah1qJ8jq4yeZM_!!6000000005474-2-tps-789-351.png",alt:"logo",width:"500"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("我为什么要选这篇文章呢？")]),a("p",[s._v("十年前，几乎所有网站都使用 ASP、Java、PHP 这类做后端渲染，但后来随着 jQuery、Angular、React、Vue 等 JS 框架的崛起，开始转向了前端渲染。从 2014 年起又开始流行了同构渲染，号称是未来，集成了前后端渲染的优点，但转眼间三年过去了，很多当时壮心满满的框架（"),a("a",{attrs:{href:"https://github.com/rendrjs/rendr"}},[s._v("rendr")]),s._v("、"),a("a",{attrs:{href:"https://github.com/lazojs/lazo"}},[s._v("Lazo")]),s._v("）从先驱变成了先烈。同构到底是不是未来？自己的项目该如何选型？我想不应该只停留在追求热门和拘泥于固定模式上，忽略了前后端渲染之“争”的“核心点”，关注如何提升“用户体验”。")]),a("p",[s._v("原文分析了前端渲染的优势，并没有进行深入探讨。我想以它为切入口来深入探讨一下。")]),a("blockquote",[a("p",[s._v("明确三个概念：「后端渲染」指传统的 ASP、Java 或 PHP 的渲染机制；「前端渲染」指使用 JS 来渲染页面大部分内容，代表是现在流行的 SPA 单页面应用；「同构渲染」指前后端共用 JS，首次渲染时使用 Node.js 来直出 HTML。一般来说同构渲染是介于前后端中的共有部分。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("前端渲染的优势")])]),a("ul",[a("li",[s._v("局部刷新。无需每次都进行完整页面请求")]),a("li",[s._v("懒加载。如在页面初始时只加载可视区域内的数据，滚动后 rp 加载其它数据，可以通过 react-lazyload 实现")]),a("li",[s._v("富交互。使用 JS 实现各种酷炫效果")]),a("li",[s._v("节约服务器成本。省电省钱，JS 支持 CDN 部署，且部署极其简单，只需要服务器支持静态文件即可")]),a("li",[s._v("天生的关注分离设计。服务器来访问数据库提供接口，JS 只关注数据获取和展现")]),a("li",[s._v("JS 一次学习，到处使用。可以用来开发 Web、Serve、Mobile、Desktop 类型的应用")])]),a("p",[a("strong",[s._v("后端渲染的优势")])]),a("ul",[a("li",[s._v("服务端渲染不需要先下载一堆 js 和 css 后才能看到页面（首屏性能）")]),a("li",[s._v("SEO")]),a("li",[s._v("服务端渲染不用关心浏览器兼容性问题（随着浏览器发展，这个优点逐渐消失）")]),a("li",[s._v("对于电量不给力的手机或平板，减少在客户端的电量消耗很重要")])]),a("p",[s._v("以上服务端优势其实只有首屏性能和 SEO 两点比较突出。但现在这两点也慢慢变得微不足道了。React 这类支持同构的框架已经能解决这个问题，尤其是 Next.js 让同构开发变得非常容易。还有静态站点的渲染，但这类应用本身复杂度低，很多前端框架已经能完全囊括。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本次提出独到观点的同学有："),a("a",{attrs:{href:"http://link.zhihu.com/?target=https%3A//github.com/javie007"}},[s._v("@javie007")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/c93b7957f6308990c7e3b16103c9356b"}},[s._v("@杨森")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/6c772f9726a914ed4a4b90c88010461c"}},[s._v("@流形")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/078cc0fb15845759ad8295b0f0e50099"}},[s._v("@camsong")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/turbe-xue"}},[s._v("@Turbe Xue")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/5ac53c9c0484e83672e1c1716bdf0ff9"}},[s._v("@淡苍")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/38c3c75795824de1bc5d99cff904a832"}},[s._v("@留影")]),s._v(" "),a("a",{attrs:{href:"http://link.zhihu.com/?target=https%3A//github.com/FrankFang"}},[s._v("@FrankFang")]),s._v(" "),a("a",{attrs:{href:"http://link.zhihu.com/?target=https%3A//github.com/alcat2008"}},[s._v("@alcat2008")]),s._v(" "),a("a",{attrs:{href:"http://link.zhihu.com/?target=https%3A//github.com/xile611"}},[s._v("@xile611")]),s._v(" "),a("a",{attrs:{href:"http://link.zhihu.com/?target=https%3A//github.com/twobin"}},[s._v("@twobin")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/3ec85a04bc9eaa35b1830874cc463a52"}},[s._v("@黄子毅")]),s._v(" 精读由此归纳。")]),a("br"),a("p",[s._v("大家对前端和后端渲染的现状基本达成共识。即前端渲染是未来趋势，但前端渲染遇到了首屏性能和 SEO 的问题。对于同构争议最多，在此我归纳一下。")]),a("br"),a("ul",[a("li",[a("h3",{attrs:{id:"qian-duan-xuan-ran-yu-dao-de-wen-ti"}},[s._v("前端渲染遇到的问题 "),a("a",{staticClass:"header-anchor",attrs:{href:"#qian-duan-xuan-ran-yu-dao-de-wen-ti"}},[s._v("§")])])])]),a("p",[s._v("前端渲染主要面临的问题有两个 "),a("strong",[s._v("SEO")]),s._v("、"),a("strong",[s._v("首屏性能")]),s._v("。")]),a("br"),a("p",[s._v("SEO 很好理解。由于传统的搜索引擎只会从 HTML 中抓取数据，导致前端渲染的页面无法被抓取。前端渲染常使用的 SPA 会把所有 JS 整体打包，无法忽视的问题就是文件太大，导致渲染前等待很长时间。特别是网速差的时候，让用户等待白屏结束并非一个很好的体验。")]),a("br"),a("ul",[a("li",[a("h3",{attrs:{id:"tong-gou-de-you-dian"}},[s._v("同构的优点 "),a("a",{staticClass:"header-anchor",attrs:{href:"#tong-gou-de-you-dian"}},[s._v("§")])])])]),a("p",[s._v("同构恰恰就是为了解决前端渲染遇到的问题才产生的，至 2014 年底伴随着 React 的崛起而被认为是前端框架应具备的一大杀器，以至于当时很多人为了用此特性而"),a("a",{attrs:{href:"http://link.zhihu.com/?target=https%3A//blog.risingstack.com/from-angularjs-to-react-the-isomorphic-way/"}},[s._v("放弃 Angular 1 而转向 React")]),s._v("。然而近 3 年过去了，很多产品逐渐从全栈同构的理想化逐渐转到首屏或部分同构。让我们再一次思考同构的优点真是优点吗？")]),a("br"),a("p",[a("strong",[s._v("1. 有助于 SEO")])]),a("p",[s._v("首先确定你的应用是否都要做 SEO，如果是一个后台应用，那么只要首页做一些静态内容宣导就可以了。如果是内容型的网站，那么可以考虑专门做一些页面给搜索引擎 时到今日，谷歌已经能够可以在爬虫中执行 JS "),a("a",{attrs:{href:"http://link.zhihu.com/?target=https%3A//webmasters.googleblog.com/2014/05/understanding-web-pages-better.html"}},[s._v("像浏览器一样理解网页内容")]),s._v("，只需要往常一样使用 JS 和 CSS 即可。并且尽量使用新规范，使用 pushstate 来替代以前的 hashstate。不同的搜索引擎的爬虫还不一样，要做一些配置的工作，而且可能要经常关注数据，有波动那么可能就需要更新。第二是该做 sitemap 的还得做。相信未来即使是纯前端渲染的页面，爬虫也能很好的解析。")]),a("br"),a("p",[a("strong",[s._v("2. 共用前端代码，节省开发时间")])]),a("p",[s._v("其实同构并没有节省前端的开发量，只是把一部分前端代码拿到服务端执行。而且为了同构还要处处兼容 Node.js 不同的执行环境。有额外成本，这也是后面会具体谈到的。")]),a("br"),a("p",[a("strong",[s._v("3. 提高首屏性能")])]),a("p",[s._v("由于 SPA 打包生成的 JS 往往都比较大，会导致页面加载后花费很长的时间来解析，也就造成了白屏问题。服务端渲染可以预先使到数据并渲染成最终 HTML 直接展示，理想情况下能避免白屏问题。在我参考过的一些产品中，很多页面需要获取十几个接口的数据，单是数据获取的时候都会花费数秒钟，这样全部使用同构反而会变慢。")]),a("ul",[a("li",[a("h3",{attrs:{id:"tong-gou-bing-mei-you-xiang-xiang-zhong-na-me-mei"}},[s._v("同构并没有想像中那么美 "),a("a",{staticClass:"header-anchor",attrs:{href:"#tong-gou-bing-mei-you-xiang-xiang-zhong-na-me-mei"}},[s._v("§")])])])]),a("p",[a("strong",[s._v("1. 性能")])]),a("p",[s._v("把原来放在几百万浏览器端的工作拿过来给你几台服务器做，这还是花挺多计算力的。尤其是涉及到图表类需要大量计算的场景。这方面调优，可以参考 "),a("a",{attrs:{href:"https://medium.com/walmartlabs/reactjs-ssr-profiling-and-caching-5d8e9e49240c"}},[s._v("walmart 的调优策略")]),s._v("。")]),a("br"),a("p",[s._v("个性化的缓存是遇到的另外一个问题。可以把每个用户个性化信息缓存到浏览器，这是一个天生的分布式缓存系统。我们有个数据类应用通过在浏览器合理设置缓存，双十一当天节省了 70% 的请求量。试想如果这些缓存全部放到服务器存储，需要的存储空间和计算都是很非常大。")]),a("p",[a("strong",[s._v("2. 不容忽视的服务器端和浏览器环境差异")])]),a("p",[s._v("前端代码在编写时并没有过多的考虑后端渲染的情景，因此各种 BOM 对象和 DOM API 都是拿来即用。这从客观层面也增加了同构渲染的难度。我们主要遇到了以下几个问题：")]),a("br"),a("ul",[a("li",[s._v("document 等对象找不到的问题")]),a("li",[s._v("DOM 计算报错的问题")]),a("li",[s._v("前端渲染和服务端渲染内容不一致的问题")])]),a("br"),a("p",[s._v("由于前端代码使用的 "),a("code",[s._v("window")]),s._v(" 在 node 环境是不存在的，所以要 mock window，其中最重要的是 cookie，userAgent，location。但是由于每个用户访问时是不一样的 "),a("code",[s._v("window")]),s._v("，那么就意味着你得每次都更新 "),a("code",[s._v("window")]),s._v("。 而服务端由于 js require 的 cache 机制，造成前端代码除了具体渲染部分都只会加载一遍。这时候 "),a("code",[s._v("window")]),s._v(" 就得不到更新了。所以要引入一个合适的更新机制，比如把读取改成每次用的时候再读取。")]),a("br"),a("pre",[a("code",{staticClass:"hljs language-js"},[a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isSsr = "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" (\n  !("),a("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(" !== "),a("span",{staticClass:"hljs-string"},[s._v("'undefined'")]),s._v(" && "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(".document && "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(".document.createElement && "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(".setTimeout)\n);\n")])]),a("br"),a("p",[s._v("原因是很多 DOM 计算在 SSR 的时候是无法进行的，涉及到 DOM 计算的的内容不可能做到 SSR 和 CSR 完全一致，这种不一致可能会带来页面的闪动。")]),a("p",[a("strong",[s._v("3. 内存溢出")])]),a("p",[s._v("前端代码由于浏览器环境刷新一遍内存重置的天然优势，对内存溢出的风险并没有考虑充分。 比如在 React 的 "),a("code",[s._v("componentWillMount")]),s._v(" 里做绑定事件就会发生内存溢出，因为 React 的设计是后端渲染只会运行 "),a("code",[s._v("componentDidMount")]),s._v(" 之前的操作，而不会运行 "),a("code",[s._v("componentWillUnmount")]),s._v(" 方法（一般解绑事件在这里）。")]),a("p",[a("strong",[s._v("4. 异步操作")])]),a("p",[s._v("前端可以做非常复杂的请求合并和延迟处理，但为了同构，所有这些请求都在预先拿到结果才会渲染。而往往这些请求是有很多依赖条件的，很难调和。纯 React 的方式会把这些数据以埋点的方式打到页面上，前端不再发请求，但仍然再渲染一遍来比对数据。造成的结果是流程复杂，大规模使用成本高。幸运的是 Next.js 解决了这一些，后面会谈到。")]),a("p",[a("strong",[s._v("5. simple store（redux）")])]),a("p",[s._v("这个 store 是必须以字符串形式塞到前端，所以复杂类型是无法转义成字符串的，比如 function。")]),a("br"),a("p",[s._v("总的来说，同构渲染实施难度大，不够优雅，无论在前端还是服务端，都需要额外改造。")]),a("br"),a("ul",[a("li",[a("h3",{attrs:{id:"shou-ping-you-hua"}},[s._v("首屏优化 "),a("a",{staticClass:"header-anchor",attrs:{href:"#shou-ping-you-hua"}},[s._v("§")])])])]),a("p",[s._v("再回到前端渲染遇到首屏渲染问题，除了同构就没有其它解法了吗？总结以下可以通过以下三步解决")]),a("br"),a("p",[a("strong",[s._v("1. 分拆打包")])]),a("p",[s._v("现在流行的路由库如 react-router 对分拆打包都有很好的支持。可以按照页面对包进行分拆，并在页面切换时加上一些 loading 和 transition 效果。")]),a("p",[a("strong",[s._v("2. 交互优化")])]),a("p",[s._v("首次渲染的问题可以用更好的交互来解决，先看下 linkedin 的渲染")]),a("br"),a("p",[a("img",{attrs:{src:"https://camo.githubusercontent.com/f3ffed6cb07455f16cf492517537abd05985aac2/68747470733a2f2f696d672e616c6963646e2e636f6d2f7466732f5442314a6a6b5151705858585858536158585858585858585858582d323535342d313430302e706e67",alt:"Linkin render"}})]),a("br"),a("p",[a("img",{attrs:{src:"https://camo.githubusercontent.com/58cf0fd1fb24d213d9084c4ed5c4caaa611502c2/68747470733a2f2f696d672e616c6963646e2e636f6d2f7466732f54423169614d4d51705858585858766158585858585858585858582d323535342d313335342e706e67",alt:"Linkin render"}})]),a("br"),a("p",[s._v("有什么感受，非常自然，打开渲染并没有白屏，有两段加载动画，第一段像是加载资源，第二段是一个加载占位器，过去我们会用 loading 效果，但过渡性不好。近年流行 Skeleton Screen 效果。其实就是在白屏无法避免的时候，为了解决等待加载过程中白屏或者界面闪烁造成的割裂感带来的解决方案。")]),a("p",[a("strong",[s._v("3. 部分同构")])]),a("p",[s._v("部分同构可以降低成功同时利用同构的优点，如把核心的部分如菜单通过同构的方式优先渲染出来。我们现在的做法就是使用同构把菜单和页面骨架渲染出来。给用户提示信息，减少无端的等待时间。")]),a("br"),a("p",[s._v("相信有了以上三步之后，首屏问题已经能有很大改观。相对来说体验提升和同构不分伯仲，而且相对来说对原来架构破坏性小，入侵性小。是我比较推崇的方案。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("我们赞成客户端渲染是未来的主要方向，服务端则会专注于在数据和业务处理上的优势。但由于日趋复杂的软硬件环境和用户体验更高的追求，也不能只拘泥于完全的客户端渲染。同构渲染看似美好，但以目前的发展程度来看，在大型项目中还不具有足够的应用价值，但不妨碍部分使用来优化首屏性能。做同构之前 ，一定要考虑到浏览器和服务器的环境差异，站在更高层面考虑。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("附：Next")])]),a("h3",{attrs:{id:"next.js-ti-yan"}},[s._v("Next.js 体验 "),a("a",{staticClass:"header-anchor",attrs:{href:"#next.js-ti-yan"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("Next.js 是时下非常流行的基于 React 的同构开发框架。作者之一就是大名鼎鼎的 Socket.io 的作者 "),a("a",{attrs:{href:"http://link.zhihu.com/?target=https%3A//github.com/rauchg"}},[s._v("Guillermo Rauch")]),s._v("。它有以下几个亮点特别吸引我：")])]),a("p",[s._v("**1. **巧妙地用标准化的解决了请求的问题。同构和页面开发类似，异步是个大难题，异步中难点又在接口请求。Next.js 给组件新增了 getInitialProps 方法来专门处理初始化请求，再也不用手动往页面上塞 DATA 和调用 ReactDOMServer.renderToString")]),a("br"),a("p",[s._v("**2. **使用 "),a("a",{attrs:{href:"https://github.com/zeit/styled-jsx"}},[s._v("styled-jsx")]),s._v(" 解决了 css-in-js 的问题。这种方案虽然不像 styled-component 那样强大，但足够简单，可以说是最小的成本解决了问题")]),a("br"),a("p",[s._v("**3. **Fast by default。页面默认拆分文件方式打包，支持 Prefetch 页面预加载")]),a("br"),a("p",[s._v("全家桶式的的解决方案。简洁清晰的目录结构，这一点 Redux 等框架真应该学一学。不过全家桶的方案比较适合全新项目使用，旧项目使用要评估好成本")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"1cbc":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("为什么专家不再关心技术细节")])]),a("h2",{attrs:{id:"wei-shi-me-zhuan-jia-bu-zai-guan-xin-ji-shu-xi-jie"}},[s._v("为什么专家不再关心技术细节 "),a("a",{staticClass:"header-anchor",attrs:{href:"#wei-shi-me-zhuan-jia-bu-zai-guan-xin-ji-shu-xi-jie"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("本周的精读是有感而发。")]),a("p",[s._v("笔者接触前端已有八年，观察了不少前端大牛的发展路径，发现成功的人都具有相似的经历：")]),a("p",[s._v("初期技术热情极大 -> 大量标志性技术项目 -> 转向综合性思考 -> 带团队/关注方法论")]),a("p",[s._v("也就是专家们变得越来越不关心技术细节。需要说明是的，这里说的专家不再关心细节，不代表成为专家后学不会细节，也不代表专家不了解细节。")]),a("p",[s._v("早期挺难理解这种转变的，笔者在学校里的知名度来自于前端做得精深，一根筋钻研技术的人眼里是容不下沙子的，所以当初为一些前辈转到管理特别不理解，认为他们背叛了前端。")]),a("p",[s._v("不过笔者的观念也在逐渐发生转变，渐渐自己也在朝着当初反感的方向发展，觉得这一定不是偶然，所以就整理了一下感悟，希望可以证明这个发展路径的必然性。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("Warn：本文所说的技术专家，仅针对研究上层技术的专家，不包括底层技术专家。 在 Google 底层专家人数极少，大部分专家都要走业务技术的路线。")])]),a("p",[s._v("首先我们要明确技术员与科学家的区别，为业务提供技术支持都是技术员，所以前端是一门技术，不是科学。")]),a("p",[s._v("另外，技术的发展需要商业推动，没有使用场景的国家是很难推动技术进步的，科学除外。")]),a("p",[s._v("所以业务技术是具备可持续发展的路线，毕竟大家都要吃饭，有业务价值的项目会活下来，附着在业务上的技术才能活下来，才有可能开枝散叶。")]),a("p",[s._v("本文将从三个点去解释，为什么专家看上去越来越远离技术细节。")]),a("br"),a("h2",{attrs:{id:"2.1-ji-shu-xi-jie-dui-ge-ren-de-chong-yao-xing-shi-zai-bian-hua-de"}},[s._v("2.1 技术细节对个人的重要性是在变化的 "),a("a",{staticClass:"header-anchor",attrs:{href:"#2.1-ji-shu-xi-jie-dui-ge-ren-de-chong-yao-xing-shi-zai-bian-hua-de"}},[s._v("§")])]),a("p",[s._v("随着工作年限增加，技术细节重要性在慢慢降低，反之技术视野重要性在慢慢增加。")]),a("br"),a("h3",{attrs:{id:"zai-zhao-gong-zuo-chu-qi-ji-shu-xi-jie-shi-chong-yao-de-qiao-men-zhuan"}},[s._v("在找工作初期，技术细节是重要的敲门砖 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zai-zhao-gong-zuo-chu-qi-ji-shu-xi-jie-shi-chong-yao-de-qiao-men-zhuan"}},[s._v("§")])]),a("p",[s._v("大学毕业的那段时间，技术细节是一块重要的敲门砖，只有掌握好技术，才会有公司愿意要你。")]),a("p",[s._v("这也是为什么说毕业生不要一进公司就谈战略，因为时机不对。")]),a("br"),a("h3",{attrs:{id:"ji-shu-bu-shi-ke-xue-pu-tong-ren-xia-gong-fu-ke-yi-xue-hui"}},[s._v("技术不是科学，普通人下功夫可以学会 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ji-shu-bu-shi-ke-xue-pu-tong-ren-xia-gong-fu-ke-yi-xue-hui"}},[s._v("§")])]),a("p",[s._v("学习技术不需要很聪明的头脑，只要肯下功夫，拥有不错的理解能力，任何人都可以把技术细节搞清楚。")]),a("p",[a("strong",[s._v("也就是学习技术细节是没有技术门槛，随着年龄的增加，如果只累积了大家都能学会的内容，那么当旧知识被淘汰后，学习新知识的速度又不如年轻人快，会逐渐失去经验优势。")])]),a("p",[s._v("那么如何利用无门槛的特征，将其变为门槛呢？任何年龄段学习技术细节都很容易，应该在你需要深入细节的时候再深入进去，不需要深入的时候把时间花在了解宏观架构上。")]),a("p",[s._v("就是培养高效的学习能力，能准确判断某个技术细节是否有必要掌握，如需要该如何快速掌握核心内容，并在掌握之后不留恋，可以快速抽身出来继续全局性思考。这种思维是有门槛的，技术专家都可以做到这一点。")]),a("br"),a("h3",{attrs:{id:"zuo-cheng-shi-bu-yi-ding-yao-gao-dong-xi-jie"}},[s._v("做成事不一定要搞懂细节 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zuo-cheng-shi-bu-yi-ding-yao-gao-dong-xi-jie"}},[s._v("§")])]),a("p",[s._v("乍一看有点匪夷所思：不了解细节怎么能做成事？")]),a("p",[s._v("虽然理解技术细节可以做成事，但做成事不一定需要理解业务细节。")]),a("p",[s._v("这要看怎么理解业务与技术的关系，比如建设 “数据联邦”，光是了解各个不同的存储系统技术细节可能就要花很久，而实际上是没必要将所有技术细节都弄懂的，只要定好一个通用交互规范，各存储系统各自封装一套符合这个规范的交互接口即可。")]),a("p",[s._v("做成事往往需要宏观的技术思维，需要将许多技术点链接在一起。举个例子，做成事就类似于军官指挥作战，做成的目的是通过制定打法赢得战争，而不是自己冲锋陷阵并测量敌人壕沟的宽度。关心技术细节只是最终落实到每个人具体实施项中的一部分，技术细节的目标累加起来才能做成事。")]),a("br"),a("h2",{attrs:{id:"2.2-gao-qing-chu-ye-wu-dui-ji-shu-de-zhen-shi-su-qiu"}},[s._v("2.2 搞清楚业务对技术的真实诉求 "),a("a",{staticClass:"header-anchor",attrs:{href:"#2.2-gao-qing-chu-ye-wu-dui-ji-shu-de-zhen-shi-su-qiu"}},[s._v("§")])]),a("p",[s._v("业务期望通过技术实现功能，所以技术专家要做的是如何更好的实现业务需求，这就意味着理解业务需求是第一重要的能力。试想一个不能理解业务要做什么的人，即便懂得再多技术细节，对业务也是没有价值的。")]),a("br"),a("h3",{attrs:{id:"ye-wu-si-wei-shi-jie-jue-wen-ti-ji-shu-si-wei-shi-chuang-zao-wen-ti"}},[s._v("业务思维是解决问题，技术思维是创造问题 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ye-wu-si-wei-shi-jie-jue-wen-ti-ji-shu-si-wei-shi-chuang-zao-wen-ti"}},[s._v("§")])]),a("p",[s._v("拥有技术思维的人，容易沉迷于解决不切实际的问题，或者是别人解决过的问题。这种思维对技术学习是非常有帮助的，但如果长期不能转变这种思维，对公司来说是无法创造什么价值的。")]),a("p",[s._v("拥有业务思维的人，首先要懂业务，只有懂业务，跟着对的业务，才能对未来有信心，知道自己的付出可以换来回报。")]),a("p",[s._v("懂业务后，才知道如何通过技术帮助业务获得成功。")]),a("p",[s._v("比如在一家创业公司，老板的眼光很准，进入的时机较早，市场是一片蓝海。你通过分析后，发现要帮助业务占领市场，只要利用某个成熟技术框架快速迭代，就可以在短期帮助业务赢得市场。但是这个框架定制能力不强，如果新需求来了可能需要花时间重构掉。此时技术思维的人只会考虑代码维护性，提出自研一套框架，而拥有业务思维的技术专家会决定先用成熟的技术快速作出原型，等业务稳定后再重构掉。")]),a("p",[s._v("当然现在互联网市场竞争很激烈，低技术门槛的蓝海基本已都变成了红海，上面提到的场景可能比较少见，我们更多需要决策的是未来几年内业务的收益是否值得现在投入的研发资源。")]),a("br"),a("h3",{attrs:{id:"liang-ge-hui-xie-kuang-jia-de-ren-bu-ru-yi-ge-neng-jue-ce-de-ren"}},[s._v("两个会写框架的人，不如一个能决策的人 "),a("a",{staticClass:"header-anchor",attrs:{href:"#liang-ge-hui-xie-kuang-jia-de-ren-bu-ru-yi-ge-neng-jue-ce-de-ren"}},[s._v("§")])]),a("p",[s._v("另一个简单的例子就是，假如技术专家只会一头扎在技术细节里，对各种前端框架的实现了如指掌，大家都能造出优雅、易用、可维护，而且还带有各自 “特色优势” 的框架或者轮子，那么团队很容易陷入两个专家屁股决定脑袋的技术纷争中。这种情况下，两名技术专家的产出甚至不如一个实习生大，毕竟实习生直接拿来开源框架上手，99% 的情况可靠性比前端专家自己造的轮子更好。")]),a("p",[s._v("从另一个方面来说，现阶段前端界能写出 React、Vue 框架的人太多了，已经写出来的类 React、Vue 的框架也数不过来。去掉为了练手而做的项目，真正希望推广出去给别人用的还占绝大多数，这是开源界典型的问题：重复低水平造轮子不需要理由，推广给你用也不需要负责任。由于框架属于互联网虚拟资产，边界成本为零，这决定了框架市场一定是个大寡头市场，不可能有类似的项目通过一些不痛不痒的特色分一杯羹。那么就算招 10 个会写框架的人进入公司架构组，最后只有两种可能：要么架构臃肿，每个人都把自己的一部分功劳加入进去；要么就是选择一个更不好的方案，这样不会损害任何一位架构师的利益。")]),a("p",[s._v("所以现在公司更倾向于内部培养人才，因为内部的人了解业务需要什么，创造的价值往往比空降的架构师更大。")]),a("br"),a("h3",{attrs:{id:"kuan-guang-de-ji-shu-shi-ye-geng-rong-yi-jie-li"}},[s._v("宽广的技术视野更容易借力 "),a("a",{staticClass:"header-anchor",attrs:{href:"#kuan-guang-de-ji-shu-shi-ye-geng-rong-yi-jie-li"}},[s._v("§")])]),a("p",[s._v("现在技术点越来越多，如果什么技术细节都要详细了解，最终一定不能有很好的全局视野。比较好的状态是找几个重点深入了解，其他的技术点在掌握了全局技术视野后再考虑深入。")]),a("p",[s._v("在互联网初期，很多技术框架还不完善，技术借力的意义不大，毕竟也没有多少东西可用。")]),a("p",[s._v("但是现在无论前端还是后端的技术、轮子已经眼花缭乱了，能掌握这些已有技术的人，价值已经逐渐大于会完整了解某些技术细节的人。一个优秀的专家应该能快速定位要解决的业务问题是否有成熟的技术方案，如何以最小的投入产出比实现，同时保持良好的维护性应变业务维护。")]),a("br"),a("h2",{attrs:{id:"2.3-jin-jin-ji-shu-hao-shi-wu-fa-cheng-wei-zhuan-jia-de"}},[s._v("2.3 仅仅技术好是无法成为专家的 "),a("a",{staticClass:"header-anchor",attrs:{href:"#2.3-jin-jin-ji-shu-hao-shi-wu-fa-cheng-wei-zhuan-jia-de"}},[s._v("§")])]),a("p",[s._v("技术专家真的代表技术壁垒很强的人吗？是的，但只有技术能力是不够的。")]),a("br"),a("h3",{attrs:{id:"wei-shi-me-kai-yuan-xiang-mu-hou-qi-yao-xun-zhao-xie-zuo-zhe"}},[s._v("为什么开源项目后期要寻找协作者？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#wei-shi-me-kai-yuan-xiang-mu-hou-qi-yao-xun-zhao-xie-zuo-zhe"}},[s._v("§")])]),a("p",[s._v("我做开源项目的初期，所有框架和源码都事必躬亲，觉得自己有更好的点子可以胜过其他框架。初期很少有贡献者参与，当然我也不愿意其他贡献者参与，毕竟他们不了解设计理念，只有我自己的修改可以让我满意。")]),a("p",[s._v("还有谁比作者更了解他的开源项目呢？那为什么一个大型开源项目运作到后期，基本都是协作者在维护？")]),a("p",[s._v("因为开源是一件系统化的事情，如果你想长期维护他，必须建立好文档系统，让你的思路可复制，让他人可参与。如果开源项目只有你一个人懂，那么同时维护两个、四个、六个的时候，你定会发现力不从心。")]),a("p",[s._v("至于一些开源大神一人维护几百甚至上千 Repo，背后一定有更多的贡献者支持，一个人就算辞职在家专职做开源，也很难同时维护超过 10 个开源项目。你需要拥有开放的心态让更多人加入进来，将成就感和荣誉感分一些给贡献者，他们才会持续为项目贡献。")]),a("br"),a("h3",{attrs:{id:"neng-gou-diao-yong-zi-yuan-cai-neng-cheng-wei-zhuan-jia"}},[s._v("能够调用资源才能成为专家 "),a("a",{staticClass:"header-anchor",attrs:{href:"#neng-gou-diao-yong-zi-yuan-cai-neng-cheng-wei-zhuan-jia"}},[s._v("§")])]),a("p",[s._v("开源界就是项目抢占关注度的游戏。假设开源社区总人数为 100，你的项目能够吸引到 10 个人浏览，5 个人使用，2 个人贡献，基本就能存活下来。而开源社区至少有 100 个项目，社区总人数不足以支持每一个项目，只有获得足够关注度的项目才能保持长青。")]),a("p",[s._v("公司内也是如此，专家级以上的 Title 会要求协作能力，可以调动身边甚至其他部门资源的人才能在公司发挥更大的价值。")]),a("p",[s._v("CEO 通过顶层设计调动了全公司资源，而业务线总裁通过任务拆解调动了整个业务线的人，通过层层目标拆解，并保证每一层都能充分调动下一层所有资源，公司才能高效的运转。")]),a("p",[s._v("如果一直关心技术细节，你永远是一个孤立节点，在任何维度的组织中都是最底层，就算 24 小时不睡觉，也最多算两个人力资源。想要突破一天 24 小时的限制，就要花时间让别人认同你的设计，并朝着一个方向努力，你的节点才能上移，但随之而来的是承担更多风险，比如分配给别人的任务给弄砸了，为公司带来了不良影响，那么负责人就要背锅。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("总结一下，本文的观点是：")]),a("ol",[a("li",[s._v("技术细节学习难度不大，在需要深入的时候再深入了解最佳。")]),a("li",[s._v("想要做成事，需要更宏观的技术思维，所以专家渐渐变得眼光宽阔，格局很大。")]),a("li",[s._v("专家拥有快速学习技术细节的能力，只是这已不是其核心竞争力，所以与其写技术细节的文章，不如写方法论的思考带来的价值更大。")]),a("li",[s._v("指引方向比走路更重要，专家都要逐渐成为引路人。")]),a("li",[s._v("技术最终为业务服务，懂技术细节和让业务先赢没有必然的关系，所以在深入技术细节之前，要先理解业务，把握方向，防止技术细节出现路线问题。")])])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"1e9d":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读《最佳前端面试题》及面试官技巧")])]),a("h2",{attrs:{id:"zui-jia-qian-duan-mian-shi-ti-ji-mian-shi-guan-ji-qiao"}},[s._v("《最佳前端面试题》及面试官技巧 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zui-jia-qian-duan-mian-shi-ti-ji-mian-shi-guan-ji-qiao"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读的文章是："),a("a",{attrs:{href:"https://performancejs.com/post/hde6d32/The-Best-Frontend-JavaScript-Interview-Questions-%28written-by-a-Frontend-Engineer%29"}},[s._v("The-Best-Frontend-JavaScript-Interview-Questions")])])]),a("p",[s._v("讨论前端面试哪些问题，以及如何面试。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i1/O1CN01R3ijB026P7lUCn5wY_!!6000000007653-2-tps-1024-600.png",width:"500",alt:"logo"}}),a("p",[s._v("又到了招聘的季节，如何为自己的团队找到真正优秀的人才？问哪些问题更合适？我们简单总结一把。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[a("a",{attrs:{href:"https://performancejs.com/post/hde6d32/The-Best-Frontend-JavaScript-Interview-Questions-%28written-by-a-Frontend-Engineer%29"}},[s._v("The-Best-Frontend-JavaScript-Interview-Questions")]),s._v(" 从 概念 - 算法 coding - 调试 - 设计 这 4 步全面了解候选人的基本功。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本精读由 "),a("a",{attrs:{href:"https://github.com/ascoders"}},[s._v("ascoders")]),s._v(" "),a("a",{attrs:{href:"https://github.com/camsong"}},[s._v("camsong")]),s._v(" "),a("a",{attrs:{href:"https://github.com/jasonslyvia"}},[s._v("jasonslyvia")]),s._v(" 讨论而出。")]),a("p",[s._v("网络技术发展非常迅速，前端变化尤为快，对优秀人才的面试方式在不同时期会有少许不同。")]),a("br"),a("p",[a("strong",[s._v("整体套路")])]),a("p",[s._v("在面试之前，第一步要询问自己，是否对当前岗位的职责、要求有清晰的认识？不知道自己岗位要招什么样的人，也无法组织好面试题。")]),a("p",[s._v("认真阅读简历，这是对候选人起码的尊重，同时也是对自己的负责。阅读简历是为了计划面试流程，不应该对所有候选人都准备相同的问题。")]),a("p",[s._v("具体流程我们一般会通过：")]),a("ul",[a("li",[s._v("开场白")]),a("li",[s._v("候选人自我介绍")]),a("li",[s._v("面试")]),a("li",[s._v("附加信息")]),a("li",[s._v("结束")])]),a("p",[s._v("开场白是最重要的，毕竟候选人如果拒绝了本次面试，后面的流程都不会存在。其次，通过候选人自我介绍，了解简历中你所疑惑的地方。简历是为了突出重点，快速判断是否基本匹配岗位要求，一旦确认了面试，全面了解候选人经验是对双方的负责。接下来重点讨论面试过程。")]),a("br"),a("p",[a("strong",[s._v("开放性问题")])]),a("p",[s._v("面试的目的是挖掘对方的优点，而不是拿面试官自己的知识点与对方知识点做交集，看看能否匹配上 80%。但受主观因素影响，又不宜询问太多开放性问题，因此开放问题很讲究技巧。")]),a("p",[s._v("正如上面所说，我推荐以开放性问题开场，这样便于了解候选人的经历、熟悉哪些技术点，便于后面的技术提问。如果开场就以准备好的题目展开车轮战，容易引起候选人心里紧张，同时我们问的问题不一定是候选人所在行的，技术问题不是每一个都那么重要，很多时候我们只看到了候选人的冰山一角，但此时气氛已经尴尬，很多时候会遗漏优秀人才。")]),a("p",[s._v("开放性问题最好基于行为面试法询问（Star 法则）：")]),a("ul",[a("li",[s._v("Situation: 场景 - 当时是怎样的场景")]),a("li",[s._v("Task: 任务 - 当时的任务是什么")]),a("li",[s._v("Action: 我采取了怎样的行动")]),a("li",[s._v("Result: 达到了什么样的结果")])]),a("p",[s._v("行为面试法的好处在于还原当时场景，不但让面试官了解更多细节，也开拓了面试者的思维，让面试过程更加高效、全面。")]),a("p",[s._v("举一个例子，比如考察候选人是否聪明，star 法则会这样询问：")]),a("blockquote",[a("p",[s._v("在刚才的项目中，你提到了公司业务发展很快，人手不够，你是如何应对的呢？")])]),a("p",[s._v("相比不推荐的 “假设性问题” 会如此提问：")]),a("blockquote",[a("p",[s._v("假如让你学习一个新技术，你会如何做？")])]),a("p",[s._v("更不推荐的是 “引导性问题”：")]),a("blockquote",[a("p",[s._v("你觉得自己聪明吗？")])]),a("p",[s._v("相比于 star 法则，其他方式的提问，不但让候选人觉得突兀，不好回答，而且容易被主观想法带歪，助长了面试中投机的气氛。至于对 star 法则都精心编排的候选人，我还没有遇到过，如果遇到了肯定会劝他转行做演员 —— 开玩笑的，会通过后续技术问题甄别候选人是否有真本领。")]),a("br"),a("p",[a("strong",[s._v("技术问题")])]),a("p",[s._v("亘古不变的问题就是考察基本功了，然而基本功随着技术的演进会有所调整，Html Css Js 这三个维度永远是不变的，但旧的 api 是否考察，取决于是否有最新 api 代替了它，如果有，在浏览器兼容性达标的基础上，可以只考察替代的 api，当然了解历史会更好。")]),a("blockquote",[a("p",[s._v("比如 "),a("code",[s._v("proxy")]),s._v(" 与 "),a("code",[s._v("defineProperty")]),s._v(" 需要结合考察，因为 "),a("code",[s._v("proxy")]),s._v(" 不兼容任何 IE 浏览器，候选人需要全面了解这两种用法。")])]),a("p",[s._v("变的地方在于对候选人使用技术框架的提问。在开放性问题中已经做好了铺垫，那无论候选人时以什么框架开发的，或者不使用框架开发，最好按照候选人的使用习惯提问。比如候选人使用 Angular 框架的开发经验较多，就重点考察对 Angular 框架设计、实现原理是否了解，实际使用中是否遇到过问题，以及对问题的解决方法，这也回到了 star 法则。")]),a("p",[s._v("如果候选人能总结出比如当前流行的 Vue React Angular 这三个框架核心实现思想的异同，就是加分项。")]),a("p",[s._v("对与老旧的问题，比如 jquery 的问题，也会问与设计思想相关的问题，比如候选人不知道 "),a("code",[s._v("$.delegate")]),s._v("，也不知道其已被 "),a("code",[s._v("$on")]),s._v(" 在 Jq3.0 取代，这不代表候选人能力不行，最多说明候选人比较年轻。此时应该通过引导的方式，让其思考如何优化 "),a("code",[s._v("$.bind")]),s._v(" 方法的性能，通过逐步引导，判断候选人的思维活跃度有多强。")]),a("br"),a("p",[a("strong",[s._v("如何防止被套路")])]),a("p",[s._v("把面试官经验抛出来，怕不怕让候选人有所准备呢？ —— 说实在的，几乎所有候选人都是有准备的，也不差这一篇文章。")]),a("p",[s._v("以上是开玩笑。")]),a("p",[s._v("面试主要是看候选人基础有多扎实，和思维能力。基础主要指的是，候选人提前了解了多少前端相关知识，比如对闭包的理解，对原生 api 的理解？如果候选人没接触过这两个知识点，会有两种情况：")]),a("ul",[a("li",[a("strong",[s._v("这些知识点看完需要多久？如果是闭包和原生 api 的定义与用法，候选人这方面的缺陷可以通过 5 分钟来弥补，那么这种问题到底想考什么？我们真的在乎这 5 分钟看文档的时间吗？此时应该了解候选人对知识点的感悟，或者学习方式，因为这两点的差距可能几年都无法弥补")])]),a("li",[a("strong",[s._v("如果候选人学习能力非常强，但几乎所有前端知识点都不了解，弥补完大概一共要花 1000*5 分钟，这时候量变引发质变了，是不是说明候选人本身对技术的热情存在问题？")])])]),a("p",[s._v("通过了基础问题还远远不够。甚至当问一个复杂的问题的时候，如果候选人瞬间把答案完美流畅表达出来，说明这个问题基本上白问了。")]),a("p",[s._v("**技术面更应该考察候选人的思考过程和基于此来表达出的技术能力和项目经验。**如果候选人基础没有落下太多，思维足够灵活，在过往项目中主动学习，并主导解决过项目问题，说明已经比较优秀了，我们招的每一人都应当拥有激情与学习能力。")]),a("p",[s._v("所以，当问到候选人不了解的知识点时，通过引导并挖掘出候选人拥有多少问题解决能力，才是最大的权重项，如果这个问题候选人也提前准备了，那说明准备对了。")]),a("br"),a("p",[a("strong",[s._v("非技术相关")])]),a("p",[s._v("最后考察候选人的发展潜力与工作态度，我们一般通过询问简单的算法问题，进一步了解候选人是否对技术真正感兴趣，而不只是对前端工程感兴趣。同时，算法问题也考察候选人解决抽象问题的能力，或者让候选人设计一个组件，通过对组件需求的不断升级，考察候选人是否能及时给出解决方案。")]),a("p",[s._v("最后是工作态度，首先会考察人品，对不懂的知识点装懂是违背诚信的行为，任何团队都不会要的。同时，"),a("strong",[s._v("不正视自己技术存在的盲点，将是技术发展的最大阻碍")]),s._v("。不过这里也不怕被候选人套路，如果全部都回答不懂那也不用考虑了。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("由于经验不多，只能编出这些体会，希望求职者多一些真诚，少一些套路，就一定会找到满意的工作。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"20ca":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("民工叔单页数据流方案")])]),a("h2",{attrs:{id:"min-gong-shu-dan-ye-shu-ju-liu-fang-an"}},[s._v("民工叔单页数据流方案 "),a("a",{staticClass:"header-anchor",attrs:{href:"#min-gong-shu-dan-ye-shu-ju-liu-fang-an"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本周精读文章："),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/26426054"}},[s._v("单页应用的数据流方案探索")])])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i1/O1CN01FRCFcw1SsooXOTIW2_!!6000000002303-2-tps-640-330.png",alt:"logo",width:"500"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("前几期精读了前端模块化、语法相关的文章，这次讨论另一个举足轻重的话题：数据流。 数据流在前端的地位与工程化、可视化、组件化是一样重要的，没有好的数据流框架与思想的指导，业务代码长期肯定倾向于不可维护的状态，当项目不断增加功能后，管理数据变得更加重要。")])]),a("p",[s._v("早期前端是没有数据流概念的，因为前端非常薄，每个页面只要展示请求数据，不需要数据流管理。")]),a("p",[s._v("随着前端越来越复杂，框架越来越内聚，数据流方案由分到合，由合又到了分，如今数据流逐渐从框架中解绑，形成了一套通用体系，供各个框架使用。")]),a("p",[s._v("虽然数据流框架很多，但基本上可以分为 "),a("code",[s._v("双向数据流党")]),s._v("、"),a("code",[s._v("单向数据流党")]),s._v("、"),a("code",[s._v("响应式数据流党")]),s._v("，分别以 "),a("code",[s._v("Mobx")]),s._v("、"),a("code",[s._v("Redux")]),s._v("、"),a("code",[s._v("Rxjs")]),s._v(" 为代表呈现三国鼎立之状，顺带一提，对 "),a("code",[s._v("css")]),s._v(" 而言也有 "),a("code",[s._v("css in js")]),s._v(" 和纯 "),a("code",[s._v("css党")]),s._v(" 势均力敌，前端真是不让人省心啊。这次我们来看看民工叔徐飞在 "),a("strong",[s._v("QConf")]),s._v(" 分享的主题："),a("strong",[s._v("单页应用的数据流方案探索")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[s._v("文中主要介绍了响应式编程理念，提到的观点，主要有：")]),a("ol",[a("li",[a("code",[s._v("Reactive")]),s._v(" 数据封装")]),a("li",[s._v("数据源，数据变更的归一")]),a("li",[s._v("局部与全局状态的归一")]),a("li",[s._v("分形思想")]),a("li",[s._v("action 分散执行")]),a("li",[s._v("app 级别数据处理，推荐前端 "),a("code",[s._v("Orm")])])]),a("p",[s._v("整体来看，核心思路是推荐组件内部完成数据流的处理，不用关心使用了 "),a("code",[s._v("Redux")]),s._v(" "),a("code",[s._v("Mobx")]),s._v(" 或者 "),a("code",[s._v("Rxjs")]),s._v("，也不用关心这些库是否有全局管理的野心，如果全局管理那就挂载到全局，但组件内部还是局部管理。")]),a("p",[s._v("最后谈到了 "),a("code",[s._v("Rxjs")]),s._v("、"),a("code",[s._v("xstream")]),s._v(" 响应式数据流的优势，但并未放出框架，仅仅指点了思想，让一些读者心里痒痒。但现在太多”技术大牛“把”业界会议“当成了打广告，或者工作汇报的机会，所谓授人以鱼不如授人以渔，这篇文章卓尔不群。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("一切技术都要看业务场景，民工叔的 "),a("strong",[s._v("单页应用数据流方案")]),s._v(" 解决的是重前端的复杂业务场景，虽然现在前端几乎全部单页化，但单页也不能代表业务数据流是复杂的，比如偏数据展示型的中台单页应用就不适合使用这套方案。")]),a("br"),a("p",[s._v("此文讨论的是纯数据流方案，与 "),a("code",[s._v("Dom")]),s._v(" 结合的方案可以参考 "),a("a",{attrs:{href:"https://cycle.js.org/"}},[s._v("cyclejs")]),s._v("，但这个库主要搭建了 "),a("code",[s._v("Reactive")]),s._v(" -> "),a("code",[s._v("Dom")]),s._v(" 的桥梁，使用起来还要参考此文的思路。")]),a("br"),a("p",[a("strong",[s._v("响应式数据流是最好的方案吗？")])]),a("p",[s._v("我认为前端数据流方案迭代至今，并不存在比如：面向对象 -> 函数式 -> 响应式，这种进化链路，不同业务场景下都有各自优势。")]),a("ul",[a("li",[a("strong",[s._v("面向对象")])])]),a("p",[s._v("以 Mobx 为代表，轻前端用的较多，因为复杂度集中在后端，前端做好数据展示即可，那么直接拥抱 js 这种基于对象的语言，结合原生 "),a("code",[s._v("Map")]),s._v(" "),a("code",[s._v("Proxy")]),s._v(" "),a("code",[s._v("Reflect")]),s._v(" 将副作用进行到底，开发速度快得飞起。")]),a("br"),a("p",[s._v("数据存储方式按照视图形态来，因为视图之间几乎毫无关联，而且特别是数据产品，后端数据量巨大，把数据处理过程搬到前端是不可能的（为了推导出一个视图形态数据，需要动辄几 GB 的原始数据运算，存储和性能都不适合在前端做）。")]),a("ul",[a("li",[a("strong",[s._v("函数式")])])]),a("p",[s._v("以 Haskell 为代表，金融行业用的比较多，可能原因是金融对数据正确性非常敏感，不仅函数式适合分布式计算，更重要的是"),a("strong",[s._v("无副作用")]),s._v("让数据计算更安全可靠。")]),a("p",[s._v("个人认为最重要的原因是，"),a("strong",[s._v("金融行业本来很少有副作用")]),s._v("，像前端天天与 "),a("code",[s._v("Dom")]),s._v(" 打交道的，副作用完全逃不了。")]),a("ul",[a("li",[a("strong",[s._v("响应式")])])]),a("p",[s._v("以 Rxjs 为代表，重前端更适合使用。对于 "),a("code",[s._v("React native")]),s._v(" 等 App 级别的开发，考虑到数据一致性（比如修改昵称后回退到文章详情，需同步作者修改后的昵称），优先考虑原始类型存储，更适合抽象出前端 "),a("code",[s._v("Orm")]),s._v(" 作为数据源。")]),a("p",[s._v("其实 "),a("code",[s._v("Orm")]),s._v(" 作为数据源，面向对象也很适合，但响应式编程的高层次抽象，使其对数据源、数据变动的依赖可插拔，中等规模使用大对象作为数据源，App 级别使用 "),a("code",[s._v("Orm")]),s._v(" 作为数据源，因地制宜。")]),a("br"),a("p",[a("strong",[s._v("分形思想")])]),a("p",[s._v("分形思想即充血组件的升级版，特点是同时支持贫血组件的被外部控制能力。")]),a("ul",[a("li",[a("strong",[s._v("分形的优点")])])]),a("p",[s._v("分形保证了两点：")]),a("p",[a("strong",[s._v("1. "),a("strong",[s._v("组件和数据流融为整体，与外部数据流")]),s._v("隔离")]),s._v("，甚至将数据处理也融合在数据管道中，便于调试。")]),a("p",[s._v("**2. **便于组件复用，因为数据流作为组件的一部分。")]),a("p",[s._v("如果结合文中的 "),a("strong",[s._v("本地状态")]),s._v(" 概念，局部数据也放在全局，就出现了第三点好处：")]),a("p",[s._v("**3. **创建局部数据等于创建了全局数据，这样代码调试可局部，可整体，更加灵活。")]),a("p",[a("strong",[s._v("本地状态")]),s._v(" 可以参考 dva 框架的设计，如果没有全局 "),a("code",[s._v("Redux")]),s._v(" 就创建一个，否则就挂载到全局 "),a("code",[s._v("Redux")]),s._v(" 上。")]),a("ul",[a("li",[a("strong",[s._v("分形的缺点")])])]),a("p",[s._v("对于聊天室或者在线 IDE 等，全局数据居多，很多交叉绑定的情况，就不适合分形思想，反而纯 Redux 思想更合适。")]),a("ul",[a("li",[a("strong",[s._v("数据形态，是原始数据还是视图数据？")])])]),a("p",[s._v("我认为这也是分业务场景，文章提到不应该太偏向视图结构数据，是有道理的，意思是说，在适合原始结构数据时，就不要倾向于视图结构数据了。但有必要补充一下，在后端做了大量工作的中台场景，前端数据层非常薄，同时拿到的数据也是后端服务集群计算后的离线数据，显然原始数据结构不可能放在前端，这时候就不要使用原始数据存储了。")]),a("ul",[a("li",[a("strong",[s._v("从原始数据到视图数据的处理过程放在哪")])])]),a("p",[s._v("文中推荐放在 "),a("code",[s._v("View")]),s._v(" 中处理，因为考虑到不想增加额外的 "),a("code",[s._v("Store")]),s._v("，但不知道这个 "),a("code",[s._v("Store")]),s._v(" 是否包含组件局部的 "),a("code",[s._v("Store")]),s._v("。业务组件推荐使用内部数据流操作，但最终还是会将视图数据存在全局 "),a("code",[s._v("Store")]),s._v(" 中，只是对组件而言，是局部的，对项目而言是全局的，而且这样对特定的情况，比如其他组件复用数据变更的监听可以支持到。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("我们到头来还是没有提供一个完美的解决方案，但提供了一个完整的思路，即在不同场景下，如何选择最合适的数据流方案。")]),a("br"),a("p",[s._v("最后，不要盲目选型，就像上面提到的，这套方案对复杂场景非常棒，但也许你的业务完全不适合。不要纠结于文中为何没有给出系统化解决方案的 Coding 库，我们需要了解响应式数据流的优势，同时要看清自己的业务场景，打造一套合适的数据流方案。")]),a("br"),a("p",[s._v("最后的最后，如有不错的数据流方案，解决了特定场景的痛点，欢迎留言。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"26d3":function(s,t,a){s.exports=a.p+"img/npmflow.6136936f.png"},2903:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("javascript")])]),a("h2",{attrs:{id:"javascript"}},[s._v("javascript "),a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[s._v("§")])]),a("br"),a("p",[a("em",[s._v("文档版本：v1.0")])]),a("p",[a("em",[s._v("修订时间：2019年10月11日")])]),a("p",[a("em",[s._v("范围： 各个产品研发侧前端产品")])]),a("table",{staticClass:"table"},[a("thead",[a("tr",[a("th",[s._v("版本")]),a("th",[s._v("修改人")]),a("th",[s._v("修订内容")]),a("th",[s._v("时间")])])]),a("tbody",[a("tr",[a("td",[s._v("v1.0")]),a("td",[s._v("王来彬")]),a("td",[s._v("第一版发布")]),a("td",[s._v("2019-10-11")])])])]),a("blockquote",[a("p",[a("strong",[s._v("特别说明：")])]),a("ul",[a("li",[s._v("协作开发及分工: 根据各个模块, 同时根据页面相似程序, 事先写好大体框架文件, 分配给前端人员实现内部结构&表现&行为; 共用js工具类, 协作开发过程中， 此文件不可随意修改.")])])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("命名格式")])]),a("h2",{attrs:{id:"ming-ming-ge-shi"}},[s._v("命名格式 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ming-ming-ge-shi"}},[s._v("§")])]),a("br"),a("h4",[s._v("全局变量, 使用全大写字母，并用下划线分隔单词")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("  "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" CONST_NAME_LIKE_THIS = {}；\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" CONST_NAME_LIKE_THIS ={}；\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" CONST_NAME_LIKE_THIS = {}；\n")])]),a("br"),a("h4",[s._v("局部变量, 使用 Camel 命名法。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("  "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" loadingModules = {}；\n")])]),a("br"),a("h4",[s._v("私有属性、变量和方法以下划线 _ 开头。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("  "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" _privateMethod = {}；\n")])]),a("br"),a("h4",[s._v("函数")]),a("pre",[a("code",[s._v("> 使用 Camel 命名法。\n> 参数, 使用 Camel 命名法。\n> 可使用常见动词约定。\n> 构造函数\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("stringFormat")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("source")]),s._v(") ")]),s._v("{}\n\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("hear")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("theBells")]),s._v(") ")]),s._v("{}\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("canRead")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(";\n  }\n  \n  "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("getName")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".name;\n  }\n")])]),a("br"),a("h4",[s._v("类")]),a("pre",[a("code",[s._v("> 使用 Pascal 命名法。\n> 方法 / 属性, 使用 Camel 命名法。\n> 公共属性和方法：跟变量和函数的命名一样。\n> 私有属性和方法：前缀为_(下划线)，后面跟公共属性和方法一样的命名方式。\n> 前缀为名称。\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Student")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("name")]),s._v(") ")]),s._v("{\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".name = name;\n  }\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" st = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Student("),a("span",{staticClass:"hljs-string"},[s._v("'tom'")]),s._v(");\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Student")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("name")]),s._v(") ")]),s._v("{\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" _name = name; "),a("span",{staticClass:"hljs-comment"},[s._v("// 私有成员")]),s._v("\n\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 公共方法")]),s._v("\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".getName = "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n          "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" _name;\n      }\n\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 公共方式")]),s._v("\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".setName = "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("value")]),s._v(") ")]),s._v("{\n          _name = value;\n      }\n  }\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" st = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Student("),a("span",{staticClass:"hljs-string"},[s._v("'tom'")]),s._v(");\n  st.setName("),a("span",{staticClass:"hljs-string"},[s._v("'jerry'")]),s._v(");\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(st.getName()); "),a("span",{staticClass:"hljs-comment"},[s._v("// => jerry：输出_name私有变量的值")]),s._v("\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("TextNode")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("value,engine")]),s._v(") ")]),s._v("{\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".value = value;\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".engine = engine;\n  }\n\n  TextNode.prototype.clone = "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{}\n")])]),a("br"),a("h4",[s._v("枚举")]),a("pre",[a("code",[s._v("> 变量 使用 Pascal 命名法。\n> 枚举的属性， 使用全部字母大写，单词间下划线分隔的命名方式。\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" TargetState = {\n      "),a("span",{staticClass:"hljs-attr"},[s._v("READING")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(",\n      "),a("span",{staticClass:"hljs-attr"},[s._v("READED")]),s._v(":"),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(",\n      "),a("span",{staticClass:"hljs-attr"},[s._v("APPLIED")]),s._v(":"),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(",\n      "),a("span",{staticClass:"hljs-attr"},[s._v("READY")]),s._v(":"),a("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("\n  }\n")])]),a("br"),a("h4",[s._v("接口命名规范")]),a("pre",[a("code",[s._v("> 可读性强，见名晓义。\n> 尽量不与 jQuery 社区已有的习惯冲突。\n> 尽量写全。不用缩写，除非是下面列表中约定的；（变量以表达清楚为目标，uglify 会完成压缩体积工作）。\n")])]),a("br"),a("h4",[s._v("True 和 False 布尔表达式")]),a("pre",[a("code",[s._v("> 类型检测优先使用 typeof。对象类型检测使用 instanceof。null 或 undefined 的检测使用 == null。\n> 下面的布尔表达式都返回 false:\n* null\n* undefined\n* ‘’ 空字符串\n* 0 数字0\n> 但小心下面的, 可都返回 true:\n* ‘0’ 字符串0\n* [] 空数组\n* {} 空对象\n")])]),a("br"),a("h4",[s._v("不要在 Array 上使用 for-in 循环")]),a("pre",[a("code",[s._v("> for-in 循环只用于 object/map/hash 的遍历, 对 Array 用 for-in 循环有时会出错. 因为它并不是从 0 到 length - 1 进行遍历, 而是所有出现在对象及其原型链的键值。\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("  "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("printArry")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("arr")]),s._v(") ")]),s._v("{\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" ("),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" key "),a("span",{staticClass:"hljs-keyword"},[s._v("in")]),s._v(" arr) {\n          print(arr[key])\n      }\n  }\n  printArry(["),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("6")]),s._v("]) "),a("span",{staticClass:"hljs-comment"},[s._v("// this is right.")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" a = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v("("),a("span",{staticClass:"hljs-number"},[s._v("10")]),s._v(")\n  printArry(a) "),a("span",{staticClass:"hljs-comment"},[s._v("// this is wrong.")]),s._v("\n  a = "),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".getElementTagName("),a("span",{staticClass:"hljs-string"},[s._v('"*"')]),s._v(")\n  printArry(a) "),a("span",{staticClass:"hljs-comment"},[s._v("// this is wrong.")]),s._v("\n  a = ["),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("5")]),s._v("]\n  a.bunu = "),a("span",{staticClass:"hljs-string"},[s._v('"aaaa"')]),s._v("\n  printArry(a) "),a("span",{staticClass:"hljs-comment"},[s._v("// this is wrong.")]),s._v("\n  a = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v("\n  a["),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("] = "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("\n  printArry(a) "),a("span",{staticClass:"hljs-comment"},[s._v("// this is wrong.")]),s._v("\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("printArry")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("arr")]),s._v(") ")]),s._v("{\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" len = arr.length\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" ("),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" i="),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", i<len; i++) {\n          print(arr[i])\n      }\n  }\n")])]),a("br"),a("h4",[s._v("二元和三元操作符")]),a("pre",[a("code",[s._v("> 操作符始终写在前一行, 以免分号的隐式插入产生预想不到的问题。\n> 操作符始终写在前一行, 以免分号的隐式插入产生预想不到的问题。如果一行放不下, 还是按照上述的缩进风格来换行。\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" x = a ? b : c\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" y = a ?\n          moreComplicateB : \n          moreComplicateC\n  . 操作符\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" x = foo.bar().\n      doSomeThing().\n      doSomeThingEls()\n")])]),a("br"),a("h4",[s._v("条件(三元)操作符 (?:)")]),a("pre",[a("code",[s._v("> 三元操作符用于替代 if 条件判断语句。\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("  "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (val != "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(") {\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" foo()\n  }"),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" bar()\n  }\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" val ? foo() : bar()\n")])]),a("br"),a("h4",[s._v("&& 和 ||")]),a("pre",[a("code",[s._v("> 二元布尔操作符是可短路的, 只有在必要时才会计算到最后一项。\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("  "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("foo")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("opt_win")]),s._v(") ")]),s._v("{\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" win\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(opt_win) {\n          win = opt_win\n      } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n          win = "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v("\n      }\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// ...")]),s._v("\n  }\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (node) {\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(node.kids){\n          "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(node.kids[index]){\n              foo(node.kids[index])\n          }\n      }\n  }\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("foo")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("opt_win")]),s._v(") ")]),s._v("{\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" win = opt_win || "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v("\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// ...")]),s._v("\n  }\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" kid = node && node.kids && node.kids[index]\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(kid){\n      foo(kid)\n  }\n")])]),a("br"),a("h4",[s._v("由多个单词组成的 缩写词，在命名中，根据当前命名法和出现的位置，所有字母的大小写与首字母的大小写保持一致。")]),a("br"),a("h4",[s._v("圆括号")]),a("pre",[a("code",[s._v("> 圆括号在 JavaScript 中有两种作用，一种表示调用函数，一种表示不同的值的组合。只在必要的时候使用圆括号。\n> 对于一元操作符（如delete、typeof、void），或是在某些关键词（如 return、throw、case、new）之后，不要使用括号。\n")])]),a("h4",[s._v("字符串")]),a("pre",[a("code",[s._v("> 字符串使用单引号，只有 JSON 中的字符串属性值使用双引号。\n> 符串中的 HTML 属性使用双引号。\n")])]),a("br"),a("h4",[s._v("空行")]),a("pre",[a("code",[s._v("> 使用空行来划分一组逻辑上相关联的代码片段。文件末尾空一行。\n")])]),a("br"),a("h4",[s._v("注释")]),a("pre",[a("code",[s._v("> 编码时一定注意写好注释，页面结构和样式的动态变化和添加，打好注释，便于后台同事套页面时候的阅读。\n> Js做到主要代码、方法、参数的行行注释说明，便于其他同事了解你做此功能的思路，避免代码的冗余，造成性能问题，尽量做到高内聚低耦合。\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// Js推荐注释，注释符号与注释说明之间空一个空格，单行")]),s._v("\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// var sellEle = document.querySelector('.sell');")]),s._v("\n\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// Js推荐注释，注释符号一上一下覆盖整个要注释的区块，多行注释")]),s._v("\n      "),a("span",{staticClass:"hljs-comment"},[s._v("/*\n      var sellEle = document.querySelector('.sell');\n      console.log(sellEle);\n      */")]),s._v("\n")])]),a("pre",[a("code",[s._v("> 函数(方法)注释\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("      "),a("span",{staticClass:"hljs-comment"},[s._v("/** \n      * 函数说明 \n      * @关键字 \n      */")]),s._v("\n\n      "),a("span",{staticClass:"hljs-comment"},[s._v("/**\n      * 合并Grid的行\n      * "),a("span",{staticClass:"hljs-doctag"},[s._v("@param "),a("span",{staticClass:"hljs-type"},[s._v("{Grid}")]),s._v(" ")]),s._v("grid 需要合并的Grid\n      * "),a("span",{staticClass:"hljs-doctag"},[s._v("@param "),a("span",{staticClass:"hljs-type"},[s._v("{Array}")]),s._v(" ")]),s._v("cols 需要合并列的Index(序号)数组；从0开始计数，序号也包含。\n      * "),a("span",{staticClass:"hljs-doctag"},[s._v("@param "),a("span",{staticClass:"hljs-type"},[s._v("{Boolean}")]),s._v(" ")]),s._v("isAllSome 是否2个tr的cols必须完成一样才能进行合并。true：完成一样；false(默认)：不完全一样\n      * "),a("span",{staticClass:"hljs-doctag"},[s._v("@return "),a("span",{staticClass:"hljs-variable"},[s._v("void")])]),s._v("\n      * "),a("span",{staticClass:"hljs-doctag"},[s._v("@author "),a("span",{staticClass:"hljs-variable"},[s._v("barry")])]),s._v("\n      */")]),s._v("\n      "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("mergeCells")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("grid, cols, isAllSome")]),s._v(") ")]),s._v("{\n          "),a("span",{staticClass:"hljs-comment"},[s._v("// Do Something")]),s._v("\n      }\n")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("参考文档")])]),a("h2",{attrs:{id:"can-kao-wen-dang"}},[s._v("参考文档 "),a("a",{staticClass:"header-anchor",attrs:{href:"#can-kao-wen-dang"}},[s._v("§")])]),a("br"),a("ul",[a("li",[a("code",[s._v("js")]),s._v("：主要有缩进，换行，变量名称，括号，文档注释等等。可以参考： "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/airbnb/javascript"}},[s._v("airbnb js style")])]),a("li",[a("a",{attrs:{href:"https://google.github.io/styleguide/jsguide.html"}},[s._v("google js style")])]),a("li",[a("a",{attrs:{href:"https://github.com/rwaldron/idiomatic.js"}},[s._v("idiomatic js style")])]),a("li",[a("a",{attrs:{href:"https://github.com/standard/standard"}},[s._v("standard js style")])])])])]),a("h6",[s._v("ps:建议大家在各个产品，严格遵守规范，以便后期的维护以及代码的健壮性等。")]),a("h6",[s._v("如果文档有更好的补充和好的建议，欢迎联系@王来彬")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"296b":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("file")])]),a("h2",{attrs:{id:"wen-jian"}},[s._v("文件 "),a("a",{staticClass:"header-anchor",attrs:{href:"#wen-jian"}},[s._v("§")])]),a("br"),a("p",[a("em",[s._v("文档版本：v1.0")])]),a("p",[a("em",[s._v("修订时间：2019年07月22日")])]),a("p",[a("em",[s._v("范围： 各个产品研发侧前端产品")])]),a("table",{staticClass:"table"},[a("thead",[a("tr",[a("th",[s._v("版本")]),a("th",[s._v("修改人")]),a("th",[s._v("修订内容")]),a("th",[s._v("时间")])])]),a("tbody",[a("tr",[a("td",[s._v("v1.0")]),a("td",[s._v("王来彬")]),a("td",[s._v("第一版发布")]),a("td",[s._v("2019-07-22")])]),a("tr",[a("td",[s._v("v2.0")]),a("td",[s._v("王来彬")]),a("td",[s._v("第一版发布")]),a("td",[s._v("2019-10-11")])])])]),a("blockquote",[a("p",[a("strong",[s._v("特别说明：")])]),a("ul",[a("li",[s._v("本规范主要的设计目标是保持项目开发的目录结构一致，使其容易理解并方便构建与管理。")])])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("命名原则")])]),a("h3",{attrs:{id:"ming-ming-yuan-ze"}},[s._v("命名原则 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ming-ming-yuan-ze"}},[s._v("§")])]),a("br"),a("ul",[a("li",[s._v("所有文件一律采用utf-8编码；")]),a("li",[s._v("尽量采用"),a("strong",[s._v("中横线")]),s._v("名规则，文件名中只能出现英文字母、数字和连字符，严禁出现中文；")]),a("li",[s._v("避免使用长的名字（建议小于15个字母）；")]),a("li",[s._v("避免使用类似的名字，或者仅仅是大小写不同的名字；")]),a("li",[s._v("尽量采用适合相关领域或相应需求的术语；")]),a("li",[s._v("html、css、js、images、vue等文件均归档至 "),a("em",[s._v("<目录结构划分>")]),s._v(" 约定的目录中；")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("命名方法")])]),a("h3",{attrs:{id:"ming-ming-fang-fa"}},[s._v("命名方法 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ming-ming-fang-fa"}},[s._v("§")])]),a("br"),a("ul",[a("li",[s._v("自定义组件的名字必须为小写，内部制定名称是必须以 "),a("strong",[s._v("idss-")]),s._v(" 开头；")]),a("li",[s._v("图表类组件，尽量使用和echarts中type一致，如：”pie“；")]),a("li",[s._v("尽量将页面布局和逻辑单独抽离到 "),a("strong",[s._v("xxx.vue")]),s._v(" 和 "),a("strong",[s._v("xxx-service.js")]),s._v(" 中；")]),a("li",[s._v("routes的访问路径和views中对应的模板路径一致，便于快速定位；")]),a("li",[s._v("vuex中 modules 文件的划分要和 routes 划分一致；")])])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},2972:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("JavaScript Web Components")])]),a("h2",{attrs:{id:"web-components-de-kun-jing"}},[s._v("Web Components 的困境 "),a("a",{staticClass:"header-anchor",attrs:{href:"#web-components-de-kun-jing"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读的文章是："),a("a",{attrs:{href:"https://dmitriid.com/blog/2017/03/the-broken-promise-of-web-components/"}},[s._v("The broken promise of Web Components")])])]),a("blockquote",[a("p",[s._v("以及对这篇文章的回应: "),a("a",{attrs:{href:"https://robdodson.me/regarding-the-broken-promise-of-web-components/"}},[s._v("Regarding the broken promise of Web Components")])])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("我为什么要选这篇文章呢？")]),a("p",[s._v("就在前几天的 Google I/O 2017 上, Polymer 正式发布了 "),a("a",{attrs:{href:"https://www.polymer-project.org/blog/2017-05-15-time-for-two"}},[s._v("Polymer 2.0")]),s._v(" 版本.")]),a("p",[s._v("来看一下 Polymer 2.0 的一些变化:")]),a("ul",[a("li",[s._v("使用 Shadow DOM v1 代替 Polymer.dom. Shady DOM 从 Polymer 中分离出来。")]),a("li",[s._v("使用 标准的 ES6 类和 Custom Elements v1 来自定义元素.")]),a("li",[s._v("还有数据系统的改进和生命周期的变更.")])]),a("p",[s._v("可以看到, Polymer 的这次升级主要是将 Shadow Dom 和 Custom Elements 升级到 v1 版本, 以获得更多浏览器的原生支持. 下一 代 Web Components － v1 规范，Chrome 已经支持了，Web Components 规范中的 2 个主要部分 － "),a("a",{attrs:{href:"https://www.chromestatus.com/feature/4667415417847808"}},[s._v("Shadow Dom")]),s._v(" 和 "),a("a",{attrs:{href:"https://www.chromestatus.com/feature/4696261944934400"}},[s._v("Custom Elements")]),s._v(". Safari 在 10 版本中, 支持了 "),a("a",{attrs:{href:"https://webkit.org/status/#feature-shadow-dom"}},[s._v("Shadow DOM v1")]),s._v(" 规范并且完成了在 Webkit 内核中对 "),a("a",{attrs:{href:"https://webkit.org/blog/7027/introducing-custom-elements/"}},[s._v("Custom Elements v1")]),s._v(" 规范的实现；Firefox 对 "),a("a",{attrs:{href:"https://platform-status.mozilla.org/#shadow-dom"}},[s._v("Shadow DOM")]),s._v(" 和 "),a("a",{attrs:{href:"https://platform-status.mozilla.org/#custom-elements"}},[s._v("Custom Elements v1 规范")]),s._v(" 支持正在开发中；Edge 也将对 "),a("a",{attrs:{href:"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/shadowdom/"}},[s._v("Shadow DOM")]),s._v(" 和 "),a("a",{attrs:{href:"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/customelements/"}},[s._v("Custom Elements")]),s._v(" 支持规划到他们的开发 roadmap 中。")]),a("p",[s._v("这段时间, 大家都在讨论 react, vue, angular, 这些框架. 或者 该使用 redux 还 是 mobx 做数据管理. 在这个契机下, 我想我们可以不单单去思考这些框架, 也可以更多地去思考和了解 Web Components 标准. 对于 Web Components 标准有一些思考. 所以我选了一篇关于 Web Components 的文章, 想让大家对于 Web Components 的发展, 和 Web Componets 与现在的主流框架如何协作有更多的思考和讨论.")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("The broken promise of Web Components")]),s._v(" 原文作者 dmitriid 主要是在喷 Web Components 从 2011 年到 2017 年这 6 年间毫无进展, 一共产出了 6 份标准, 其中两份已经被弃用. 几乎只有一个主流浏览器(chrome) 支持.")]),a("p",[a("img",{attrs:{src:"https://dmitriid.com/assets/img/blog/web-components-support.png",alt:"image"}})]),a("ul",[a("li",[s._v("Web Components 这些规范强依赖 JS 的实现 "),a("ul",[a("li",[s._v("Custom Elements 是 JS 脚本的一部分")]),a("li",[s._v("HTML Templates 的出现就是为了被 JS 脚本使用")]),a("li",[s._v("Shadow Dom 也需要配合 JS 脚本使用")]),a("li",[s._v("只有 HTML imports 可以脱离 JS 脚本使用")])])]),a("li",[s._v("Web Components 操作 DOM "),a("ul",[a("li",[s._v("属性都是字符串")]),a("li",[s._v("元素的内容模型(Content Model)比较奇怪")])])]),a("li",[s._v("为了突破限制使用不同的方法来传递数据")]),a("li",[s._v("CSS 作用域, 可以见上次精读"),a("a",{attrs:{href:"https://laibin-wang.github.io/#/frontier/beforeresearch7"}},[s._v("《请停止 css-in-js 的行为》")])])]),a("p",[a("strong",[s._v("来看一下 Polymer 的 核心成员 Rob Dodson 对于本文的回应: Regarding the broken promise of Web Components")])]),a("ul",[a("li",[s._v("Web Components 特性需要被浏览器支持，必须有平缓的过渡，良好的兼容，以及成熟的方案，因此推进速度会比较慢一些。")]),a("li",[s._v("React 很棒, 但是也不要忽略其他基于 Web Components 的优秀库比如 "),a("a",{attrs:{href:"https://www.ampproject.org/"}},[s._v("Amp")])]),a("li",[s._v("对于 DOM 更新的抽象比如 React/JSX 很赞, 但是也带来了一些损耗. 在旧的移动设备上, 加载一个大的 js 包性能依旧不理想, 最佳的做法是拆分你的 JS 包, 按需加载.")]),a("li",[s._v("使用 JSX 和 虚拟 DOM 是很酷, 也可以直接把 JSX 用在 Web Components 内, 像"),a("a",{attrs:{href:"https://github.com/skatejs/skatejs"}},[s._v("SkateJS")]),s._v("库, 已经在做这个事情了.")]),a("li",[s._v("没有标准的数据绑定, Polymer 的数据绑定, 现在是基于"),a("a",{attrs:{href:"https://github.com/toolkitchen/mdv"}},[s._v("MDV")]),s._v(", 很多开发者更倾向于基于 Observables 或者 ES6 Proxies 的数据绑定方案.")]),a("li",[s._v("处理组件的字符串属性是很烦人, 但是由于每一个组件都是一个类的实例, 可以利用 ES6 的 getters/setters 来改变属性.")])]),a("p",[s._v("Rob Dodson 对于 Web Components 依然充满信心, 但是也承认推进标准总会有各种阻碍, 不可能像推荐框架一样快速把事情解决.")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本次提出独到观点的同学有： "),a("a",{attrs:{href:"https://www.zhihu.com/people/078cc0fb15845759ad8295b0f0e50099"}},[s._v("@camsong")]),s._v(" "),a("a",{attrs:{href:"https://github.com/ascoders"}},[s._v("@黄子毅")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/c93b7957f6308990c7e3b16103c9356b"}},[s._v("@杨森")]),s._v(" "),a("a",{attrs:{href:"https://github.com/rccoder"}},[s._v("@rccoder")]),s._v(" "),a("a",{attrs:{href:"https://github.com/alcat2008"}},[s._v("@alcat2008")]),s._v("精读由此归纳。")]),a("br"),a("p",[a("strong",[s._v("标准与框架")])]),a("p",[s._v("Web Components 作为一个标准，骨子里的进度就会落后于当前可行的技术体系。正如文中所说，浏览器厂商 ship 一个新功能是很严肃的，很可能会影响到一票的线上业务，甚至会影响到一个产业（遥想当年 "),a("a",{attrs:{href:"https://blog.chromium.org/2013/09/saying-goodbye-to-our-old-friend-npapi.html"}},[s._v("Chrome Extension 禁用 NPAPI")]),s._v("时的一片哀鸿遍野，许多返利插件都使用了这种技术）。那么 Web Components 的缓慢推进也在情理之中了. 即使真的有一天这个标准建立起来，Web Components 作为浏览器底层特性不应该拿出来和 React 这类应用层框架相比较. 未来 Web Components 会做为浏览器非常重要的特性存在。API 偏低层操作，会易用性不够. 在很长时间内开发者依旧会使用 React/Vue/Angular/Polymer 这样的框架，Web Components 可能会做为这些框架的底层做一些 浏览器层面上的支持.")]),a("br"),a("p",[a("strong",[s._v("不需要 vendor 的自定义组件间调用")])]),a("p",[s._v("在 Webpack 大行其道的时代，想在运行时做到组件即引即用变得很困难，因为这些组件大多是通过 React/Vue/Angular 开发的。不得不考虑引入一大堆 Vendor 包，这些 Vendor 里可能还必须包含 React 这类两个版本不能同时使用的库。目前我们团队在做组件化方案时就遇到这个问题，只能想办法避免两个版本的出现。你可以说这是 React 或 Webpack 引入的问题，但并没有看到 Web Compnents 标准化的解决方案。我想未来 Web Components 可能会作为浏览器的底层, 出现基于底层的标准方案来做组件间的相互应用的方法.")]),a("br"),a("p",[a("strong",[s._v("为什么对 Web components 讨论不断")])]),a("p",[s._v("俗话说，成也萧何，败也萧何。正如原文提及的，现在网页规模越来越大，需求也越来越灵活，html 与 css 的能力已经严重不足，我们才孤注一掷的上了 js 的贼船：JSX 和 Css module，因为 Web components 依托在 html 模版语言上，当然没办法与 js 的灵活性媲美。")]),a("br"),a("p",[s._v("但使用前端框架的问题也日益暴露，随着前端框架种类的增多，同一个框架不同版本之间无法共存，导致组件无法跨框架复用，甚至只能固定在框架的某个版本，这与前端未来的模块化发展是相违背的，我们越是与之抗衡，就越希望 Web components 能站出来解决这个问题，因为浏览器原生支持模块化，相当于将 react angular vue 的能力内置在浏览器中，而且一定会向前兼容（这也是 Web components 推进缓慢的原因）。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("我觉得 Web Components 作为浏览器底层特性不应该拿出来和 React, vue 这类应用层框架相比较. Web Components 的方向以及提供的价值都不会跟 应用框架一致. 而 Web Components 作为未来的 Web 组件标准 , 它在任何生态中都可以运行良好. 我倒是更加期待应用层去基于 Web Components 去做更多的实现, 让组件超越框架存在, 可以在不同技术栈中使用.")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"2aaa":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("设计完美的日期选择器")])]),a("h2",{attrs:{id:"she-ji-wan-mei-de-ri-qi-xuan-ze-qi"}},[s._v("设计完美的日期选择器 "),a("a",{staticClass:"header-anchor",attrs:{href:"#she-ji-wan-mei-de-ri-qi-xuan-ze-qi"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("摘要")])]),a("h3",{attrs:{id:"zhai-yao"}},[s._v("摘要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zhai-yao"}},[s._v("§")])]),a("br"),a("p",[s._v("日期选择器作为基础组件重要不可或缺的一员，大家已经快习惯它一成不变的样子，输入框+日期选择弹出层。但到业务中，这种墨守成规的样子真的能百分百契合业务需求吗。这篇文章从多个网站的日期选择场景出发，企图归纳出日期选择器的最佳实践。这篇文章对移动端的日期选择暂无涉猎，都是 PC 端，列举出通用场景，每个类型日期选择器需要考虑的设计。 文章链接：Designing The Perfect Date And Time Picker 感谢本期评论官 @黄子毅 @流形 @王亮 @赵阳 @不知名的花瓣工程师")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("设计原则")])]),a("h3",{attrs:{id:"she-ji-yuan-ze"}},[s._v("设计原则 "),a("a",{staticClass:"header-anchor",attrs:{href:"#she-ji-yuan-ze"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("通用设计")])]),a("p",[s._v("1）明确需求，是实现日期选择、日期区间选择、时间选择")]),a("p",[s._v("2）用户选中日期后是否需要自动触发下一步？尤其是在某些固定业务流程中")]),a("p",[s._v("3）日期选择器是否是最佳的日期选择方法？如果提供预定义的日期选择按钮是不是更快呢？")]),a("p",[s._v("4）如何避免展示不可用日期？")]),a("p",[s._v("5）是否需要根据上下文自动定位？ 适用于生日选择场景。")]),a("br"),a("p",[a("strong",[s._v("输入框设计")])]),a("p",[s._v("1）用户是否可以自定义输入日期，还是只能通过点击选择程序给出的日期？有时候直接输入的效率明显高于点击选择，在很多银行流水查询的场景中就提供自定义输入。")]),a("p",[s._v("2）用户自定义输入如何保证日期格式正确性？")]),a("p",[s._v("3）是否需要提供预设场景输入？ 比如昨天，三天前，七天前，30 天前？像很多数据分析场景，分析师会关注数据周期，比如流量的周环比，月环比，年环比。")]),a("p",[s._v("4）是否需要包含默认值？如果有默认，应该是什么？像 google flight 根据用户历史数据提供默认值，临近节假日默认填充节假日。同时像有些数据场景，数据存在延迟，需要默认提供 T-1/T-2 ，避免用户选择当天。")]),a("p",[s._v("5）当用户激活输入框时，是否保留默认值？")]),a("p",[s._v("6）是否提供重置按钮？")]),a("p",[s._v("7）是否提供『前一项』『现在』『后一项』导航？这个设计点我第一次看到，专门附图说明。")]),a("p",[a("img",{attrs:{src:"https://pic3.zhimg.com/v2-cd71b6e05dec1c801794415816b6369a_b.png",alt:""}})]),a("br"),a("p",[a("strong",[s._v("日期弹出层设计")])]),a("p",[s._v("1）理想状态下，任何日期选择都应该在三步之内完成")]),a("p",[s._v("2）日期选择弹出层的触发方式？ 是点输入框就还是点日期小图标？")]),a("p",[s._v("3）默认情况下，展示多少周、月、天？")]),a("p",[s._v("4）周的定义是周一到周日 还是 周日到周六？")]),a("p",[s._v("5）如何提示当前时间和当前时间？")]),a("p",[s._v("6）是否需要提供『前一项』『现在』『后一项』导航？如果提供，选择天、月、年的场景下如何展示？")]),a("p",[s._v("7）提示用户最关心的信息，比如 价格、公共假期，可采用背景色、点标记")]),a("p",[s._v("8）是否用户点击非弹出层自动关闭弹出层？是否需要提供关闭按钮？")]),a("p",[s._v("9）是否可以不和输入框联动？")]),a("p",[s._v("10）用户可以重置选中的日期吗？")]),a("br"),a("p",[a("strong",[s._v("日期区间设计")])]),a("p",[s._v("1）理想状态下，任何日期区间选择需要在六步之内完成")]),a("p",[s._v("2）用户选中后是否立刻做背景色提示？")]),a("p",[s._v("3）当用户选择时，区间是否需要随着用户动作改变？比如用户 hover 时，动态改变选中区间。")]),a("p",[s._v("4）是否提供快捷键切换 日、月、年选择？")]),a("p",[s._v("5）是分成两个日期选择器还是采用区间形式？")]),a("p",[s._v("6）如何去除某些特殊时间点？ 比如春节、节假日。")]),a("br"),a("p",[a("strong",[s._v("时间选择设计")])]),a("p",[s._v("1）最简单的方法是竖直的日期，水平的时间选择")]),a("p",[s._v("2）更有用的是先提供日期还是时间选择？ 时间选择可以作为一个过滤项，移除某些不可用的日期，这个也很有用。")]),a("p",[s._v("3）提供最常使用的时间片段，并提供快捷键选择。")]),a("br")],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("文章中亮点设计")])]),a("h3",{attrs:{id:"wen-zhang-zhong-liang-dian-she-ji"}},[s._v("文章中亮点设计 "),a("a",{staticClass:"header-anchor",attrs:{href:"#wen-zhang-zhong-liang-dian-she-ji"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("google flight")])]),a("p",[a("img",{attrs:{src:"https://pic4.zhimg.com/v2-2cb10cf0f88fc046d32482e8fe0cd837_b.png",alt:""}})]),a("p",[s._v("这个案例在最小的范围内提供用户找出最优选择。虽然第一眼看到这个方法，我懵了一秒，但仔细一看发现这种展现方法完美的给出了各种组合。")]),a("br"),a("p",[a("strong",[s._v("春夏秋冬")])]),a("p",[a("img",{attrs:{src:"https://pic2.zhimg.com/v2-d3250f633f8ff1a075279fbfbf43cfb9_b.png",alt:""}})]),a("p",[s._v("这个案例另辟蹊径增加了季节的概念，在某些旅游、机票类业务场景季节是非常必要的概念，提供超出月更粗粒度的日期范围选择。")]),a("br"),a("p",[a("strong",[s._v("枚举选择时间")])]),a("p",[a("img",{attrs:{src:"https://pic4.zhimg.com/v2-e2d05d6a438b19d5acc7b6a2db6d8d1f_b.png",alt:""}})]),a("p",[s._v("使用一系列的按钮代替时间选择器，比如像我们的作息时间表，大部分是把时间划分成有规律的时间段供用户选择，固化用户选择。")]),a("br"),a("p",[a("strong",[s._v("对话式交互")])]),a("p",[a("img",{attrs:{src:"https://pic1.zhimg.com/v2-cd4874c5dc98505c56b05dbd3193fa78_b.gif",alt:""}})]),a("p",[s._v("采用与用户交互的方式选择日期，如果今后应用上 AI，单纯的日期选择器是不是会消失不见呢？..")]),a("br"),a("p",[a("strong",[s._v("特殊标识周末")])]),a("p",[a("img",{attrs:{src:"https://pic1.zhimg.com/v2-d8410bede19d7bd4c212ad216ebd0770_b.png",alt:""}}),s._v(" 在机票、旅行场景中，周末是大家最有可能出行的时间点，采用竖线划分的方式着重标注提醒。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[a("img",{attrs:{src:"https://pic3.zhimg.com/v2-ec840145feb22eeac76e5a0503828436_b.png",alt:""}})]),a("p",[s._v("总得来说，日期选择器是一个业务组件，虽然现有很多组件库把它纳入 UI 基础组件。但在每个不通的业务场景和需求下的展现形式、交互都会有所有不同。首先一定一定要明确确定需要日期选择器的场景，尤其是与日期强关联的业务，比如机票定价、日程安排，结合到日期选择器中更直观，提高用户对信息的检索效率。满足用户需求场景的同时，尽量减少用户操作链路。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"2bf1":function(s,t,a){s.exports=a.p+"img/commitMessage.34c744d0.png"},"2e40":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("css")])]),a("h2",{attrs:{id:"css"}},[s._v("css "),a("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[s._v("§")])]),a("br"),a("p",[a("em",[s._v("文档版本：v1.0")])]),a("p",[a("em",[s._v("修订时间：2019年10月11日")])]),a("p",[a("em",[s._v("范围： 各个产品研发侧前端产品")])]),a("table",{staticClass:"table"},[a("thead",[a("tr",[a("th",[s._v("版本")]),a("th",[s._v("修改人")]),a("th",[s._v("修订内容")]),a("th",[s._v("时间")])])]),a("tbody",[a("tr",[a("td",[s._v("v1.0")]),a("td",[s._v("王来彬")]),a("td",[s._v("第一版发布")]),a("td",[s._v("2019-10-11")])])])]),a("blockquote",[a("p",[a("strong",[s._v("特别说明：")])]),a("ul",[a("li",[s._v("协作开发及分工: 根据各个模块, 同时根据页面相似程序, 事先写好大体框架文件, 分配给前端人员实现内部结构&表现&行为; 共用css文件base.css书写, 协作开发过程中, 每个页面请务必都要引入, 此文件包含reset及头部底部样式, 此文件不可随意修改.")])])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("基本原则")])]),a("h3",{attrs:{id:"ji-ben-yuan-ze"}},[s._v("基本原则 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ji-ben-yuan-ze"}},[s._v("§")])]),a("br"),a("ul",[a("li",[a("ol",[a("li",[s._v("自定义样式为设计师自定义的新 CSS 样式，影响被使用本样式的区域，用于完成网页中局部的样式设定。")])])])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  样式名 “.”+“相应样式效果描述的单词或缩写”例：“ "),a("span",{staticClass:"hljs-selector-class"},[s._v(".shadow")]),s._v(" ”\n  文字样式样式名“"),a("span",{staticClass:"hljs-selector-class"},[s._v(".no")]),s._v("”+“字号”+“行距”+“颜色缩写”例：“ "),a("span",{staticClass:"hljs-selector-class"},[s._v(".no12")]),s._v(" ”、“ "),a("span",{staticClass:"hljs-selector-class"},[s._v(".no12-24")]),s._v(" ”\n")])]),a("ul",[a("li",[a("ol",{attrs:{start:"2"}},[a("li",[s._v("重新定义HTML样式为设计师重新定义已有的HTML标签样式，影响全部的被设定标签样式，用于统一网页中某一标签的样式定义。样式名“HTML标签”例：hr { border: 1px dotted #333333 }")])])]),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[s._v("链接状态样式为设计师对链接不同状态设定特殊样式，影响被使用本样式区域中的链接。")])])])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  该样式写法有"),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("种： \n    "),a("span",{staticClass:"hljs-selector-tag"},[s._v("a")]),a("span",{staticClass:"hljs-selector-class"},[s._v(".nav")]),a("span",{staticClass:"hljs-selector-pseudo"},[s._v(":link")]),s._v("\n    "),a("span",{staticClass:"hljs-selector-tag"},[s._v("nav")]),a("span",{staticClass:"hljs-selector-class"},[s._v(".a")]),a("span",{staticClass:"hljs-selector-pseudo"},[s._v(":link")]),s._v("\n  第一种只能修饰<"),a("span",{staticClass:"hljs-selector-tag"},[s._v("a")]),s._v(">标签中。\n  第二种可以修饰所有包含有<"),a("span",{staticClass:"hljs-selector-tag"},[s._v("a")]),s._v(">标签的其他标签。\n")])]),a("ul",[a("li",[a("ol",{attrs:{start:"4"}},[a("li",[s._v("代码块内容缩进，它能够提高层次结构的清晰度。")])])])]),a("pre",[a("code",{staticClass:"hljs language-css"},[a("span",{staticClass:"hljs-keyword"},[s._v("@media")]),s._v(" screen, projection {\n  "),a("span",{staticClass:"hljs-selector-tag"},[s._v("html")]),s._v(" {\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("background")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("#fff")]),s._v(";\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("color")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("#444")]),s._v(";\n  }\n}\n")])]),a("ul",[a("li",[a("ol",{attrs:{start:"5"}},[a("li",[s._v("忽略浏览器的特定前缀排序，但多浏览器特定的某个CSS属性前缀应相对保持排序（例如-moz前缀在-webkit前面）。")])])])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  ...\n  "),a("span",{staticClass:"hljs-attribute"},[s._v("border")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1px")]),s._v(" solid;\n  -moz-"),a("span",{staticClass:"hljs-attribute"},[s._v("border-radius")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("4px")]),s._v(";\n  -webkit-"),a("span",{staticClass:"hljs-attribute"},[s._v("border-radius")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("4px")]),s._v(";\n  "),a("span",{staticClass:"hljs-attribute"},[s._v("border-radius")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("4px")]),s._v(";\n  ...\n")])]),a("ul",[a("li",[a("ol",{attrs:{start:"6"}},[a("li",[s._v("声明完结，所有声明都要用“;”结尾。")])])])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-selector-class"},[s._v(".test")]),s._v(" {\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("display")]),s._v(": block;\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("height")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("100px")]),s._v("\n  }\n  "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-selector-class"},[s._v(".test")]),s._v(" {\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("display")]),s._v(": block;\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("height")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("100px")]),s._v(";\n  }\n")])]),a("ul",[a("li",[a("ol",{attrs:{start:"7"}},[a("li",[s._v("选择器和声明分行，每个选择器和声明都要独立新行。")])])])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-selector-tag"},[s._v("a")]),a("span",{staticClass:"hljs-selector-pseudo"},[s._v(":focus")]),s._v(", "),a("span",{staticClass:"hljs-selector-tag"},[s._v("a")]),a("span",{staticClass:"hljs-selector-pseudo"},[s._v(":active")]),s._v(" {\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("position")]),s._v(": relative;\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("top")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1px")]),s._v(";\n  }\n  "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended */")]),s._v("\n  "),a("span",{staticClass:"hljs-selector-tag"},[s._v("a")]),a("span",{staticClass:"hljs-selector-pseudo"},[s._v(":focus")]),s._v(",\n  "),a("span",{staticClass:"hljs-selector-tag"},[s._v("a")]),a("span",{staticClass:"hljs-selector-pseudo"},[s._v(":active")]),s._v(" {\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("position")]),s._v(": relative;\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("top")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1px")]),s._v(";\n  }\n")])]),a("ul",[a("li",[a("ol",{attrs:{start:"8"}},[a("li",[s._v("规则分行，每个规则独立一行，两个规则之间隔行。")])])])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("    ...\n\n    "),a("span",{staticClass:"hljs-selector-tag"},[s._v("html")]),s._v(" {\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("background")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("#fff")]),s._v(";\n      ...\n    }\n\n    "),a("span",{staticClass:"hljs-selector-tag"},[s._v("body")]),s._v(" {\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("margin")]),s._v(": auto;\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("width")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("50%")]),s._v(";\n      ...\n    }\n\n  ...\n\n")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("编码规则")])]),a("h3",{attrs:{id:"bian-ma-gui-ze"}},[s._v("编码规则 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bian-ma-gui-ze"}},[s._v("§")])]),a("br"),a("ul",[a("li",[a("ol",[a("li",[s._v("严禁特简化命名。")])])]),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[s._v("ID和class的命名。")])])])]),a("blockquote",[a("p",[s._v("为ID、Class 使用语义化、通用的命名方式 * 只允许使用的小写字母、连字符、数字。 * 应该从 ID 和 Class 的名字上就能看出这元素是干嘛用的（角色、功能、状态），而不是表象（颜色、位置等）或模糊不清的命名。 * 应该优先虑以这元素具体目来进行命名，易于理解，且后期修改的可能性小。 * 对与同级元素相比没有特殊的意义的元素使用通用的命名。 * 使用功能性或通用的名字可以减少不必要的文档或模板修改。")])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  ...\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended: 无意义 不易理解 */")]),s._v("\n    "),a("span",{staticClass:"hljs-selector-id"},[s._v("#yee-1901")]),s._v(" {}\n\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended: 表达不具体 */")]),s._v("\n    "),a("span",{staticClass:"hljs-selector-class"},[s._v(".button-green")]),s._v(" {}\n    "),a("span",{staticClass:"hljs-selector-class"},[s._v(".clear")]),s._v(" {}\n\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended: 明确详细 */")]),s._v("\n    "),a("span",{staticClass:"hljs-selector-id"},[s._v("#gallery")]),s._v(" {}\n    "),a("span",{staticClass:"hljs-selector-id"},[s._v("#login")]),s._v(" {}\n    "),a("span",{staticClass:"hljs-selector-class"},[s._v(".video")]),s._v(" {}\n\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended: 通用 */")]),s._v("\n    "),a("span",{staticClass:"hljs-selector-class"},[s._v(".aux")]),s._v(" {}\n    "),a("span",{staticClass:"hljs-selector-class"},[s._v(".alt")]),s._v(" {}\n  ...\n")])]),a("pre",[a("code",[s._v("  * 3. 非必要的情况下，ID和class的名称应尽量简短。\n")])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  ...\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended */")]),s._v("\n    "),a("span",{staticClass:"hljs-selector-id"},[s._v("#navigation")]),s._v(" {}\n    "),a("span",{staticClass:"hljs-selector-class"},[s._v(".atr")]),s._v(" {}\n\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended */")]),s._v("\n    "),a("span",{staticClass:"hljs-selector-id"},[s._v("#nav")]),s._v(" {}\n    "),a("span",{staticClass:"hljs-selector-class"},[s._v(".author")]),s._v(" {}\n  ...\n")])]),a("pre",[a("code",[s._v("  * 4. 简要传达ID或class是关于什么的。\n    > 不要驼峰命名法和下划线。\n    > 选择器前面加上特殊应用标识的前缀（可选)。\n    > 大型项目中最好在ID或class名字前加上这种标识性前缀（命名空间），使用短破折号链接。\n    > 使用命名空间可以防止命名冲突，方便维护，比如在搜索和替换操作上。\n    > ID和class名字有多单词组合的用短破折号“-”分开。\n")])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  ...\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended */")]),s._v("\n      "),a("span",{staticClass:"hljs-selector-class"},[s._v(".demoimage")]),s._v(" {}\n      "),a("span",{staticClass:"hljs-selector-class"},[s._v(".error_status")]),s._v(" {}\n      "),a("span",{staticClass:"hljs-selector-class"},[s._v(".errorStatus")]),s._v(" {}\n\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended */")]),s._v("\n      "),a("span",{staticClass:"hljs-selector-id"},[s._v("#video-id")]),s._v(" {}\n      "),a("span",{staticClass:"hljs-selector-class"},[s._v(".ads-sample")]),s._v(" {}\n  ...\n")])]),a("pre",[a("code",[s._v("  * 5. 通过这种方式，似的代码易懂且高效。\n  * 6. 避免元素选择器和 ID、Class 叠加使用\n  * 7. 非必要的情况下不要使用元素标签名和ID或class进行组合【影响性能】。\n  * 8. 考虑避免使用父辈节点做选择器 performance reasons【影响性能】。\n")])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  ...\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended */")]),s._v("\n      "),a("span",{staticClass:"hljs-selector-tag"},[s._v("ul")]),a("span",{staticClass:"hljs-selector-id"},[s._v("#example")]),s._v(" {}\n      "),a("span",{staticClass:"hljs-selector-tag"},[s._v("div")]),a("span",{staticClass:"hljs-selector-class"},[s._v(".error")]),s._v(" {}\n\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended */")]),s._v("\n      "),a("span",{staticClass:"hljs-selector-id"},[s._v("#example")]),s._v(" {}\n      "),a("span",{staticClass:"hljs-selector-class"},[s._v(".error")]),s._v(" {}\n  ...\n")])]),a("pre",[a("code",[s._v("  * 9. 属性值为 0 时省略单位。\n")])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  ...\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended */")]),s._v("\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("padding")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0px")]),s._v(";\n\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended */")]),s._v("\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("padding")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n  ...\n")])]),a("pre",[a("code",[s._v("  * 10. 使用rem作为字号、长度单位。\n\n  > 使用 px对可访性会造成一定的问题，em 则随着上下文不断变化，计算较为繁杂。\n    * 推荐使用 rem：[Font sizing with rem](https://snook.ca/archives/html_and_css/font-size-with-rem)。\n    * 需要 1px 级别精准定位的，仍然使用 px。\n    * 需要根据字号变化的（如 padding、margin 等）场景使用可以使用 em，较少不必要的代码。\n\n  * 11. 属性缩写\n")])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  ...\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* not recommended */")]),s._v("\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("border-top-style")]),s._v(": none;\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("font-family")]),s._v(": palatino, georgia, serif;\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("font-size")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("100%")]),s._v(";\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("line-height")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1.6")]),s._v(";\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("padding-bottom")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2em")]),s._v(";\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("padding-left")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1em")]),s._v(";\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("padding-right")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1em")]),s._v(";\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("padding-top")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* recommended */")]),s._v("\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("border-top")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("font")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("100%")]),s._v("/"),a("span",{staticClass:"hljs-number"},[s._v("1.6")]),s._v(" palatino, georgia, serif;\n      "),a("span",{staticClass:"hljs-attribute"},[s._v("padding")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(" "),a("span",{staticClass:"hljs-number"},[s._v("1em")]),s._v(" "),a("span",{staticClass:"hljs-number"},[s._v("2em")]),s._v(";\n  ...\n")])]),a("pre",[a("code",[s._v("  * 12. 属性声明顺序\n    > 1.Positioning。\n    > 2.Box model。\n    > 3.Typographic。\n    > 4.Visual。\n    > 由于定位（positioning）可以从正常的文档流中移除元素，并且还能覆盖盒模型（box model）相关的样式，因此排在首位。盒模型决定了组件的尺寸和位置，因此排在第二位。\n")])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  ...\n  .**** {   \n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* Positioning */")]),s._v("\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("position")]),s._v(": absolute;\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("top")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("right")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("bottom")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("left")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("z-index")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("100")]),s._v(";\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* Box-model */")]),s._v(" \n    "),a("span",{staticClass:"hljs-attribute"},[s._v("display")]),s._v(": block;\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("float")]),s._v(": right; \n    "),a("span",{staticClass:"hljs-attribute"},[s._v("width")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("100px")]),s._v(";\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("height")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("100px")]),s._v(";\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* Typography */")]),s._v("\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("font")]),s._v(": normal "),a("span",{staticClass:"hljs-number"},[s._v("13px")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"Helvetica Neue"')]),s._v(", sans-serif;\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("line-height")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1.5")]),s._v(";\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("color")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("#333")]),s._v(";\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("text-align")]),s._v(": center;\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* Visual */")]),s._v("\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("background-color")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("#f5f5f5")]),s._v(";\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("border")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1px")]),s._v(" solid "),a("span",{staticClass:"hljs-number"},[s._v("#e5e5e5")]),s._v(";\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("border-radius")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("3px")]),s._v(";\n    "),a("span",{staticClass:"hljs-comment"},[s._v("/* Misc */")]),s._v("\n    "),a("span",{staticClass:"hljs-attribute"},[s._v("opacity")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(";\n  }\n  ...\n")])]),a("pre",[a("code",[s._v("  * 13. 必须为大区块样式添加注释, 小区块适量注释。\n  * 14. 减少使用影响性能的属性, 比如position:absolute || float 。\n  * 16. 背景图片请尽可能使用sprite技术, 减小http请求, 考虑到多人协作开发, sprite按模块制作。\n  * 17. 用png图片做图片时, 要求图片格式为png-8格式,若png-8实在影响图片质量或其中有半透明效果, 请为ie6单独定义背景。\n  * 18. 充分利用html自身属性及样式继承原理减少代码量。\n")])]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  ...\n  <"),a("span",{staticClass:"hljs-selector-tag"},[s._v("ul")]),s._v(' class="list"><'),a("span",{staticClass:"hljs-selector-tag"},[s._v("li")]),s._v(">这儿是标题列表<"),a("span",{staticClass:"hljs-selector-tag"},[s._v("span")]),s._v(">"),a("span",{staticClass:"hljs-number"},[s._v("2010")]),s._v("-"),a("span",{staticClass:"hljs-number"},[s._v("09")]),s._v("-"),a("span",{staticClass:"hljs-number"},[s._v("15")]),s._v("</"),a("span",{staticClass:"hljs-selector-tag"},[s._v("span")]),s._v("></"),a("span",{staticClass:"hljs-selector-tag"},[s._v("ul")]),s._v(">\n  "),a("span",{staticClass:"hljs-selector-tag"},[s._v("ul")]),a("span",{staticClass:"hljs-selector-class"},[s._v(".list")]),s._v(" "),a("span",{staticClass:"hljs-selector-tag"},[s._v("li")]),s._v("{"),a("span",{staticClass:"hljs-attribute"},[s._v("position")]),s._v(":relative}  "),a("span",{staticClass:"hljs-selector-tag"},[s._v("ul")]),a("span",{staticClass:"hljs-selector-class"},[s._v(".list")]),s._v(" "),a("span",{staticClass:"hljs-selector-tag"},[s._v("li")]),s._v(" "),a("span",{staticClass:"hljs-selector-tag"},[s._v("span")]),s._v("{"),a("span",{staticClass:"hljs-attribute"},[s._v("position")]),s._v(":absolute; "),a("span",{staticClass:"hljs-attribute"},[s._v("right")]),s._v(":"),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("}\n  即可实现日期居右显示\n  ...\n")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("注释")])]),a("h3",{attrs:{id:"zhu-shi"}},[s._v("注释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zhu-shi"}},[s._v("§")])]),a("br"),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("  "),a("span",{staticClass:"hljs-comment"},[s._v("/* CSS推荐注释，左右各空一个空格，区块注释说明 */")]),s._v("\n  "),a("span",{staticClass:"hljs-selector-class"},[s._v(".sell")]),s._v(" {\n      "),a("span",{staticClass:"hljs-comment"},[s._v("/*background: #000;*/")]),s._v("\n  }\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("/* CSS推荐注释，注释符号一上一下覆盖整个要注释的区块，多行注释 */")]),s._v("\n  "),a("span",{staticClass:"hljs-comment"},[s._v("/*\n  .sell p {\n      background: #000;\n      font-size: 12px;\n  }\n  */")]),s._v("\n")])]),a("pre",[a("code",[s._v('页面内的样式加载必须用链接方式<link rel="stylesheet" type="text/css" href="style/style.css" />\n')])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("参考文档")])]),a("h3",{attrs:{id:"can-kao-wen-dang"}},[s._v("参考文档 "),a("a",{staticClass:"header-anchor",attrs:{href:"#can-kao-wen-dang"}},[s._v("§")])]),a("br"),a("ul",[a("li",[a("code",[s._v("css")]),s._v("：主要有缩进，换行，引号，注释等等。可以参考： "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/necolas/idiomatic-css"}},[s._v("idiomatic-css")])])])])]),a("h6",[s._v("ps:建议大家在各个产品，严格遵守规范，以便后期的维护以及代码的健壮性等。")]),a("h6",[s._v("如果文档有更好的补充和好的建议，欢迎联系@王来彬")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"2fce":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("css-in-js")])]),a("h2",{attrs:{id:"qing-ting-zhi-css-in-js-de-xing-wei"}},[s._v("请停止 css-in-js 的行为 "),a("a",{staticClass:"header-anchor",attrs:{href:"#qing-ting-zhi-css-in-js-de-xing-wei"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本周精读文章："),a("a",{attrs:{href:"https://hackernoon.com/stop-using-css-in-javascript-for-web-development-fa32fb873dcc"}},[s._v("请停止 css-in-js 的行为")])])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i1/O1CN01NR8Xe01sUFZlFbCJr_!!6000000005769-2-tps-450-453.png",alt:"logo",width:"500"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("这篇文章表面是在讲 CSS in JS，实际上是 CSS Modules 支持者与 styled-components 拥趸之间的唇枪舌剑、你来我往。从 2014 年 Vjeux 的演讲开始，css-in-js 的轮子层出不穷。终于过了三年，鸡血时期已经慢慢过去，大家开始冷静思考了。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("styled-components")])]),a("p",[s._v("styled-components 利用 ES6 的 tagged template 语法创建 react 纯样式组件。消除了人肉在 dom 和 css 之间做映射和切换的痛苦，并且有大部分编辑器插件的大力支持（语法高亮等）。此外，styled-components 在 ReactNaive 中尤其适用。")]),a("br"),a("p",[s._v("styled-components 简单易学，引用官方源码：")]),a("pre",[a("code",{staticClass:"hljs language-jsx"},[a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" React "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'react'")]),s._v(";\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" styled "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'styled-components'")]),s._v(";\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" Title = styled.h1"),a("span",{staticClass:"hljs-string"},[s._v("`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`")]),s._v(";\n\n"),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("Title")]),s._v(">")]),s._v("\n  Hello World, this is my first styled component!\n"),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("Title")]),s._v(">")])]),s._v("\n")])]),a("br"),a("p",[a("strong",[s._v("css-modules")])]),a("p",[s._v("顾名思义，css-modules 将 css 代码模块化，可以很方面的避免本模块样式被污染。并且可以很方便的复用 css 代码。")]),a("pre",[a("code",{staticClass:"hljs language-css"},[s._v("// 全局变量\n:"),a("span",{staticClass:"hljs-built_in"},[s._v("global")]),s._v("(.className) {\n  background-color: blue;\n}\n\n// 本地变量，其它模块无法污染\n"),a("span",{staticClass:"hljs-selector-class"},[s._v(".className")]),s._v(" {\n  "),a("span",{staticClass:"hljs-attribute"},[s._v("background-color")]),s._v(": blue;\n}\n\n"),a("span",{staticClass:"hljs-selector-class"},[s._v(".title")]),s._v(" {\n  // 复用 className 类的样式\n  composes: className;\n  "),a("span",{staticClass:"hljs-attribute"},[s._v("color")]),s._v(": red;\n}\n")])]),a("br"),a("p",[a("strong",[s._v("react-css-modules")])]),a("p",[s._v("值得一提的是，文章的作者也是 "),a("a",{attrs:{href:"https://github.com/gajus/react-css-modules"}},[s._v("react-css-modules")]),s._v(" 的作者。")]),a("br"),a("p",[s._v("react-css-modules 代码示例：")]),a("pre",[a("code",{staticClass:"hljs language-jsx"},[a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" React "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'react'")]),s._v(";\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" CSSModules "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'react-css-modules'")]),s._v(";\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" styles "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'./table.css'")]),s._v(";\n\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Table")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("React")]),s._v("."),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n    render () {\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("styleName")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("'table'")]),s._v(">")]),s._v("\n            "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("styleName")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("'row'")]),s._v(">")]),s._v("\n                "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("styleName")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("'cell'")]),s._v(">")]),s._v("A0"),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(">")]),s._v("\n                "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("styleName")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("'cell'")]),s._v(">")]),s._v("B0"),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(">")]),s._v("\n            "),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(">")]),s._v("\n        "),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(">")])]),s._v(";\n    }\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("default")]),s._v(" CSSModules(Table, styles);\n")])]),a("br"),a("p",[s._v("react-css-modules 引入了 styleName，将本地变量和全局变量很清晰的分开。并且也避免了每次对 styles 对象的引用，本地 className 名也不用总是写成 camelCase。 "),a("br")]),a("p",[s._v("另外，使用 react-css-modules，可以方便的覆盖本地变量的样式：")]),a("pre",[a("code",{staticClass:"hljs"},[s._v("import customStyles from './table-custom-styles.css';\n\n"),a("Table",{attrs:{styles:"{customStyles}"}}),s._v(";\n")],1)])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("参与本次精读的同学有 "),a("a",{attrs:{href:"https://www.zhihu.com/people/huang-zi-yi-83/answers"}},[s._v("黄子毅")]),s._v("，"),a("a",{attrs:{href:"https://www.zhihu.com/people/yangsen/answers"}},[s._v("杨森")]),s._v(" 和 "),a("a",{attrs:{href:"https://www.zhihu.com/people/camsong/answers"}},[s._v("camsong")]),s._v("。该部分由他们的观点总结而出。")]),a("br"),a("p",[s._v("CSS 本身有不少缺陷，如书写繁琐（不支持嵌套）、样式易冲突（没有作用域概念）、缺少变量（不便于一键换主题）等不一而足。为了解决这些问题，社区里的解决方案也是出了一茬又一茬，从最早的 CSS prepocessor（SASS、LESS、Stylus）到后来的后起之秀 PostCSS，再到 CSS Modules、Styled-Components 等。更有甚者，有人维护了一份完整的 "),a("a",{attrs:{href:"https://github.com/MicheleBertoli/css-in-js"}},[s._v("CSS in JS 技术方案的对比")]),s._v("。截至目前，已有 49 种之多。")]),a("br"),a("p",[a("strong",[s._v("Styled-components 优缺点")])]),a("ul",[a("li",[s._v("优点")])]),a("p",[a("strong",[s._v("使用成本低")])]),a("p",[s._v("如果是要做一个组件库，让使用方拿着 npm 就能直接用，样式全部自己搞定，不需要依赖其它组件，如 react-dnd 这种，比较适合。")]),a("p",[a("strong",[s._v("更适合跨平台")])]),a("p",[s._v("适用于 react-native 这类本身就没有 css 的运行环境。")]),a("ul",[a("li",[s._v("缺陷")])]),a("p",[a("strong",[s._v("缺乏扩展性")])]),a("p",[s._v("样式就像小孩的脸，说变就变。比如是最简单的 button，可能在用的时候由于场景不同，就需要设置不同的 font-size，height，width，border 等等，如果全部使用 css-in-js 那将需要把每个样式都变成 props，如果这个组件的 dom 还有多层级呢？你是无法把所有样式都添加到 props 中。同时也不能全部设置成变量，那就丧失了单独定制某个组件的能力。css-in-js 生成的 className 通常是不稳定的随机串，这就给外部想灵活覆盖样式增加了困难。")]),a("br"),a("ul",[a("li",[s._v("css-modules 优缺点")])]),a("p",[a("strong",[s._v("优点")])]),a("p",[s._v("1、CSS Modules 可以有效避免全局污染和样式冲突，能最大化地结合现有 CSS 生态和 JS 模块化能力")]),a("p",[s._v("2、与 SCSS 对比，可以避免 className 的层级嵌套，只使用一个 className 就能把所有样式定义好。")]),a("br"),a("p",[a("strong",[s._v("缺点")])]),a("p",[s._v("1、与组件库难以配合")]),a("p",[s._v("2、会带来一些使用成本，本地样式覆盖困难，写到最后可能一直在用 :global。")]),a("br"),a("p",[a("strong",[s._v("关于 scss/less")])]),a("p",[s._v("无论是 sass 还是 less 都有一套自己的语法，postcss 更支持了自定义语法，自创的语法最大特点就是雷同，格式又不一致，增加了无意义的学习成本。我们更希望去学习和使用万变不离其宗的东西，而不愿意使用各种定制的“语法糖”来“提高效率”。")]),a("br"),a("p",[s._v("就 css 变量与 js 通信而言，虽然草案已经考虑到了这一点，通过表达式与 attribute 通信，使用 js 与 attribute 同步。不难想象，这种情况维护的变量值最终是存储在 js 中更加妥当，然而 scss 给大家带来的 css first 思想根深蒂固，导致许多基础库的变量完全存储在 _variable.scss 文件中，现在无论是想适应 css 的新特性，还使用 css-in-js 都有巨大的成本，导致项目几乎无法迁移。反过来，如果变量存储在 js 中，就像草案中说的一样轻巧，你只要换一种方式实现 css 就行了。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("在众多解决方案中，没有绝对的优劣。还是要结合自己的场景来决定。")]),a("br"),a("p",[s._v("我们团队在使用过 scss 和 css modules 后，仍然又重新选择了使用 scss。css modules 虽然有效解决了样式冲突的问题，但是带来的使用成本也很大。尤其是在写动画（keyframe）的时候，语法尤其奇怪，总是出错，难以调试。并且我们团队在开发时，因为大家书写规范，也从来没有碰到过样式冲突的问题。")]),a("br"),a("p",[s._v("Styled-components 笔者未曾使用过，但它消除人肉在 dom 和 css 之间做映射的优点，非常吸引我。而对于样式扩展的问题，其实也有"),a("a",{attrs:{href:"https://github.com/styled-components/styled-components#user-content-overriding-component-styles"}},[s._v("比较优雅的方式")]),s._v("。")]),a("pre",[a("code",{staticClass:"hljs language-jsx"},[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" CustomedButton = styled(Button)"),a("span",{staticClass:"hljs-string"},[s._v("`\n  color: customedColor;\n`")]),s._v(";\n")])])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},3138:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("Factory Method")])]),a("h2",{attrs:{id:"gong-han-fang-fa"}},[s._v("工厂方法 "),a("a",{staticClass:"header-anchor",attrs:{href:"#gong-han-fang-fa"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("Factory Method（工厂方法）属于创建型模式，利用工厂方法创建对象实例而不是直接用 New 关键字实例化。")])]),a("blockquote",[a("p",[s._v("理解如何写出工厂方法很简单，但理解为什么要用工厂方法就需要动动脑子了。工厂方法看似简单的将 New 替换为一个函数，其实是体现了面向接口编程的思路，它创建的对象其实是一个符合通用接口的通用对象，这个对象的具体实现可以随意替换，以达到通用性目的。")])]),a("p",[a("strong",[s._v("意图：定义一个用于创建对象的接口，让子类决定实例化哪一个类。Factory Method 使一个类的实例化延迟到其子类。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h2",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),a("br"),a("p",[a("strong",[s._v("换灯泡")])]),a("p",[s._v("我自己在家换过灯泡，以前我家里灯坏掉的时候，我看着这个奇形怪状的灯管，心里想，这种灯泡和这个灯座应该是一体的，市场上估计很难买到适配我这个灯座的灯泡了。结果等我把灯泡拧下来，跑到门口的五金店去换的时候，店员随便给了我一个灯泡，我回去随便拧了一下居然就能用了。")]),a("br"),a("p",[s._v("我买这个灯泡的过程就用到了工厂模式，而正是得益于这种模式，让我可以方便在家门口就买到可以用的灯泡。")]),a("br"),a("p",[a("strong",[s._v("卡牌对战游戏")])]),a("p",[s._v("卡牌对战中，卡牌有一些基本属性，比如攻防、生命值，也符合一些通用约定，比如一回合出击一起等等，那么对于战斗系统来说，应该怎样实例化卡牌呢？如何批量操作卡牌，而不是通用功能也要拿到每个卡牌的实例才能调用？另外每个卡牌有特殊能力，这些特殊能力又应该如何拓展呢？")]),a("br"),a("p",[a("strong",[s._v("实现任意图形拖拽系统")])]),a("p",[s._v("一个可以被交互操作的图形，它可以用鼠标进行拉伸、旋转或者移动，不同图形实现这些操作可能并不相同，要存储的数据也不一样，这些数据应该独立于图形存储，我们的系统如果要对接任意多的图形，具备强大拓展能力，对象关系应该如何设计呢？")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h2",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[s._v("在使用工厂方法之前，我们就要创建一个 "),a("strong",[s._v("用于创建对象的接口")]),s._v("，这个接口具备通用性，"),a("strong",[s._v("所以我们可以忽略不同的实现来做一些通用的事情")]),s._v("。")]),a("br"),a("p",[s._v("换灯泡的例子来说，我去门口五金店买灯泡，而不是拿到灯泡材料自己 New 一个出来，就是因为五金店这个 “工厂” 提供给我的灯泡符合国家接口标准，而我家里的灯座也符合这个标准，所以灯座不需要知道对接的灯泡是具体哪个实例，什么颜色，什么形状，这些都无所谓，只要灯泡符合国家标准接口，就可以对接上。")]),a("br"),a("p",[s._v("对卡牌对战的系统来说，"),a("strong",[s._v("所有卡牌都应该实现同一种接口")]),s._v("，所以卡牌对战系统拿到的卡牌应该就是简单的 Card 类型，这种类型具备基本的卡片操作交互能力，系统就调用这些能力完成基本流程就好了，如果系统直接实例化具体的卡片，那不同的卡片类型会导致系统难以维护，卡片间操作也无法抽象化。")]),a("br"),a("p",[s._v("正式这种模式，使得我们可以在卡牌的具体实现上做一些特殊功能，比如修改卡片攻击时效果，修改卡牌销毁时效果。")]),a("br"),a("p",[s._v("对图形拖拽系统来说，用到了 “连接平行的类层次” 这个特性，所谓连接平行的类层次，就是指一个图形，与其对应的操作类是一个平行抽象类，而一个具体的图形与具体的操作类则是另一个平行关系，系统只要关注最抽象的 “通用图形类” 与 “通用操作类” 即可，操作时，底层可能是某个具体的 “圆类” 与 “圆操作类” 结合使用，具体的类有不同的实现，但都符合同一种接口，因此操作系统才可以把它们一视同仁，统一操作。")]),a("br"),a("p",[a("strong",[s._v("意图：定义一个用于创建对象的接口，让子类决定实例化哪一个类。Factory Method 使一个类的实例化延迟到其子类。")])]),a("br"),a("p",[s._v("所以接口是非常重要的，工厂方法第一句话就是 “定义一个用于创建对象的接口”，这个接口就是 "),a("code",[s._v("Creator")]),s._v("，让子类，也就是具体的创建类（"),a("code",[s._v("ConcreteCreator")]),s._v("）决定要实例化哪个类（"),a("code",[s._v("ConcreteProduct")]),s._v("）。")]),a("br"),a("p",[s._v("所谓使一个类的实例化延迟到其子类，是因为抽象类不知道要实例化哪个具体类，所以实例化动作只能由具体的子类去做，这样绕一圈的好处是，我们可以将任意多对象看作是同一类事物，做统一的处理，比如 "),a("strong",[s._v("无论何种灯泡实例都满足通用的灯座接口")]),s._v("，"),a("strong",[s._v("所有工厂实例化的卡牌都具备玩一局卡牌游戏的基本功能")]),s._v("，"),a("strong",[s._v("任何图形与交互类都满足特定功能关系")]),s._v("，这种思想让生活和设计得到了大幅简化。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h2",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("img",{attrs:{width:"800",src:"https://img.alicdn.com/tfs/TB1VjyZmsVl614jSZKPXXaGjpXa-1434-476.png"}}),a("p",[a("code",[s._v("Creator")]),s._v(" 就是工厂方法，"),a("code",[s._v("ConcreteCreator")]),s._v(" 是实现了 "),a("code",[s._v("Creator")]),s._v(" 的具体工厂方法，每一个具体工厂方法生产一个具体的产品 "),a("code",[s._v("ConcreteProduct")]),s._v("，每个具体的产品都实现通用产品的特性 "),a("code",[s._v("Product")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h2",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("下面例子使用 typescript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-comment"},[s._v("// 产品接口")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("interface")]),s._v(" Product {\n  "),a("span",{staticClass:"hljs-attr"},[s._v("save")]),s._v(": "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("void")]),s._v(";\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 工厂接口")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("interface")]),s._v(" Creator {\n  "),a("span",{staticClass:"hljs-attr"},[s._v("createProduct")]),s._v(": "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" Product;\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 具体产品")]),s._v("\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("ConcreteProduct")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("implements")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Product")]),s._v(" ")]),s._v("{\n  save = "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {};\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 具体工厂")]),s._v("\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("ConcreteCreator")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("implements")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Creator")]),s._v(" ")]),s._v("{\n  createProduct = "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" ConcreteProduct();\n  };\n}\n")])]),a("br"),a("p",[s._v("创建一个 "),a("code",[s._v("Product")]),s._v(" 的子类 "),a("code",[s._v("ConcreteCreator")]),s._v("，并返回一个实现了 "),a("code",[s._v("Product")]),s._v(" 的具体实例 "),a("code",[s._v("ConcreteProduct")]),s._v("，这样我们就可以方便使用这个工厂了。")]),a("br"),a("p",[s._v("工厂方法并不是直接调用 "),a("code",[s._v("new ConcreteCreator().createProduct")]),s._v(" 那么简单，这样体现不出任何抽象性，真正的场景是，在一个创建产品的流程中，我们只知道拿到的工厂是 "),a("code",[s._v("Creator")]),s._v("：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("main")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("anyCreator: Creator")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" product = anyCreator.createProduct()\n}\n")])]),a("br"),a("p",[s._v("在外面调用 "),a("code",[s._v("main")]),s._v(" 函数时，实际传进去的是一个具体工厂，比如 "),a("code",[s._v("myCreator")]),s._v("，但关键是 "),a("code",[s._v("main")]),s._v(" 函数不用关心到底是哪一个具体工厂，只要知道是个工厂就行了，具体对象创建过程交给了其子类。")]),a("br"),a("p",[a("strong",[s._v("你也许也发现了，这就是抽象工厂中其中的一步，所以抽象工厂使用了工厂方法。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h2",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("工厂方法中，每创建一种具体的子类，就要写一个对应的 "),a("code",[s._v("ConcreteCreate")]),s._v("，这相对比较笨重，但有意思的是，如果将创建多个对象放到一个 "),a("code",[s._v("ConcreteCreate")]),s._v(" 中，就变成了 "),a("strong",[s._v("简单工厂模式")]),s._v("，新增产品要修改已有类不符合开闭模式，反而推荐写成本文说的这种模式。")]),a("p",[s._v("彼之毒药吾之蜜糖，要知道没有一种设计模式解决所有问题，没有一种设计模式没有弊端，"),a("strong",[s._v("而这个弊端不代表这个设计模式不好，一个弊端的出现可能是为了解决另一个痛点。")]),s._v(" 要接受不完美的存在，这么多种设计模式就是对应了不同的业务场景，"),a("strong",[s._v("为合适的场景选择一种能将优势发扬光大，以至于能掩盖弊端，就算进行了合理的架构设计")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h2",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("工厂方法并不是简单把 New 的过程换成了函数，而是抽象出一套面向接口的设计模式：")]),a("img",{attrs:{width:"800",src:"https://img.alicdn.com/tfs/TB1WKH.Zoz1gK0jSZLeXXb9kVXa-1480-786.png"}}),a("p",[s._v("你看，我要做灯泡，可以直接做具体的灯泡，也可以定一个灯泡接口，通过灯泡工厂拿到具体灯泡，灯泡工厂对待所有灯泡的只做流程都是一样的，不管是中世纪风灯泡，还是复古灯泡，还是普通白织灯，都是一模一样的制作流程，具体怎么做由具体的子类去实现，这样我们可以统一管理 “灯泡” 这一个通用概念，而忽略不同灯泡之间不太重要的差别，程序的可维护性得到了大幅提升。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"3d37":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("JavaScript")])]),a("h2",{attrs:{id:"javascript-cuo-wu-dui-zhan-chu-li"}},[s._v("JavaScript 错误堆栈处理 "),a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-cuo-wu-dui-zhan-chu-li"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读文章："),a("a",{attrs:{href:"http://lucasfcosta.com/2017/02/17/JavaScript-Errors-and-Stack-Traces.html?utm_source=javascriptweekly&utm_medium=email"}},[s._v("JavaScript-Errors-and-Stack-Traces")])])]),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/25338849"}},[s._v("中文版译文")])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i2/O1CN01irhvv21FDyUJcJ0fe_!!6000000000454-2-tps-1960-720.png",alt:"logo",width:"500"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("错误处理无论对那种语言来说，都至关重要。在 JavaScript 中主要是通过 Error 对象和 Stack Traces 提供有价值的错误堆栈，帮助开发者调试。在服务端开发中，开发者可以将有价值错误信息打印到服务器日志中，而对于客户端而言就很难重现用户环境下的报错，我们团队一直在做一个错误监控的应用，在这里也和大家一起讨论下 js 异常监控的常规方式。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("了解 Stack")])]),a("p",[s._v("Stack 部分主要在阐明 js 中函数调用栈的概念，它符合栈的基本特性『当调用时，压入栈顶。当它执行完毕时，被弹出栈』，简单看下面的代码：")]),a("pre",[a("code",{staticClass:"hljs"},[s._v("function c() {\n\ttry {\n\t\tvar bar = baz;\n    throw new Error()\n\t} catch (e) {\n\t\tconsole.log(e.stack);\n\t}\n}\n\nfunction b() {\n\tc();\n}\n\nfunction a() {\n\tb();\n}\n\na();\n")])]),a("br"),a("p",[s._v("上述代码中会在执行到 c 函数的时候跑错，调用栈为 "),a("code",[s._v("a -> b -> c")]),s._v("，如下图所示：")]),a("p",[a("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1hqekQVXXXXa1XVXXXXXXXXXX-734-256.png",alt:""}})]),a("p",[s._v("很明显，错误堆栈可以帮助我们定位到报错的位置，在大型项目或者类库开发时，这很有意义。")]),a("br"),a("p",[a("strong",[s._v("认知 Error 对象")])]),a("p",[s._v("紧接着，原作者讲到了 Error 对象，主要有两个重要属性 message 和 name 分别表示错误信息和错误名称。实际上，除了这两个属性还有一个未被标准化的 stack 属性，我们上面的代码也用到了 "),a("code",[s._v("e.stack")]),s._v("，这个属性包含了错误信息、错误名称以及错误栈信息。在 chrome 中测试打印出 "),a("code",[s._v("e.stack")]),s._v(" 于 "),a("code",[s._v("e")]),s._v(" 类似。感兴趣的可以了解下 Sentry 的 "),a("a",{attrs:{href:"https://sentry.io/features/stacktrace/"}},[s._v("stack traces")]),s._v("，它集成了 TraceKit，会对 Error 对象进行规范化处理。")]),a("br"),a("p",[a("strong",[s._v("如何使用堆栈追踪")])]),a("p",[s._v("该部分以 NodeJS 环境为例，讲解了 "),a("code",[s._v("Error.captureStackTrace")]),s._v("，将 stack 信息作为属性存储在一个对象当中，同时可以过滤掉一些无用的堆栈信息。这样可以隐藏掉用户不需要了解的内部细节。作者也以 Chai 为例，内部使用该方法对代码的调用者屏蔽了不相关的实现细节。通过以 Assertion 对象为例，讲述了具体的内部实现，简单来说通过一个 addChainableMethod 链式调用工具方法，在运行一个 Assertion 时，将它设为标记，其后面的堆栈会被移除；如果 assertion 失败移除起后面所有内部堆栈；如果有内嵌 assertion，将当前 assertion 的方法放到 ssfi 中作为标记，移除后面堆栈帧；")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("参与本次精读的同学有："),a("a",{attrs:{href:"https://www.zhihu.com/people/fanhc/activities"}},[s._v("范洪春")]),s._v("、"),a("a",{attrs:{href:"https://www.zhihu.com/people/huang-zi-yi-83/answers"}},[s._v("黄子毅")]),s._v("、"),a("a",{attrs:{href:"https://www.zhihu.com/people/yangsen/answers"}},[s._v("杨森")]),s._v("、"),a("a",{attrs:{href:"https://www.zhihu.com/people/camsong/answers"}},[s._v("camsong")]),s._v("，该部分由他们的观点总结而出。")]),a("p",[a("strong",[s._v("captureStackTrace 方法优劣")])]),a("p",[s._v("captureStackTrace 方法通过截取有意义报错堆栈，并统计上报，有助于排查问题。常用的断言库 chai 就是通过此方式屏蔽了库自身的调用栈，仅保留了用户代码的调用栈，这样用户会清晰的看到自己代码的调用栈。不过 Chai 的断言方式过分语义化，代码不易读。而实际上，现在有另外一款更黑科技的断言库正在崛起，那就是 "),a("a",{attrs:{href:"https://github.com/power-assert-js/power-assert"}},[s._v("power-assert")]),s._v("。")]),a("br"),a("p",[s._v("直观的看一下 Chai.js 和 power-assert 的用法及反馈效果（以下代码及截图来自[小菜荔枝](http://www.jianshu.com/p/41ced3207a0c）：")]),a("pre",[a("code",{staticClass:"hljs language-js"},[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" assert = "),a("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'power-assert'")]),s._v(");\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" should = "),a("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'should'")]),s._v(");      "),a("span",{staticClass:"hljs-comment"},[s._v("// 别忘记 npm install should")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" obj = {  \n  "),a("span",{staticClass:"hljs-attr"},[s._v("arr")]),s._v(": ["),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("],  \n  "),a("span",{staticClass:"hljs-attr"},[s._v("number")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("10")]),s._v("\n};\n\ndescribe("),a("span",{staticClass:"hljs-string"},[s._v("'should.js和power-assert的区别'")]),s._v(", "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {  \n  it("),a("span",{staticClass:"hljs-string"},[s._v("'使用should.js的情况'")]),s._v(", "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {    \n    should(obj.arr["),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("]).be.equal(obj.number);      "),a("span",{staticClass:"hljs-comment"},[s._v("// should api")]),s._v("\n  });  \n\n  it("),a("span",{staticClass:"hljs-string"},[s._v("'使用power-assert的情况'")]),s._v(", "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {    \n    assert(obj.arr["),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("] === obj.number);      "),a("span",{staticClass:"hljs-comment"},[s._v("// 用assert就可以")]),s._v("\n  });\n});\n")])]),a("br"),a("p",[a("img",{attrs:{src:"https://cloud.githubusercontent.com/assets/1336484/25432441/0696cda2-2ab7-11e7-94a7-6719acdcb7af.png",alt:""}})]),a("p",[a("strong",[s._v("抛 Error 对象的正确姿势")])]),a("p",[s._v("在我们日常开发中一定要抛出标准的 Error 对象。否则，无法知道抛出的类型，很难对错误进行统一处理。正确的做法应该是使用 throw new Error(“error message here”)，这里还引用了 Node.js 中推荐的异常"),a("a",{attrs:{href:"https://www.joyent.com/node-js/production/design/errors"}},[s._v("处理方式")]),s._v(":")]),a("ul",[a("li",[s._v("区分操作异常和程序员的失误。操作异常指可预测的不可避免的异常，如无法连接服务器")]),a("li",[s._v("操作异常应该被处理。程序员的失误不需要处理，如果处理了反而会影响错误排查")]),a("li",[s._v("操作异常有两种处理方式：同步 (try……catch) 和异步（callback, event - emitter）两种处理方式，但只能选择其中一种。")]),a("li",[s._v("函数定义时应该用文档写清楚参数类型，及可能会发生的合理的失败。以及错误是同步还是异步传给调用者的")]),a("li",[s._v("缺少参数或参数无效是程序员的错误，一旦发生就应该 throw。 传递错误时，使用标准的 Error 对象，并附件尽可能多的错误信息，可以使用标准的属性名")])]),a("p",[a("strong",[s._v("异步（Promise）环境下错误处理方式")])]),a("p",[s._v("在 Promise 内部使用 reject 方法来处理错误，而不要直接调用 "),a("code",[s._v("throw Error")]),s._v("，这样你不会捕捉到任何的报错信息。")]),a("br"),a("p",[s._v("reject 如果使用 Error 对象，会导致捕获不到错误的情况，在我的博客中有讨论过这种情况：Callback Promise Generator Async-Await 和异常处理的演进，我们看以下代码：")]),a("pre",[a("code",{staticClass:"hljs language-js"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("thirdFunction")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Promise")]),s._v("("),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("resolve, reject")]),s._v(") =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("setTimeout")]),s._v("("),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {\n      reject("),a("span",{staticClass:"hljs-string"},[s._v("'我可以被捕获'")]),s._v(")\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// throw Error('永远无法被捕获')")]),s._v("\n    })\n  })\n}\n\n"),a("span",{staticClass:"hljs-built_in"},[s._v("Promise")]),s._v(".resolve("),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(").then("),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("resolve, reject")]),s._v(") =>")]),s._v(" {\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" thirdFunction()\n}).catch("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("error")]),s._v(" =>")]),s._v(" {\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v("'捕获异常'")]),s._v(", error) "),a("span",{staticClass:"hljs-comment"},[s._v("// 捕获异常 我可以被捕获")]),s._v("\n});\n")])]),a("br"),a("p",[s._v("我们发现，在 macrotask 队列中，"),a("code",[s._v("reject")]),s._v(" 行为是可以被 catch 到的，而此时 throw Error 就无法捕获异常，大家可以贴到浏览器运行试一试，第二次把 "),a("code",[s._v("reject('我可以被捕获')")]),s._v(" 注释起来，取消 "),a("code",[s._v("throw Error('永远无法被捕获')")]),s._v(" 的注释，会发现异常无法 catch 住。")]),a("br"),a("p",[s._v("这是因为 setTimeout 中 throw Error 无论如何都无法捕获到，而 reject 是 Promise 提供的关键字，自己当然可以 catch 住。")]),a("p",[a("strong",[s._v("监控客户端 Error 报错")])]),a("p",[s._v("文中提到的 "),a("code",[s._v("try{}catch{}")]),s._v(" 可以拿到出错的信息，堆栈，出错的文件、行号、列号等，但无法捕捉到语法错误，也没法去捕捉全局的异常事件。此外，在一些古老的浏览器下 "),a("code",[s._v("try{}catch{}")]),s._v(" 对 js 的性能也有一定的影响。")]),a("br"),a("p",[s._v("这里，想提一下另一个捕捉异常的方法，即 "),a("code",[s._v("window.onerror")]),s._v("，这也是我们在做错误监控中用到比较多的方案。它可以捕捉语法错误和运行时错误，并且拿到出错的信息，堆栈，出错的文件、行号、列号等。不过，由于是全局监测，就会统计到浏览器插件中的 js 异常。当然，还有一个问题就是浏览器跨域，页面和 js 代码在不同域上时，浏览器出于安全性的考虑，将异常内容隐藏，我们只能获取到一个简单的 "),a("code",[s._v("Script Error")]),s._v(" 信息。不过这个解决方案也很成熟：")]),a("ul",[a("li",[s._v("给应用内所需的 "),a("code",[s._v("<script>")]),s._v(" 标签添加 crossorigin 属性；")]),a("li",[s._v("在 js 所在的 cdn 服务器上添加 "),a("code",[s._v("Access-Control-Allow-Origin: *")]),s._v(" HTTP 头；")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("Error 和 Stack 信息对于日常开发来说，尤为重要。如果可以将 Error 统计并上报，更有助于我们排查信息，发现在用户环境下到底触发了什么错误，帮助我们提升产品的稳定性。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},4218:function(s,t,a){s.exports=a.p+"img/prject-fe.2346be1b.png"},"428f":function(s,t,a){var e=a("da84");s.exports=e},"4de4":function(s,t,a){"use strict";var e=a("23e7"),n=a("b727").filter,l=a("1dde"),i=l("filter");e({target:"Array",proto:!0,forced:!i},{filter:function(s){return n(this,s,arguments.length>1?arguments[1]:void 0)}})},5212:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("mock")])]),a("h2",{attrs:{id:"mock"}},[s._v("mock "),a("a",{staticClass:"header-anchor",attrs:{href:"#mock"}},[s._v("§")])]),a("br"),a("p",[a("em",[s._v("文档版本：v1.0")])]),a("p",[a("em",[s._v("修订时间：2019年10月11日")])]),a("p",[a("em",[s._v("范围： 各个产品研发侧前端产品")])]),a("table",{staticClass:"table"},[a("thead",[a("tr",[a("th",[s._v("版本")]),a("th",[s._v("修改人")]),a("th",[s._v("修订内容")]),a("th",[s._v("时间")])])]),a("tbody",[a("tr",[a("td",[s._v("v1.0")]),a("td",[s._v("王来彬")]),a("td",[s._v("第一版发布")]),a("td",[s._v("2019-10-11")])])])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容")])]),a("h2",{attrs:{id:"nei-rong"}},[s._v("内容 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong"}},[s._v("§")])]),a("br"),a("p",[s._v("mock serve 采用 Nodejs + koa + nodemon 进行开发，支持http和websocket请求，遵循的原则"),a("strong",[s._v("文件目录+文件名称组合成api地址")]),s._v("（如："),a("code",[s._v("/api/sys/user/1")]),s._v("，其对应的为mock中 "),a("code",[s._v("sys文件夹 => user文件夹 => 1.json相关内容")]),s._v("） ，websocket相关内容直接在 "),a("em",[s._v("server.js")]),s._v(" 中处理，相关端口的修改也在此处理。")]),a("blockquote",[a("p",[s._v("为了和后台方便调试，建议前端mock的端口和后台服务端口相同，联调时只需要通过 "),a("strong",[s._v("Gas Mask/ SwitchHosts")]),s._v(" 类似修改host地址的软件动态切换即可。无需的修改 "),a("em",[s._v("vue.config.js")]),s._v(" 的配置重新编译！")])])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"535e":function(s,t,a){s.exports=a.p+"img/spingBootFlow.8382bf01.png"},5812:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[s._m(0),a("p",[s._v("Singleton（单例模式）属于创建型模式，提供一种对象获取方式，保证在一定范围内是唯一的。")]),s._m(1),a("p",[s._v("其实单例模式在前端体会的不明显，原因有：")]),s._m(2),a("p",[s._v("另外我们说到单例，是隐含了一个范围的，指的是在某个范围内单例，比如在一个上下文中，还是一个房间中，还是一个进程，一个线程中单例，不同场景范围会不同。")]),s._m(3),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h2",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),a("br"),a("p",[a("strong",[s._v("多人游戏的共享物品")])]),a("p",[s._v("玩过游戏的同学都知道，我们在每局游戏中使用的公共物品在当前房间中是唯一的，但在游戏房间间却不是唯一的，所以这些公共物品肯定有不同的类去描述，那每局游戏中怎么拿公共物品，可以保证拿到的是当前局内唯一的？")]),a("br"),a("p",[a("strong",[s._v("Redux 数据流")])]),a("p",[s._v("其实前端的 Redux 数据流本身就是单例模式，在一个应用中，数据是唯一的，但可以有不同的 UI 使用这份唯一的数据，甚至把一个表格组件展示在两个不同地方，比如全屏模式，但数据依然是一份，我们没有必要为了全屏展示表格，就让它再发一次取数请求，完全可以和原来的表格共享一份数据。")]),a("br"),a("p",[a("strong",[s._v("数据库连接池")])]),a("p",[s._v("每个 SQL 查询都依赖数据库连接池，如果每次查询都建立一次数据库连接池，则建立连接的速度会远远慢于 SQL 查询速度，因此你会怎么设计数据库连接池的获取方法？")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h2",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[s._v("单例模式的意图很简单，几乎就是其字面含义：")]),a("br"),a("p",[a("strong",[s._v("意图：保证一个类仅有一个实例，并提供一个访问它的全局访问点。")])]),a("br"),a("p",[s._v("对于多人游戏的共享物品，比如一口锅，要保证在一局游戏内唯一，就要提供一种方法访问到唯一实例。")]),a("br"),a("p",[s._v("Redux 数据流的 "),a("code",[s._v("connect")]),s._v(" 装饰器就是全局访问点的一种设计。")]),a("br"),a("p",[s._v("数据库连接池可以提前初始化好，并通过固定 API 提供这个唯一实例。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h2",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("img",{attrs:{width:"600",src:"https://img.alicdn.com/tfs/TB1qVf20QY2gK0jSZFgXXc5OFXa-1060-342.png"}}),a("p",[a("code",[s._v("Singleton")]),s._v(" 是单例模式的接口，客户只能通过其定义的 "),a("code",[s._v("instance()")]),s._v(" 访问实例，以保证单例。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h2",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("下面例子使用 typescript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Ball")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" _instance = "),a("span",{staticClass:"hljs-literal"},[s._v("undefined")]),s._v("\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 构造函数申明为 private，就可以阻止 new Ball() 行为")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("constructor")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {}\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("static")]),s._v(" getInstance = "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v("._instance === "),a("span",{staticClass:"hljs-literal"},[s._v("undefined")]),s._v(") {\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v("._instance = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Ball()\n    }\n\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v("._instance\n  }\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 使用")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" ball = Ball.getInstance()\n")])]),a("br"),a("p",[s._v("可以仔细想想，为什么这个例子把单例写成了静态方法，而不是一个全局变量？其实全局变量也能解决问题，但由于会污染全局，要尽可能通过模块化方式解决，上面的例子就是一个较好的封装方式。")]),a("br"),a("p",[s._v("当然这只是一个最简单的例子，实际上单例模式还有几种模式：")]),a("br"),a("p",[a("strong",[s._v("饿汉式")])]),a("p",[s._v("初始化时就生成一份实例，这样调用时直接就能获取。")]),a("br"),a("p",[a("strong",[s._v("懒汉式")])]),a("p",[s._v("就是代码例子中写的，按需实例化，即调用的时候再实例化。")]),a("blockquote",[a("p",[a("strong",[s._v("要注意，按需不一定是什么好事，如果 New 的成本很高还按需实例化，可能把系统异常的风险留到随机的触发时机，导致难以排查 BUG，另外也会影响第一次实例化时的系统耗时。")])])]),a("p",[s._v("对 JAVA 来说，单例还需要考虑并发性，有 "),a("strong",[s._v("双重检测、静态内部类、枚举")]),s._v(" 等办法解决，这里不具体展开。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h2",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("单例模式的问题有：")]),a("ul",[a("li",[s._v("对面向对象不太友好。对封装、继承、多态支持不够友好。")]),a("li",[s._v("不利于梳理类之间的依赖关系。毕竟单例是直接调用的，而不是在构造函数申明的，所以要梳理关系要看完每一行代码才能确定。")]),a("li",[s._v("可拓展性不好。万一要支持多例就比较难拓展，比如全局数据流可能因为微前端方案改成多实例、数据库连接池为了分治 SQL 改成多实例，都是有可能的，在系统设计之初就要考虑到未来是否还会保持单例。")]),a("li",[s._v("可测试性不好，因为单例是全局共享的，无法保证测试用例间的隔离。")]),a("li",[s._v("无法使用构造函数传参。")])]),a("p",[s._v("另外单例模式还可以被工厂方法所替代，所以不用特别纠结一种设计模式，可以结合使用，工厂函数也可以内嵌单例模式。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h2",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("单例模式概念、用法都简单，是架构设计常用方案，但要充分理解到单例模式的弊端，防止不恰当的使用。")]),a("img",{attrs:{width:"400",src:"https://img.alicdn.com/tfs/TB15O3YmOpE_u4jSZKbXXbCUVXa-904-224.png"}})],2)],1)},n=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h1",{attrs:{id:"singleton-dan-li-mo-shi"}},[s._v("Singleton（单例模式） "),a("a",{staticClass:"header-anchor",attrs:{href:"#singleton-dan-li-mo-shi"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("意图：保证一个类仅有一个实例，并提供一个访问它的全局访问点。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ol",[a("li",[s._v("前端代码本身在单机运行，创建的任何变量都是天然分布式的，不需要担心影响另一个用户。")]),a("li",[s._v("后端代码是一对多的，分辨出哪些资源是请求间共享的，哪些是请求内独有的很重要。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("blockquote",[a("blockquote")])])}],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"585f":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("从 0 到 1")])]),a("h2",{attrs:{id:"cong-0-dao-1"}},[s._v("从 0 到 1 "),a("a",{staticClass:"header-anchor",attrs:{href:"#cong-0-dao-1"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("《从 0 到 1》是一本创业经典，创业非常有魅力，需要多种维度的商业知识，包括基础经济学、公司经济学、商业学、公司金融学、甚至历史学等等。")]),a("p",[s._v("为什么要懂历史学？因为《从 0 到 1》这本书的作者是 彼得·蒂尔，他是 Paypal 的创始人和投资家，想读懂他的书就必须读懂他自己的创业经历，而 Paypal 的成长经历需要以考究历史的思维学习，了解什么是 Paypal 黑帮，他与其他公司的关系，为什么 Paypal 是继英特尔时隔 20 年之后的互联网黄埔军校。")]),a("p",[s._v("为什么要懂商业学？本书第一句话就是 “在商业上机会只有一次”，这是商业基本准则之一。商业不是物理学，没有必然因果关系，没有商业必胜法。同时，商业也是训练多维度思考的战场，对一个商业结果的解读多种多样，我们需要避免对结果的简单归因、过度解读、甚至是本末倒置。《从 0 到 1》这本书抓住了创业成功的精髓。")]),a("p",[s._v("《从 0 到 1》这本书，就是在商业这种复杂环境下，尝试总结一套通用的成功经验。然而前面我也说了，商业没有必胜法，那什么才是驱动成功与发展的根本引擎？"),a("strong",[s._v("就是创新")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("概述 & 精读")])]),a("h3",{attrs:{id:"gai-shu-jing-du"}},[s._v("概述 & 精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#gai-shu-jing-du"}},[s._v("§")])]),a("br"),a("h3",{attrs:{id:"wei-lai-de-tiao-zhan"}},[s._v("未来的挑战 "),a("a",{staticClass:"header-anchor",attrs:{href:"#wei-lai-de-tiao-zhan"}},[s._v("§")])]),a("p",[s._v("什么人能胜任未来的挑战？彼得蒂尔认为，有创新能力的人可以，所以他面试时喜欢问："),a("strong",[s._v("“有什么你与其他人有不同看法，但你觉得却很重要的事”")]),s._v("。能真正回答好这个问题的人才算具备了基本创新能力。")]),a("p",[s._v("人类技术演进分为 "),a("strong",[s._v("水平进步与垂直进步")]),s._v("，水平进步是从 1 到 N 的规模化应用，而垂直进步是从 0 到 1 的创造，虽然水平进步可以给发展中国家带来巨大发展速度，但真正推动历史变革的还在于垂直进步。")]),a("p",[s._v("对于创业团队，独立思考与速度很重要，因此团队规模要尽量小。彼得蒂尔对 Paypal 的管理理念重点有二："),a("strong",[s._v("招人越像越好、极端聚焦")]),s._v("，Paypal 在早期时隔工程师都是 UIUC 毕业的，5 个非技术人员都是彼得蒂尔在斯坦福校友网络认识的，背景非常趋同，因此沟通成本非常低，决策效率很高。彼得蒂尔要求员工的年终总结必须明确写出 “对公司最有价值的一个贡献”，只能写一个。")]),a("p",[s._v("根据 Paypal 发展经历来看，难怪《从 0 到 1》这本书会强调小团队高灵活的重要程度，因为 Paypal 就是这么起家的。")]),a("br"),a("h3",{attrs:{id:"xiang-1999-nian-na-yang-kuang-huan"}},[s._v("像 1999 年那样狂欢 "),a("a",{staticClass:"header-anchor",attrs:{href:"#xiang-1999-nian-na-yang-kuang-huan"}},[s._v("§")])]),a("p",[s._v("1993 年网景公司的成立拉开互联网时代的序幕，Paypal 就是这个时代成立的。")]),a("p",[s._v("互联网狂欢兴起：")]),a("img",{attrs:{width:"400",src:"https://user-images.githubusercontent.com/7970947/69900559-e75c1e80-13af-11ea-8f60-c3c80ef2ab98.png"}}),a("p",[s._v("互联网泡沫破裂：")]),a("img",{attrs:{width:"350",src:"https://user-images.githubusercontent.com/7970947/69900566-03f85680-13b0-11ea-86f5-8faf80ae546d.png"}}),a("p",[s._v("自 1999 年之后，市场学会了保守，主要有四条：")]),a("ol",[a("li",[s._v("循序渐进的发展。")]),a("li",[s._v("保持精简和灵活。")]),a("li",[s._v("不要贸然开辟新市场。")]),a("li",[s._v("专注产品而不是营销。")])]),a("p",[s._v("显然，1999 年互联网泡沫破裂后的美国企业家害怕了，逐渐走向了保守。"),a("strong",[s._v("然而彼得蒂尔认为，1999 年互联网泡沫破裂的虽然惨烈，但正因如此才带来了美国未来几十年的增长。")]),s._v(" 保守无法带来成功，相反，这四条的反面反而更正确：")]),a("ol",[a("li",[s._v("大胆尝试胜过平庸保守。")]),a("li",[s._v("坏计划也好过没有计划。")]),a("li",[s._v("竞争性市场对收益有负面影响。")]),a("li",[s._v("营销和产品同样重要。")])]),a("p",[a("strong",[s._v("狂妄自大的尝试必定导致大部分人悲惨的失败，但我们别无选择，创业必须创新，必须实现从 0 到 1。")]),s._v(" 所以彼得蒂尔反直觉的观点就是，我们不能因为吸取 1999 年的教训就变得保守，反而美国需要 1999 年那股狂热驱动新的创新。")]),a("br"),a("h3",{attrs:{id:"suo-you-cheng-gong-de-qi-ye-du-shi-bu-tong-de"}},[s._v("所有成功的企业都是不同的 "),a("a",{staticClass:"header-anchor",attrs:{href:"#suo-you-cheng-gong-de-qi-ye-du-shi-bu-tong-de"}},[s._v("§")])]),a("p",[s._v("彼得蒂尔完美解释了垄断的价值。")]),a("p",[s._v("市场分为充分竞争与完全垄断，看上去充分竞争的市场更有活力，更健康，但实则不然。"),a("strong",[s._v("充分竞争将利润完全吞噬，只有完全垄断才能获得持久价值，最终对市场有利。")])]),a("p",[s._v("对创业者来说也一样，如果你相信充分竞争，你只会创建一家同质化的公司，扎到红海里拼命挣扎，这不会给你带来持久的利益，也不会给市场带来真正的发展。")]),a("p",[s._v("垄断者为了逃避垄断保护法，会竭尽全力证明自己没有取得垄断地位（甚至随时会被市场吃掉），同理，"),a("strong",[s._v("竞争者为了自我麻痹或争取到投资，也会竭尽全力证明自己还有机会，市场并未形成垄断。")]),s._v(" 然而无论怎么说，真正为市场创造独一无二价值的还是垄断者，虽然他们看起来很可恶。")]),a("p",[s._v("不仅在商业如此，互联网公司内部技术竞争也一样："),a("strong",[s._v("低水平的重复竞争挑战者会竭尽全力证明自己所在的领域不存在垄断，然后投入人力做一个注定会失败的项目，不仅无法为公司产生新的价值，还带来了资源内耗。相反，那个垄断者才是为公司源源不断带来价值的引擎，虽然竞争者们都厌恶它。这也是为什么阿里鼓励高水平竞争，禁止低水平重复轮子。")])]),a("br"),a("h3",{attrs:{id:"jing-zheng-yi-shi"}},[s._v("竞争意识 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-zheng-yi-shi"}},[s._v("§")])]),a("p",[s._v("大家觉得竞争理所应当，但其实竞争更多带来的是伤害。")]),a("p",[s._v("在奇葩说里听到薛兆丰这么一句话：“求职者你们的竞争对手不是企业，而是其他求职者”。说的很有道理，真正的伤害是在竞争中产生的，而存在供需关系的公司与求职者之间哪存在什么竞争？直白一点说，如果整个市场只有一个应聘者，哪怕小学没毕业，阿里腾讯也会抢着要。")]),a("br"),a("p",[a("strong",[s._v("竞争使我们过度看中过去的机会，而忽略创造新的可能性。")]),s._v(" 就像 Paypal 与 X 合并一样，彼得蒂尔发现这两家公司的竞争关系是恶性的，只有合并后形成垄断才能创造新的价值。而 X 公司的创始人就是埃隆·马斯克，虽然最后因为极力推广 X 品牌被合并后的 Paypal 请出局后，依然在 Paypal 被 20 多亿美元收购后，获得了一亿多美元回报，才创建了特斯拉和太空探索公司，真正为社会创造新的价值。")]),a("br"),a("h3",{attrs:{id:"hou-fa-you-shi"}},[s._v("后发优势 "),a("a",{staticClass:"header-anchor",attrs:{href:"#hou-fa-you-shi"}},[s._v("§")])]),a("p",[s._v("既然垄断如此重要，那么如何打造垄断？")]),a("p",[a("strong",[s._v("首先一个企业的价值是它未来创造利润的总和")]),s._v("。也许你会奇怪，为什么企业现在的资产不算做企业价值呢？企业价值一般指的是企业市值，企业市值描述的企业价值其实是它的 "),a("strong",[s._v("当前投资价值")]),s._v("，一个不能在未来创造利润的企业，就算现在坐拥几千亿美元的资产，对你来说也是没有投资价值的。")]),a("p",[s._v("建立企业垄断，可以建立企业的护城河，比如专利技术或者网络效应；或者先进入小市场，逐步扩大范围，就像亚马逊从图书在线交易切入，随后扩张到全品类。与你的对手产生放大收益，你不能仅仅取代你的对手，最好能为它赋能。这些都是企业的后发优势。")]),a("br"),a("h3",{attrs:{id:"cheng-gong-bu-shi-zhong-cai-piao"}},[s._v("成功不是中彩票 "),a("a",{staticClass:"header-anchor",attrs:{href:"#cheng-gong-bu-shi-zhong-cai-piao"}},[s._v("§")])]),a("p",[s._v("虽然大部分成功创业者都会将一半功劳归功于运气，但你最好不要真的相信，否则为什么有那么多连续失败的创业者呢？如果创业需要运气，那为什么彼得蒂尔要写《从 0 到 1》这本书，为什么我还要精读它呢？")]),a("br"),a("p",[a("strong",[s._v("成功者的运气是靠努力换来的")]),s._v("。")]),a("p",[s._v("国家就是一个巨大的创业，彼得蒂尔对当下各国对未来看法划出了四象限图：")]),a("img",{attrs:{width:"400",src:"https://user-images.githubusercontent.com/7970947/69900946-35275580-13b5-11ea-880b-63403fa154f5.png"}}),a("ul",[a("li",[s._v("明确乐观的未来：1950～1970 的美国，当时美国创新能力和工程应用都在上升期，未来是明确且乐观的。")]),a("li",[s._v("不明确乐观的未来：1982 至今的美国，由于技术发展遇到了瓶颈，比如生物制药和医疗都有巨大不确定性，人们只知道未来是美好的，但不知道何时可以到来。")]),a("li",[s._v("明确悲观的未来："),a("strong",[s._v("现在的中国，由于缺乏核心创新能力，现在中国迅猛发展其实在吃发达国家创新的红利，只是将这些技术规模化应用，所以发展方向是明确的，但一旦红利吃完，不确定自己是否能找到新的突破点，因此对未来是悲观的。")])]),a("li",[s._v("不明确悲观的未来：现在的欧洲，技术红利和规模化都吃完了，不知道未来该怎么走，也不知道走向哪里。")])]),a("p",[s._v("不论国家还是公司，在这个时代想要拥有最好的未来，就是不明确乐观的未来，虽然这个乐观是不明确的，也就是需要运气，但只要在正确的方向努力，总是可能会成功。如果你真的相信比尔盖兹成功来源于运气，那请理解这是一个明确的运气，而不是不明确的运气，并不是所有方向的创业都可能走向成功。")]),a("br"),a("h3",{attrs:{id:"xiang-qian-kan"}},[s._v("向钱看 "),a("a",{staticClass:"header-anchor",attrs:{href:"#xiang-qian-kan"}},[s._v("§")])]),a("p",[s._v("当爱因斯坦宣称复利是“世界第八大奇迹”，因为钱可以生钱，本质原因是指数级增长。指数级增长之所以如此可怕，还因为并没有证据表明爱英斯坦说过这句话，但因为他的影响力有指数级影响力，所有有影响力的话可能都会 “归功给他”。")]),a("p",[s._v("风险投资领域也是如此，一家风投最成功的项目带来的收益可能超过其他所有项目的总和，所以风投才会不断给有发展潜力的企业加注，这都是因为指数级效应。")]),a("p",[s._v("所以如果你创业的公司不能成为幂次法则指数增长的类型，最好尽快换一个项目，因为做一个平庸的项目是没有意义的，世界的天枰都会为头部项目加码。")]),a("br"),a("h3",{attrs:{id:"mi-mi"}},[s._v("秘密 "),a("a",{staticClass:"header-anchor",attrs:{href:"#mi-mi"}},[s._v("§")])]),a("p",[s._v("企业只有创新才能获得成功，那一定是发现了新的 “商业秘密”。")]),a("p",[s._v("但现在社会发展遇到了瓶颈，大家都不愿意探索新的秘密，主要有四个原因：")]),a("ol",[a("li",[s._v("认为已经没有新的秘密。就像探索世界一样，当地球完全被开发，已经没有探索的必要。")]),a("li",[s._v("规避风险。害怕没有找到秘密而耽误自己的人生。")]),a("li",[s._v("自满。安于现状，认为不需要探寻新的秘密。")]),a("li",[s._v("扁平化。由于互联网对社会的连接，我们更容易觉得竞争是全球化的，如果有新的秘密，一定会更优秀的人发现，而显然我不是最优秀的人，所以我没有必要去发觉秘密，那些最优秀的人会帮我做到。")])]),a("p",[s._v("想要扭转这个悲观思想，"),a("strong",[s._v("你需要意识到现代分工是极度专业化的，不同领域间往往很难竞争")]),s._v("，一个物理学家可能难于解决情感问题，要相信还有许多未被关注的细分领域可能存在蓝海。")]),a("br"),a("h3",{attrs:{id:"ji-chu-jue-ding-ming-yun"}},[s._v("基础决定命运 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ji-chu-jue-ding-ming-yun"}},[s._v("§")])]),a("p",[s._v("就像宪法决定了国家基础一样，企业最初决定的重要思想对未来发展起到决定因素，比如行业方向与招聘要求。")]),a("p",[s._v("因此初创公司一定要确保创始人团队之间是否有默契，所有权、经营权和控制权是否分配合理，不要有兼职员工，最好以股权激励员工。")]),a("p",[s._v("在技术领域做架构设计也是如此，架构基础决定了未来发展命运，我们必须尽可能保证早期架构设计的合理性，并坚持这些原则，就像坚持宪法一样。")]),a("br"),a("h3",{attrs:{id:"hei-shou-dang-shi-de-ji-zhi"}},[s._v("黑手党式的机制 "),a("a",{staticClass:"header-anchor",attrs:{href:"#hei-shou-dang-shi-de-ji-zhi"}},[s._v("§")])]),a("p",[s._v("为什么 Paypal 早期员工被称为 Paypal 黑帮？其实彼得蒂尔创建的 Paypal 由于触及到金融领域，相关利益方非常复杂，对于没有政府背景的他来说几乎是不可能做成的。")]),a("p",[s._v("Paypal 招来的早期员工必须极度认同其企业文化，认同 “创造虚拟货币代替美元” 这个疯狂的想法。")]),a("p",[a("strong",[s._v("Paypal 黑帮对公司的使命有着近乎于 “邪教” 般的信仰，唯一区别是，他们做的事情本身并不坏。")])]),a("br"),a("h3",{attrs:{id:"gu-ke-bu-hui-zi-dong-shang-men"}},[s._v("顾客不会自动上门 "),a("a",{staticClass:"header-anchor",attrs:{href:"#gu-ke-bu-hui-zi-dong-shang-men"}},[s._v("§")])]),a("p",[s._v("销售和技术同样重要。")]),a("p",[s._v("在工程技术界，技术打造的产品功能界限清晰，不是生效就是失效，而销售界，需要通过精心设计活动来打动用户的芳心，但却不能改变产品的实质性内容。技术内容是务实的，销售内容是务虚的，但我们不能说务实一定比务虚重要。")]),a("p",[s._v("销售的技巧也随着业务场景的不同而不同。")]),a("ul",[a("li",[s._v("复杂营销。当面对大企业客户时，甚至要克服政治惰性说服政府太空飞船采用你们公司的技术，而一旦完成协议的签署，哪怕只有几单，也足够维持公司后续发展了。")]),a("li",[s._v("人员营销。和复杂营销相反，需要从具体场景逐渐深入，比如 Box 公司的云存储服务，首先卖给了斯坦福睡眠诊所，之后逐步扩展到整个斯坦福大学，但如果 Box 一开始就和斯坦福的校长洽谈整个学校的云服务方案，可能一开始就会失败。")]),a("li",[s._v("病毒式营销。Paypal 的增长过程就是病毒式营销的范例，通过邀请机制传播给好友，并给最多 20 美元的奖励，也就是获客成本 20 元支撑了 Paypal 病毒式营销的成立。")])]),a("p",[s._v("然而 Paypal 也不是漫无目的的砸钱，首先它砸钱有自己的原因，因为 Paypal 是一个拥有网络效应的项目，因此拥有越多的用户就能带来越多的未来价值，这是 Paypal 可以选择烧钱营销的最大原因。")]),a("p",[s._v("其次 Paypal 也选择了两个聪明的营销方式，第一是通过邮箱营销，由于当时世界上拥有邮箱的用户很少，都是一些对新技术持有开放态度的用户，因此邮件营销的人群就比较正确。后来 Paypal 发现，eBay 有部分商家甚至主动在商户页面贴出注册 Paypal 的链接，不仅是为了赚取佣金，更因为 Paypal 网络支付的最大场景就是电商交易平台，因此后续 Paypal 重点转向 eBay 推广。")]),a("br"),a("h3",{attrs:{id:"ren-lei-he-ji-qi"}},[s._v("人类和机器 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ren-lei-he-ji-qi"}},[s._v("§")])]),a("p",[a("strong",[s._v("机器未来并不是为了取代人类，而是辅助人类更高效工作。")]),s._v(" 在 "),a("a",{attrs:{href:"https://github.com/dt-fe/weekly/blob/v2/116.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%88%B7%E6%96%B0%E3%80%8B.md#%E5%85%B6%E5%AE%83"}},[s._v("精读《刷新》")]),s._v(" 中，微软 CEO 萨提亚·纳德拉也提到了人与机器的关系 - “机器替代人类工作的过程，也是人类逐渐拾回作为人的尊严的过程。人本就应该将时间用于思考与创造，而不是重复性劳动。”")]),a("p",[s._v("有意思的是，彼得蒂尔在创立 Paypal 过程中由于遇到不法分子盗刷信用卡的问题，因此专门研究网络安全并研发出验证码、数据分析等一直沿用至今的重要网络安全技术，甚至在 Paypal 被 eBay 收购后，彼得蒂尔还专门成立了 Clarium Capital 公司为政府提供安全服务，其核心技术就是在 Paypal 期间为了对抗支付安全问题时打下基础的。")]),a("p",[s._v("所以彼得蒂尔在思考机器和人类关系时，会重点关注机器帮助人类提升价值的领域。其中有一句话触达了问题本质："),a("strong",[s._v("“机器不会有利己的诉求，因此价值最终会转移至人类”。")]),s._v(" 只要机器永远不要求自我价值的实现，人类和机器就能和平共处下去。")]),a("br"),a("h3",{attrs:{id:"lu-se-neng-yuan-yu-te-si-la"}},[s._v("绿色能源与特斯拉 "),a("a",{staticClass:"header-anchor",attrs:{href:"#lu-se-neng-yuan-yu-te-si-la"}},[s._v("§")])]),a("p",[s._v("由于彼得蒂尔与埃隆·马斯克曾经互为敌友关系，因此就关注到了特斯拉与绿色能源的问题。")]),a("p",[s._v("彼得蒂尔认为，绿色能源技术要思考好如下 7 个问题：")]),a("ol",[a("li",[s._v("工程问题，如果一个新技术不能带来本质的突破，那么其未来增长价值就不明显，公司的未来也不够清晰，狂热的投资注定引发泡沫。新能源技术目前带来的提升不是数倍的，因此前景不明确，无法说服大家一定去用这个产品。")]),a("li",[s._v("时机问题，目前新能源领域技术并没有质的突破，现在进入注定面临技术储备不足的问题。")]),a("li",[s._v("垄断问题，新能源技术是否能够垄断？新能源公司可能在故意隐瞒自己在市场中的渺小程度，其实相对于全球能源市场，新能源只是很小的子版块，整个行业总市值可能都不大。")]),a("li",[s._v("人员问题。新能源是个技术问题，但现在融资需要 CEO 们西装革履的到处募集资金，这是严重的人员问题。")]),a("li",[s._v("销售问题。人们对新能源领域、新能源汽车的接受程度有多大？是否足够便捷？")]),a("li",[s._v("持久问题。随着中国在新能源市场的加入，导致美国新能源企业增长疲软，所以指责中国的声音很多。这是个危险的信号，如果成为垄断者需要以指责的方式进行，注定会失败。另外化石燃料随着液压破碎法的成熟，导致 2008 年天然气价格下降了 70% 多，新能源已不再是解决能源问题的唯一破局方式。")]),a("li",[s._v("秘密问题。节省能源是一个政治正确的问题，大家都在呼吁要环保，那么这就证明环保项目一定有市场？不一定。")])]),a("p",[s._v("特斯拉的成功是因为解决了这 7 个问题，并且从实际的小领域切入，并且和政府以及其他企业达成了技术合作。这说明，在能源 2.0 市场中，企业面临的主要挑战是如何找到一个正确的小型市场。")]),a("br"),a("h3",{attrs:{id:"chuang-shi-ren-de-bei-lun"}},[s._v("创始人的悖论 "),a("a",{staticClass:"header-anchor",attrs:{href:"#chuang-shi-ren-de-bei-lun"}},[s._v("§")])]),a("p",[s._v("这个章节，彼得蒂尔分析了各种名人或创业者的特质，内容非常丰富，由于篇幅限制就不展开了，而且由于笔者在这方面缺乏相应的阅历，很难原汁原味的还原出他对每个名人的评价，因此细节还是推荐阅读原文。")]),a("p",[s._v("以下只能做简单的总结，只能理解到其中部分思想：")]),a("ol",[a("li",[s._v("伟人都拥有矛盾的两面性，企业需要极端的创始人，平庸的人往往很难成为好的创始人。")]),a("li",[s._v("伟人的两面性与其成功路径存在相互塑造的过程，很难说是因为存在矛盾才导致了其成功，还是在成功的过程中塑造了其矛盾的性格。")]),a("li",[s._v("伟人往往都会亲手终结自己的良好形象，除非英年早逝。")])]),a("p",[s._v("当然，这并不是说为了成功，我们必须成为这样的人，这个章节只是对创始人悖论这个现象的一种解读，可能这是一种自然现象，我们不需要模仿，只需要理解。")]),a("br"),a("h3",{attrs:{id:"dui-wei-lai-de-yu-qi"}},[s._v("对未来的预期 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dui-wei-lai-de-yu-qi"}},[s._v("§")])]),a("p",[s._v("哲学家尼克·博斯特罗姆描述了四种预测未来的理论：")]),a("ol",[a("li",[s._v("兴衰交替。由于历史总是呈现繁荣与衰败的交替，因此未来也很可能逃不出这个循环。")]),a("li",[s._v("未来稳定发展。按照当今世界发展节奏，最后所有国家都进入发达国家行列，人民生活水平整体提高。")]),a("li",[s._v("毁灭性衰落。由于地缘政治原因，未来不可避免会发生毁灭性冲突，人类文明可能呈断崖式下跌。")]),a("li",[s._v("奇点。非常难以预测的加速发展，以至于发展到现在人类难以理解的高度。因为这个概念本身突出的就是 “发展到难以理解的高度”，因此试图去理解它的思考都反而会偏题，因此把它当作一种无法预测的未来吧。")])]),a("p",[s._v("笔者发现，现代大师人物写的书，最后都有对未来的预测，而且大家对未来的预测不同与书籍观点间的差异，往往都是很趋同的，这到底是英雄所见略同还是人类顶级大脑能到达的高度已经达到天花板？这是一个开放问题。")]),a("p",[s._v("最后，保持独立思考是我们能重构世界的最佳方式。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("那到底什么是创新？巴菲特说过，商业最重要的是护城河，护城河不是什么产品质量、高素质员工、巨大的市场份额。真正的护城河是："),a("strong",[s._v("企业无形资产比如品牌、高客户转换成本、成本优势、网络效应")]),s._v("。Paypal 创新的找到了符合网络效应的业务场景：“网络货币”。")]),a("p",[s._v("为什么 “网络货币” 拥有网络效应呢？所谓网络效应是指，每新增一个用户，就会对产品价值带来指数级提升。支付网络每增加一个人，不但你可以参与交易，还让交易网络变得更大，让更多交易成为可能，甚至成为全球通用货币，获得比国家货币更强的流通性，而这个质变只需要更多的用户加入即可，这就是它的网络效应。")]),a("p",[s._v("《从 0 到 1》是一本创新思维的启蒙书，但想要深入理解这本书提供的概念，基本的经济学、商业知识是必不可少的，至少要理解到创新指的是为企业构筑护城河，而网络效应是 Paypal 的一个重要护城河。")]),a("p",[s._v("类似拥有网络效应的还有 Uber 和 Airbnb，但他们创新思维不同，导致网络效应的大小也不同。Airbnb 的网络效应是全球的，因为场景天然是 “旅游时自有房屋出租”，每成交一对商家与客户，都可能是跨地区的，而且客户也有自己的房子，可能下次自己就会成为商家。而 Uber 业务场景天然是同城的叫车服务，因此无法形成全球的网络效应壁垒，这也是为什么 Uber 无法竞争过中国的滴滴，但 Airbnb 的全球市场地位无人能撼动。")]),a("p",[s._v("商业领域远远不止于此，研究商业就像研究历史，每个公司都能给我们带来巨大启发。而商业最迷人的地方就在它的非必然性，就算你反复研究历史，熟读《从 0 到 1》这本书，他也无法给你带来必胜的商业操作路径。但这本书真正能带来的是正确而成功的信念，只要确定你的方向是正确的 “创新”，至少你可以正视失败，坦然开启下一段创业旅程，而说不定哪一次就成功了呢。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"5ccb":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("This")])]),a("h2",{attrs:{id:"this-dai-lai-de-kun-huo"}},[s._v("This 带来的困惑 "),a("a",{staticClass:"header-anchor",attrs:{href:"#this-dai-lai-de-kun-huo"}},[s._v("§")])]),a("br"),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i2/O1CN014VGV7a1x3ILYqK9OD_!!6000000006387-2-tps-1024-732.png",width:"500",alt:"logo"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("javascript 的 this 是个头痛的话题，本期精读的文章更是引出了一个观点，避免使用 this。我们来看看是否有道理。")]),a("p",[s._v("本期精读的文章是："),a("a",{attrs:{href:"https://medium.com/@kentcdodds/classes-complexity-and-functional-programming-a8dd86903747"}},[s._v("classes-complexity-and-functional-programming")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[s._v("javascript 语言的 this 是个复杂的设计，相比纯对象与纯函数，this 带来了如下问题：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" person = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Person("),a("span",{staticClass:"hljs-string"},[s._v("'Jane Doe'")]),s._v(")\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" getGreeting = person.getGreeting\n"),a("span",{staticClass:"hljs-comment"},[s._v("// later...")]),s._v("\ngetGreeting() "),a("span",{staticClass:"hljs-comment"},[s._v("// Uncaught TypeError: Cannot read property 'greeting' of undefined at getGreeting")]),s._v("\n")])]),a("p",[s._v("初学者可能突然将 this 弄丢导致程序出错，甚至在 react 中也要使用 "),a("code",[s._v("bind")]),s._v(" 的方式，使回调可以访问到 "),a("code",[s._v("setState")]),s._v(" 等函数。")]),a("p",[s._v("this 也不利于测试，如果使用纯函数，可以通过入参出参做测试，而不需要预先初始化环境。")]),a("p",[a("strong",[s._v("所以我们可以避免使用 this")]),s._v("，看如下的例子：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("setName")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("person, strName")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Object")]),s._v(".assign({}, person, {"),a("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": strName})\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// bonus function!")]),s._v("\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("setGreeting")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("person, newGreeting")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Object")]),s._v(".assign({}, person, {"),a("span",{staticClass:"hljs-attr"},[s._v("greeting")]),s._v(": newGreeting})\n}\n\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("getName")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("person")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" getPrefixedName("),a("span",{staticClass:"hljs-string"},[s._v("'Name'")]),s._v(", person.name)\n}\n\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("getPrefixedName")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("prefix, name")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("`"),a("span",{staticClass:"hljs-subst"},[s._v("${prefix}")]),s._v(": "),a("span",{staticClass:"hljs-subst"},[s._v("${name}")]),s._v("`")]),s._v("\n}\n\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("getGreetingCallback")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("person")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" {greeting, name} = person\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("subject")]),s._v(") =>")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("`"),a("span",{staticClass:"hljs-subst"},[s._v("${greeting}")]),s._v(" "),a("span",{staticClass:"hljs-subst"},[s._v("${subject}")]),s._v(", I'm "),a("span",{staticClass:"hljs-subst"},[s._v("${name}")]),s._v("`")]),s._v("\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" person = {"),a("span",{staticClass:"hljs-attr"},[s._v("greeting")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'Hey there!'")]),s._v(", "),a("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'Jane Doe'")]),s._v("}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" person2 = setName(person, "),a("span",{staticClass:"hljs-string"},[s._v("'Sarah Doe'")]),s._v(")\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" person3 = setGreeting(person2, "),a("span",{staticClass:"hljs-string"},[s._v("'Hello'")]),s._v(")\ngetName(person3) "),a("span",{staticClass:"hljs-comment"},[s._v("// Name: Sarah Doe")]),s._v("\ngetGreetingCallback(person3)("),a("span",{staticClass:"hljs-string"},[s._v("'Jeff'")]),s._v(") "),a("span",{staticClass:"hljs-comment"},[s._v("// Hello Jeff, I'm Sarah Doe")]),s._v("\n")])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i3/O1CN017Kw37u1oOyYHXGlqC_!!6000000005216-2-tps-1338-338.png",width:"500",alt:"demo1"}}),a("p",[s._v("这样 person 实例是个纯对象，没有将方法挂载到原型链上，简单易懂。")]),a("p",[s._v("或者可以将属性放在上级作用域，避免使用 this，就避免了 this 丢失带来的隐患：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("getPerson")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("initialName")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" name = initialName\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" person = {\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("setName")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("strName")]),s._v(")")]),s._v(" {\n      name = strName\n    },\n    "),a("span",{staticClass:"hljs-attr"},[s._v("greeting")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'Hey there!'")]),s._v(",\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getName")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" getPrefixedName("),a("span",{staticClass:"hljs-string"},[s._v("'Name'")]),s._v(")\n    },\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getGreetingCallback")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" {greeting} = person\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("subject")]),s._v(") =>")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("`"),a("span",{staticClass:"hljs-subst"},[s._v("${greeting}")]),s._v(" "),a("span",{staticClass:"hljs-subst"},[s._v("${subject}")]),s._v(", I'm "),a("span",{staticClass:"hljs-subst"},[s._v("${name}")]),s._v("`")]),s._v("\n    },\n  }\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("getPrefixedName")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("prefix")]),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("`"),a("span",{staticClass:"hljs-subst"},[s._v("${prefix}")]),s._v(": "),a("span",{staticClass:"hljs-subst"},[s._v("${name}")]),s._v("`")]),s._v("\n  }\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" person\n}\n")])]),a("p",[s._v("以上代码没有用到 this，也不会因为 this 产生的问题所困扰。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本文作者认为，class 带来的困惑主要在于 this，这主要因为成员函数会挂到 prototype 下，虽然多个实例共享了引用，但因此带来的隐患就是 this 的不确定性。js 有许多种 this 丢失情况，比如 "),a("code",[s._v("隐式绑定")]),s._v(" "),a("code",[s._v("别名丢失隐式绑定")]),s._v(" "),a("code",[s._v("回调丢失隐式绑定")]),s._v(" "),a("code",[s._v("显式绑定")]),s._v(" "),a("code",[s._v("new绑定")]),s._v(" "),a("code",[s._v("箭头函数改变this作用范围")]),s._v(" 等等。")]),a("p",[s._v("由于在 prototype 中的对象依赖 this，如果 this 丢了，就访问不到原型链，不但会引发报错，在写代码时还需要注意 this 的作用范围是很头疼的事。因此作者有如下解决方案：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("getPerson")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("initialName")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" name = initialName\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" person = {\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("setName")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("strName")]),s._v(")")]),s._v(" {\n      name = strName\n    }\n  }\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" person\n}\n")])]),a("br"),a("p",[s._v("由此生成的 person 对象不但是个简单 object，由于没有调用 this，也不存在 this 丢失的情况。")]),a("p",[s._v("这个观点我是不认可的。当然做法没有问题，代码逻辑也正确，也解决了 this 存在的原型链访问丢失问题，但这并不妨碍使用 this。我们看以下代码：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Person")]),s._v(" ")]),s._v("{\n  setName = "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("name")]),s._v(") =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".name = name\n  }\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" person = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Person()\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" setName = person.setName\nsetName("),a("span",{staticClass:"hljs-string"},[s._v('"Jane Doe"')]),s._v(")\n"),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(person)\n")])]),a("br"),a("p",[s._v("这里用到了 this，也产生了别名丢失隐式绑定，但 this 还能正确访问的原因在于，没有将 setName 的方法放在原型链上，而是放在了每个实例中，因此无论怎么丢失 this，也仅仅丢失了原型链上的方法，但 this 无论如何会首先查找其所在对象的方法，只要方法不放在原型链上，就不用担心丢失的问题。")]),a("p",[s._v("至于放在原型链上会节约多个实例内存开销问题，函数式也无法避免，如果希望摆脱 this 带来的困扰，class 的方式也可以解决问题。")]),a("br"),a("p",[a("strong",[s._v("this 丢失的情况")])]),a("ul",[a("li",[a("strong",[s._v("默认绑定")])])]),a("p",[s._v("在严格模式与非严格模式下，默认绑定有所区别，非严格模式 this 会绑定到上级作用域，而 "),a("code",[s._v("use strict")]),s._v(" 时，不会绑定到 window。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("foo")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".count) "),a("span",{staticClass:"hljs-comment"},[s._v("// 1")]),s._v("\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(foo.count) "),a("span",{staticClass:"hljs-comment"},[s._v("// 2")]),s._v("\n}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" count = "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("\nfoo.count = "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("\nfoo()\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("foo")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{\n"),a("span",{staticClass:"hljs-meta"},[s._v('  "use strict"')]),s._v("\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".count) "),a("span",{staticClass:"hljs-comment"},[s._v("// TypeError: count undefined")]),s._v("\n}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" count = "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("\nfoo()\n")])]),a("ul",[a("li",[a("strong",[s._v("隐式绑定")])])]),a("p",[s._v("当函数被对象引用起来调用时，this 会绑定到其依附的对象上。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("foo")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".count) "),a("span",{staticClass:"hljs-comment"},[s._v("// 2")]),s._v("\n}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" obj = {\n  "),a("span",{staticClass:"hljs-attr"},[s._v("count")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(",\n  "),a("span",{staticClass:"hljs-attr"},[s._v("foo")]),s._v(": foo\n}\nobj.foo()\n")])]),a("ul",[a("li",[a("strong",[s._v("别名丢失隐式绑定")])])]),a("p",[s._v("调用函数引用时，this 会根据调用者环境而定。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("foo")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".count) "),a("span",{staticClass:"hljs-comment"},[s._v("// 1")]),s._v("\n}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" count = "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" obj = {\n  "),a("span",{staticClass:"hljs-attr"},[s._v("count")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(",\n  "),a("span",{staticClass:"hljs-attr"},[s._v("foo")]),s._v(": foo\n}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" bar = obj.foo "),a("span",{staticClass:"hljs-comment"},[s._v("// 函数别名")]),s._v("\nbar()\n")])]),a("ul",[a("li",[a("strong",[s._v("回调丢失隐式绑定")])])]),a("p",[s._v("这种情况类似 react 默认的情况，将函数传递给子组件，其调用时，this 会丢失。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("foo")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".count) "),a("span",{staticClass:"hljs-comment"},[s._v("// 1")]),s._v("\n}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" count = "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" obj = {\n  "),a("span",{staticClass:"hljs-attr"},[s._v("count")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(",\n  "),a("span",{staticClass:"hljs-attr"},[s._v("foo")]),s._v(": foo\n}\n"),a("span",{staticClass:"hljs-built_in"},[s._v("setTimeout")]),s._v("(obj.foo)\n")])]),a("br"),a("p",[a("strong",[s._v("this 绑定修复")])]),a("ul",[a("li",[a("strong",[s._v("bind 显式绑定")])])]),a("p",[s._v("使用 bind 属于显示绑定。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("foo")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".count) "),a("span",{staticClass:"hljs-comment"},[s._v("// 1")]),s._v("\n}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" obj = {\n  "),a("span",{staticClass:"hljs-attr"},[s._v("count")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("\n}\nfoo.call(obj)\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" bar = foo.bind(obj)\nbar()\n")])]),a("ul",[a("li",[a("strong",[s._v("es6 绑定")])])]),a("p",[s._v("这种情况类似使用箭头函数创建成员变量，以下方式等于创建了没有挂载到原型链的匿名函数，因此 this 不会丢失。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("foo")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("setTimeout")]),s._v("("),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".count) "),a("span",{staticClass:"hljs-comment"},[s._v("// 2")]),s._v("\n  })\n}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" obj = {\n  "),a("span",{staticClass:"hljs-attr"},[s._v("count")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("\n}\nfoo.call(obj)\n")])]),a("ul",[a("li",[a("strong",[s._v("函数 bind")])])]),a("p",[s._v("除此之外，我们还可以指定回调函数的作用域，达到 this 指向正确原型链的效果。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("foo")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("setTimeout")]),s._v("("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".count) "),a("span",{staticClass:"hljs-comment"},[s._v("// 2")]),s._v("\n  }.bind("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v("))\n}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" obj = {\n  "),a("span",{staticClass:"hljs-attr"},[s._v("count")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("\n}\nfoo.call(obj)\n")])]),a("br"),s._v(" 关于块级作用域也是 this 相关的知识点，由于现在大量使用 `let` `const` 语法，甚至在 `if` 块下也存在块级作用域： "),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(") {\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" a = "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" b = "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" c = "),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("\n}\n"),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(a) "),a("span",{staticClass:"hljs-comment"},[s._v("// 1")]),s._v("\n"),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(b) "),a("span",{staticClass:"hljs-comment"},[s._v("// ReferenceError")]),s._v("\n"),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(c) "),a("span",{staticClass:"hljs-comment"},[s._v("// ReferenceError")]),s._v("\n")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("要正视 this 带来的问题，不能因为绑定丢失，引发非预期的报错而避免使用，其根本原因在于 javascript 的原型链机制。这种机制是非常好的，将对象保存在原型链上，可以方便多个实例之间共享，但因此不可避免带来了原型链查找过程，如果对象运行环境发生了变化，其原型链也会发生变化，此时无法享受到共享内存的好处，我们有两种选择：一种是使用 bind 将原型链找到，一种是比较偷懒的将函数放在对象上，而不是原型链上。")]),a("br"),a("p",[s._v("自动 bind 的方式 react 之前在框架层面做过，后来由于过于黑盒而取消了。如果为开发者隐藏 this 细节，框架层面自动绑定，看似方便了开发者，但过分提高开发者对 this 的期望，一旦去掉黑魔法，就会有许多开发者不适应 this 带来的困惑，所以不如一开始就将 this 问题透传给开发者，使用自动绑定的装饰器，或者回调处手动 "),a("code",[s._v("bind(this)")]),s._v("，或将函数直接放在对象中都可以解决问题。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"5d30":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("Proxy")])]),a("h2",{attrs:{id:"dai-li-mo-shi"}},[s._v("代理模式 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-li-mo-shi"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("Proxy（代理模式）属于结构型模式，通过访问代理对象代替访问原始对象，以获得一些设计上的便捷。")])]),a("p",[a("strong",[s._v("意图：为其他对象提供一种代理以控制这个对象的访问。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h3",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),a("br"),a("p",[a("strong",[s._v("获得文本对象长度")])]),a("p",[s._v("获得一个文本对象长度，必须要真正渲染出来，而渲染是比较耗时的，我们可能只在某些场景下需要访问文本对象长度，而更多时候只需要读取文本内容，这两种操作耗时是完全不同的，如何做到业务层调用无感知，来优化执行耗时呢？")]),a("br"),a("p",[s._v("代理模式可以解决这个问题，我们将业务层使用的文本对象替换为代理对象，这个代理对象初始化并不渲染文本，而是在调用文本长度时才渲染。")]),a("br"),a("p",[a("strong",[s._v("对象访问保护")])]),a("p",[s._v("某个大型系统开发完了，突然要求增加代码访问权限体系，不同模块对相同的底层对象拥有不同访问权限，此时这个权限控制逻辑如果写入底层对象，就违背了开闭原则，而对象本身的实现也不再纯粹，增加了维护成本，如何做到不修改对象本身，实现权限控制呢？")]),a("br"),a("p",[s._v("代理模式也能解决，将底层对象导出替换为代理对象，由代理对象控制访问权限即可。")]),a("br"),a("p",[a("strong",[s._v("对象与视图双向绑定")])]),a("p",[s._v("Angular 或 Vue 这类前端框架采用双向绑定视图更新技术，即对象修改后，使用到的视图会自动刷新，这就需要做到以下两点：")]),a("ul",[a("li",[s._v("在对象被访问时，记录调用的视图绑定。")]),a("li",[s._v("在对象被修改时，刷新调用它的视图。")])]),a("p",[s._v("问题是，在业务代码使用对象与修改对象的地方插入这段逻辑，显然会增加巨大的维护成本，如何做到业务层无感知呢？")]),a("br"),a("p",[s._v("代理模式可以很好的解决这个问题，其实业务层拿到的对象已经是代理对象了，它在被访问与被修改时，都会执行固定的钩子做视图绑定与视图刷新。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h3",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("意图：为其他对象提供一种代理以控制这个对象的访问。")])]),a("br"),a("p",[s._v("代理模式的意图很容易理解，就是通过代理对象代替原始对象的访问。")]),a("br"),a("p",[s._v("这只是代理模式的实现方式，代理模式真正的难点不在于理解它是如何工作的，而是理解哪些场景适合用代理，或者说创建了代理对象，怎么用才能发挥它的价值。")]),a("br"),a("p",[s._v("在上面例子中，已经举出了几种常见代理使用场景：")]),a("ul",[a("li",[s._v("对开销大的对象使用代理，以按需使用。")]),a("li",[s._v("对需要保护的对象进行代理，在代理层做权限控制。")]),a("li",[s._v("在对象访问与修改时要执行一些其他逻辑，适合在代理层做。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h3",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("img",{attrs:{width:"600",src:"https://img.alicdn.com/imgextra/i3/O1CN01eZHGHQ28t0oeHYzas_!!6000000007989-2-tps-1262-522.png"}}),a("p",[s._v("使用时关系如下：")]),a("img",{attrs:{width:"600",src:"https://img.alicdn.com/imgextra/i4/O1CN01iwyMKQ1KbOnR0N2AP_!!6000000001182-2-tps-1270-206.png"}}),a("p",[s._v("Subject 定义的是 RealSubject 与 Proxy 共用的接口，这样任何使用 RealSubject 的地方都可以使用 Proxy。")]),a("br"),a("p",[s._v("RealSubject 指的是原始对象，Proxy 是一个代理实体。")]),a("br"),a("p",[s._v("关系图中可以看出，当客户端要访问 subject 时，第一层访问的是 Proxy 代理，由这个代理将 realSubject 转发给客户端。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h3",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("下面例子使用 typescript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-comment"},[s._v("// 对象 obj")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" proxy = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Proxy")]),s._v("(obj, {\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("get")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("target,key")]),s._v(")")]),s._v(" {}\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("set")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("target,key,value")]),s._v(")")]),s._v(" {}\n})\n")])]),a("br"),a("p",[s._v("JS 创建代理还是蛮简单的，代理可以控制对象的所有成员属性，包括成员变量与成员方法的访问（get）与修改（set）。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h3",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("代理模式会增加微弱的开销，因此请不要将所有对象都变成代理，没有意义的代理只会徒增程序开销。")]),a("br"),a("p",[s._v("另外代理对象过多，也会导致调试困难，因为代理层的存在，我们往往可能忽略这一层带来的影响，导致忘记这个对象其实是一个代理。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("代理和继承有足够多的相似之处，继承中，子类几乎可以人为是对父类的代理，子类可以重写父类的方法。但代理和继承还是有区别的：")]),a("br"),a("p",[s._v("如果你没有采用 "),a("code",[s._v("new Proxy")]),s._v(" 这种 API 创建代理，而是采用继承的方式实现，你会一下子继承这个类的所有方法，而做不到按需控制访问权限的灵活效果，所以代理比继承更加灵活。")]),a("br"),a("p",[s._v("JS 的 "),a("code",[s._v("new Proxy")]),s._v(" 对应了 Java 动态代理模式，一般认为动态代理比静态代理更强大。")]),a("br"),a("p",[s._v("最后，还要重申那句话，代理模式理解与运用并不难，难就难在能否在恰当的场合想到它，双向绑定几乎是代理模式最好的例子。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},6272:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("谁在世界中心")])]),a("h2",{attrs:{id:"shui-zai-shi-jie-zhong-xin"}},[s._v("谁在世界中心 "),a("a",{staticClass:"header-anchor",attrs:{href:"#shui-zai-shi-jie-zhong-xin"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[a("a",{attrs:{href:"https://book.douban.com/subject/27045287/"}},[s._v("谁在世界中心")]),s._v(" 是一本介绍地缘政治的书，这本书以海洋为连接世界的主要桥梁，介绍了当今全球视野下海洋争霸的政治格局。")]),a("p",[s._v("谁征服了海洋，谁就征服了世界。陆地霸权注定无法拥有全球视野，只有海洋霸权才能征服世界，如今中国已成为海洋贸易霸主，但海洋的武力霸主仍然是美国，如果中国想成为新的全球霸主，就要突破旧的海洋霸权封锁，成为新的海洋霸主。")]),a("p",[s._v("当然想成为海洋霸主是非常困难的，这涉及到多方政治力量的博弈，但我们可以通过《谁在世界中心》这本书了解地缘政治关系，让我们看清当下，布局未来。")]),a("p",[s._v("《谁在世界中心》共五章，分别介绍了当下谁在主宰世界、东亚与西太平洋、东南亚与南海、南亚与印度洋、俄罗斯与北冰洋。")]),a("p",[s._v("之所以标题都是地区与海的关系，是因为陆地与海洋的博弈就是海洋霸权的逻辑。本书需要结合地图理解，因此笔者会贴一些书中地图，围绕着地图讲解本书。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("h2",{attrs:{id:"shui-zai-zhu-zai-shi-jie"}},[s._v("谁在主宰世界 "),a("a",{staticClass:"header-anchor",attrs:{href:"#shui-zai-zhu-zai-shi-jie"}},[s._v("§")])]),a("p",[s._v("现在 "),a("strong",[s._v("美、俄、欧、中")]),s._v(" 是这个舞台的主角，但谁也不能仅凭一个地区征服世界，因此与一些重要地区结盟，并成为地区的领导者才可能成为世界的霸主。"),a("strong",[s._v("边缘地带理论")]),s._v(" 就是指，控制了大陆板块的边缘地区，就可以对大陆进行封锁，进而控制大陆。在将眼光放到边缘地区之前，先看看现在世界舞台上的主要政治力量：")]),a("ol",[a("li",[s._v("俄罗斯 - 大陆的征服者。俄罗斯一直有扩张的野心，但是在苏联解体后，值保有大部分欧亚大陆中心地带，目前已经失去领衔主演的资格。")]),a("li",[s._v("欧盟 - 世界的发现者。作为大航海时代的开启者，欧洲史就是浓缩的世界史，并且随着疯狂的资本掠夺积累了大量原始资本。但由于英国在欧洲板块处于海洋势力，无法完全控制大陆，因此极力避免欧洲土地上出现一家独大的情况，这导致了美国的崛起。当然现在欧盟的成立也标志着欧洲进入了漫长的整合时期，德国由于其较差的地缘位置（二战后海外利益尽失），更愿意以裹挟欧盟的方式让自己成为主角。")]),a("li",[s._v("印度 - 低纬度地区的代言人。由于低纬度炎热的气候，印度人并不热衷于国际事务，但和美国一样，印度也发展了自己的地缘优势以及人口优势，希望代表低纬度地区参与大国游戏。但是要承受另一个边缘地区国家 - 中国的压力。")]),a("li",[s._v("中国 - 世界中心最有力的挑战者。中国拥有极大的战略纵深，集体主义文化，拥有挑战世界霸主的潜力，但在这个道路上还需解决许多问题，尤其是如何突破由美国主导的 “新世界岛俱乐部” 的封锁。")]),a("li",[s._v("美国 - "),a("strong",[s._v("“新世界岛俱乐部”")]),s._v(" 的缔造者。北美是新世界岛的中心地区，英国和日本是新世界岛的外围地区，分别用来控制 “欧亚大陆西边缘地区（西欧）” 与 “欧亚大陆东边缘地区（中国）”。")])]),a("p",[s._v("为什么拥有海洋就拥有了世界？“海权论” 有三个主要观点：")]),a("ol",[a("li",[a("strong",[s._v("谁掌握了世界核心的咽喉航道、运河和航线，谁就掌握了世界经济和能源运输之门。")])]),a("li",[a("strong",[s._v("谁掌握了世界经济和能源运输之门，谁就掌握了世界各国的经济和安全命脉。")])]),a("li",[a("strong",[s._v("谁掌握了世界各国的经济和安全命脉，谁就控制了全世界。")])])]),a("p",[s._v("但独霸海洋非常困难，因此美国奉行的是 “边缘地带理论”。也就是"),a("strong",[s._v("通过控制欧亚大陆东西两端的边缘地带，进而控制了欧亚大陆核心地区，封锁住欧亚大陆的强国，以此保证美国世界霸主的地位。")])]),a("img",{attrs:{width:"400",src:"https://img.alicdn.com/tfs/TB1R76hca61gK0jSZFlXXXDKFXa-1816-2648.jpg"}}),a("img",{attrs:{width:"400",src:"https://img.alicdn.com/tfs/TB1gaHecXP7gK0jSZFjXXc5aXXa-1816-2648.jpg"}}),a("p",[s._v("从上图可以看出，以北美为 “新世界岛” 的中心地区，通过控制日本与英国，牵制住西欧与中国。美国实际上也做到了这一点。而随着印度的崛起，美国也找到了澳大利亚作为遏制印度的桥头堡。")]),a("p",[s._v("那么中国怎么崛起呢？很显然，中国需要组建属于自己的 “世界岛俱乐部”，取代由美国主导的 “旧世界岛俱乐部”：")]),a("ol",[a("li",[a("strong",[s._v("与欧亚大陆中心地带的大部分国家（主要是俄罗斯）结盟。")])]),a("li",[a("strong",[s._v("将 “欧亚大陆南边缘地区”（印度）拉入同盟。")])]),a("li",[a("strong",[s._v("寻找可能的 “世界岛外围地区”，并使之倒向同盟（日本、韩国、朝鲜等）。")])])]),a("p",[s._v("但就目前状况来看，中印关系竞争与合作同时上升，俄国由于前苏联的老大地位暂时不愿意放下身段，日本更处于美国为中心的俱乐部中，因此这条路困难重重。之所以将日本拉进来，一方面是因为与印、俄结盟不足以取得与 “旧世界岛俱乐部” 竞争的优势，一方面是中日地缘距离近，且日本国民性格敬仰强大的对手，另一方面日本是美国牵制中国的力量，拉拢过来不仅可以打消美国的算盘，还能增强东亚整体实力。")]),a("p",[s._v("第一章总览了世界地缘政治关系的全貌，并为中国崛起指出了道路。后面几章则具体介绍各个存在联动的政治板块间的具体博弈情况，做到知己知彼。")]),a("br"),a("h2",{attrs:{id:"dong-ya-yu-xi-tai-ping-yang"}},[s._v("东亚与西太平洋 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dong-ya-yu-xi-tai-ping-yang"}},[s._v("§")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1DbnfcoY1gK0jSZFMXXaWcVXa-1746-1480.png"}}),a("p",[s._v("参与东亚与西太平洋博弈的主要国家有："),a("strong",[s._v("中国、朝鲜、韩国、日本、俄罗斯")]),s._v("。中国是参与板块博弈的核心，比如俄罗斯会在朝鲜半岛问题方面发表意见，但不会干涉钓鱼岛问题，而中国都参与其中。")]),a("p",[s._v("东亚平原如此广袤，以至于东亚地区的民族都认为控制了这片核心区就控制了世界中心。但随着西方殖民者从海路上到来，"),a("strong",[s._v("中国人才明白自己并不是世界的中心")]),s._v("，但长期 “中央之国的心态” 影响着我们每一个人。")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1fqvHceL2gK0jSZPhXXahvXXa-1594-1368.png"}}),a("p",[a("strong",[s._v("中国农耕区域总是受到来自北方三个势力的威胁：")]),s._v("“东北森林渔猎民族”、“蒙古高原草原游牧民族”、“青藏高原高原游牧民族”，这是由于农耕的生产方式稳定，创造的财富大，因此源源不断吸引这些外来者的入侵，有趣的是，每一次农耕区域都能同化外来的入侵者，而 “中国” 的传统观念也是同化他们的重要因素。所以到后面会讲到为何印度人进取心不如中国强，原因就在中国需要长期与北方威胁斗争，而印度不需要，印度由于地缘位置，导致不会受到太多来自边远民族的入侵，这个在分析印度时会讲到。")]),a("p",[a("strong",[s._v("日本、朝鲜半岛由于地理阻隔，在东亚大陆统一时得保持独立")]),s._v("。而朝鲜半岛与大陆相连却一直没有被征服的原因是，从地图上看，想要入侵朝鲜半岛必须沿着海岸线，但通过辽西走廊进入辽河平原时，辽河平原地理气候的不稳定性容易切断朝鲜半岛与东亚核心区脆弱的地缘联系，导致渗入半岛的人口要么退回，要么融于当地族群。")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1JdHKcoz1gK0jSZLeXXb9kVXa-1582-1496.png"}}),a("p",[s._v("东亚面临西太平洋区域被外包包夹形成四个 “内海”，可以形容为 "),a("strong",[s._v("“第一岛链” 与 “第二岛链”")]),s._v("，美国正是通过控制这些岛链来控制 “欧亚大陆东边缘地区” 的。")]),a("p",[a("strong",[s._v("第一岛链包括：日本群岛、琉球群岛、冲绳岛、台湾岛、南至菲律宾群岛、大巽他群岛")]),s._v("。其中日本是势力最大的岛链，在日本 “大东亚共荣圈” 计划中，极盛时期控制的范围如下图所示：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1GBzJceT2gK0jSZFvXXXnFXXa-1610-1452.png"}}),a("p",[s._v("而中国想要成为世界霸主，"),a("strong",[s._v("就要构建以中国为主导核心的 “东亚核心圈 + 东盟十国”")]),s._v("，见下图。")]),a("p",[s._v("对日本来说，如今已没有实力做这个核心圈的老大，但最起码希望和中国共同主导，但核心圈只有一家独大才能发挥称霸世界的力量，中国与日本还有很多问题需要解决。相比欧盟，虽然也在融合（3 + 10 模式，即三个核心 - 法、德、英 + 10 个其他国家 不包含俄罗斯），但由于地缘特点不可能出现一家独大的情况。")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1USbGcaL7gK0jSZFBXXXZZpXa-1864-1606.png"}}),a("p",[a("strong",[s._v("第二岛链包括：从日本岛作为起点，南经小笠原诸国、火山列岛、马里亚纳群岛、关岛、雅浦岛、帕劳群岛，直至哈马黑拉岛等岛群。")]),s._v(" 不过第二岛链的威胁远没有第一岛链大。")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1uRPKchD1gK0jSZFsXXbldVXa-1604-1134.png"}}),a("p",[s._v("从西太平洋向东看看美国。"),a("strong",[s._v("对美国来说，太平洋所有岛屿都是他进攻的跳板")]),s._v("。如上图所示，美国通过诸多岛屿作为跳板进攻，在二战中，甚至跳过了对某些战略要地的争夺，通过前沿岛屿作为基地，直接攻击日本本岛。")]),a("br"),a("h2",{attrs:{id:"dong-nan-ya-yu-nan-hai"}},[s._v("东南亚与南海 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dong-nan-ya-yu-nan-hai"}},[s._v("§")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1H7HOckH0gK0jSZPiXXavapXa-1870-1514.png"}}),a("p",[a("strong",[s._v("东南亚区域分位：中南半岛（缅甸、越南与印度支那、泰国）、南洋群岛、文莱、巴厘岛以及东帝汶、马六甲海峡等重要区域。")])]),a("p",[s._v("首先看中南半岛：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1exPKcaL7gK0jSZFBXXXZZpXa-1742-2534.png"}}),a("p",[a("strong",[s._v("中南半岛由 5 个国家组成，从西到东分别是：缅甸、泰国、柬埔寨、老挝、越南")]),s._v("，其中缅、老、 越与中国接壤，除了老挝外都有足够的海岸线。这些国家大部分是殖民时代的遗产，英法分别在缅甸、越南发力，将泰国定位缓冲国。法国人曾将柬埔寨、老挝、越南合并成 “印支联邦” 与英国对抗，虽然现在又分裂成三个国家，因此却为越南埋下了大国梦。")]),a("p",[s._v("缅甸在位置上，可以在陆地及海洋延伸中国的地缘影响力，而且也曾成为支持中国抗战的重要援助物资运输线。在缅甸东边是 “金三角地区”：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1iwnRchD1gK0jSZFKXXcJrVXa-1396-1266.png"}}),a("p",[a("strong",[s._v("金三角地区")]),s._v(" 盛产鸦片，首先是金三角环境适合种植鸦片，其次由于所处缅甸、老挝、泰国交界处特别适合逃避法律打击。解决问题的办法就是联合执法，在 “湄公河惨案” 后，由中国主导的联合执法开发形成常态，"),a("strong",[s._v("金三角成为中国拓展自己地缘影响力的重要抓手")]),s._v("。")]),a("p",[s._v("中国与中南半岛虽然地缘上存在天然阻隔，但在云贵高原与克钦邦之间存在的南方丝绸之路、中印缅之间存在因抗日战争运输物资而修建了史迪威公路。这些重要的交通枢纽对维系中、缅两国的共同利益有着推动作用。")]),a("p",[a("strong",[s._v("越南")]),s._v(" 一直想成为中南半岛的强国，但先后被清朝打压、后与法美中几大国相继开战，始终没有得到什么实际利益。越南狭长的地形使其一直存在南北分裂的风险。")]),a("p",[a("strong",[s._v("泰国")]),s._v(" 之所以能在西方殖民者将土地瓜分完毕时仍保持独立，是凭借其高超的平衡技巧，成为了英法殖民地之间的缓冲国。")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB17bYZcXY7gK0jSZKzXXaikpXa-1420-980.png"}}),a("p",[s._v("克拉地峡是继马六甲海峡后另一个有价值的航线，是否能开挖取决于各方利益平衡，尤其是这样会切断泰国南北，导致加大泰国南部的分裂倾向。")]),a("img",{attrs:{width:"700",src:"https://img.alicdn.com/tfs/TB12hvTckP2gK0jSZPxXXacQpXa-2534-1734.png"}}),a("p",[a("strong",[s._v("南洋群岛由 6 个国家组成，分别是：印尼、马拉西亚、菲律宾、文莱、新加坡、东帝汶。")])]),a("p",[s._v("“下南洋” 期间，在西方殖民者的推动下，大量华人下南洋开发，因此南洋群岛留着部分华夏民族血液。在新加坡，甚至因为华人占据了 75% 的人口，马来西亚为了在脱离英国殖民统治后保证马来人获得多数票，因此将新加坡排除在马来西亚联邦之外，才使得新加坡独立建国。")]),a("p",[s._v("接着看文莱、巴厘岛和东帝汶：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1ZB24cfb2gK0jSZK9XXaEgFXa-1434-1274.png"}}),a("p",[a("strong",[s._v("文莱")]),s._v(" 在马来西亚中是个弹丸小国，但因为在西方殖民者接入之前，文莱的前身 “渤泥国” 的势力范围很大，因此在被殖民者打碎野心的情况下，文莱有着强烈独立的愿望，从争取 “保护国” 的地位到最终独立，文莱一路走来很不容易。但是文莱被 “林梦地区” 一分为二，马来西亚也不会容忍文莱有更多的领土要求，两者僵持不下。但我们相信，身处这种状况的文莱更希望获得外部力量的支持，作为与南海隔海相望的中国将会是其理想的盟友。")]),a("p",[a("strong",[s._v("巴厘岛")]),s._v(" 不仅是度假胜地，在 14 世纪末至 15 世纪初，在伊斯兰教强大压力下，坚守印度教的少数马来人从爪哇岛移民至巴厘岛，因为宗教信仰的不同，这里引起恐怖分子的关注。")]),a("p",[a("strong",[s._v("东帝汶")]),s._v(" 是欧洲殖民者划分殖民地的产物，南部的澳大利亚觊觎其丰富油矿资源而积极干涉东帝汶的事物。反过来想，如果中国控制了东帝汶区域，就可以对澳大利亚施加政治影响力。")]),a("img",{attrs:{width:"600",src:"https://img.alicdn.com/tfs/TB1TVY6cXT7gK0jSZFpXXaTkpXa-1736-2532.png"}}),a("p",[s._v("相比南洋群岛，"),a("strong",[s._v("南海")]),s._v(" 离中国更近。如果要控制南海，就要分别控制位于南海五个方向的："),a("strong",[s._v("东沙群岛、西沙群岛、黄岩岛、中沙大环礁、南沙群岛")]),s._v("。")]),a("p",[s._v("中国想要经略南海，首先要提升自己的综合实力。最近能够在南海问题上有所突破，本质上还是中国综合实力得到了提高。但经略南海不代表占领南海，而是要与南海周边的国家进行博弈，合纵连横。搁置争议，共同开发是最好的策略，如果中国能够掌握深海石油勘采技术，至少能在投资、技术层面让多方面获益。")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1gpr9coz1gK0jSZLeXXb9kVXa-1640-1146.png"}}),a("p",[s._v("从中国海上突围角度来看，有三条航线可选："),a("strong",[s._v("南海-马六甲海峡-印度洋航线、印尼通道-印度洋航线、西太平洋-南太平洋-印度洋航线")])]),a("p",[a("strong",[s._v("马六甲海峡")]),s._v(" 是南海的咽喉，被新加坡控制，且战时容易被封锁。备选方案印尼通道是个不错的选择，而且相比马六甲海峡三国（新加坡、马来西亚、印度尼西亚），"),a("strong",[s._v("印尼通道")]),s._v(" 只要和印尼搞好关系即可。然而印尼也可能被日本拉拢，但由于印尼与中国没有直接利益冲突，站队日本对印尼来说得不到什么好处。")]),a("br"),a("h2",{attrs:{id:"nan-ya-yu-yin-du-yang"}},[s._v("南亚与印度洋 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nan-ya-yu-yin-du-yang"}},[s._v("§")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1dC2_coH1gK0jSZSyXXXtlpXa-1734-2532.png"}}),a("p",[a("strong",[s._v("南亚包括 7 个国家")]),s._v("，分别是南亚次大陆的："),a("strong",[s._v("尼泊尔、不丹、巴基斯坦、印度、孟加拉国")]),s._v(" 和印度洋上的岛国："),a("strong",[s._v("斯里兰卡、马尔代夫。")])]),a("p",[s._v("由于 “印巴分治”，巴基斯坦于 1947 年独立，但由于东西距离太远，中间隔着印度，因此东边独立成了孟加拉国。不丹处于印度保护国状态，而斯里兰卡除了地理阻隔外，有意识的选择了不同的宗教，也是一直保持独立的重要原因。")]),a("p",[s._v("再往南的马尔代夫给人留下的印象就是度假胜地，但这个海拔只有 1.2 米的岛国，随着气候变暖可能是最先消失的国家。")]),a("p",[a("strong",[s._v("印度")]),s._v(" 之所以走上与中国不同的道路，主要因为外部压力相对较小。之前也介绍了中国长期受到北方民族的入侵，是因为中国北方有足够大的阶梯地形让北方民族适应 “低原反应”，而印度北方的山脉没有足够的缓冲区，为印度形成了天然的防护屏障。")]),a("p",[s._v("虽然热带气候可以让文明较早发展，但没有边缘民族入侵压力，会让文明变得非常脆弱，也缺乏扩张的动力。从融合的角度来说，印度虽然也融合了其他民族，但相比 "),a("strong",[s._v("中国的 “家天下”，印度属于 “种姓” 文明框架。")]),s._v(" “家天下” 的模式每个人都有平等的机会，而 “种姓” 制度确保了阶级固化，加上热带地区物产丰富，不至于出现被饿死的情况，因此这种制度得以稳定下来。")]),a("p",[a("strong",[s._v("克什米尔")]),s._v(" 是印度河的上游，在工业化时代，掌握了上游就可以控制下游的水资源，现在印巴两国共享上印度河平原，任何一方都不会轻易放弃这块战略要地。")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1R93bcoT1gK0jSZFhXXaAtVXa-1414-1102.png"}}),a("p",[s._v("中国想要扩大自己在印度洋的影响力，就需要找到 "),a("strong",[s._v("缅甸、巴基斯坦、斯里兰卡、东帝汶、肯尼亚")]),s._v(" 这五个点做支持。如今中国一带一路计划，为东亚各国修筑高铁等基础设施，就是拓展中国外交空间的良好手段，加深经济的合作才有可能迎来政治合作。")]),a("br"),a("h2",{attrs:{id:"e-luo-si-yu-bei-bing-yang"}},[s._v("俄罗斯与北冰洋 "),a("a",{staticClass:"header-anchor",attrs:{href:"#e-luo-si-yu-bei-bing-yang"}},[s._v("§")])]),a("p",[a("strong",[s._v("俄国")]),s._v(" 虽然北临北冰洋，但是没有不冻港是无法通航的。俄国人通过不平等条约使中国东部边界从 "),a("strong",[s._v("库页岛")]),s._v(" 移到了 "),a("strong",[s._v("乌苏里江")]),s._v("，因此俄国成为了第二个同时可以对三个洋（太平洋、大西洋、北冰洋）施加地缘影响力的国家。")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1tf7ccmf2gK0jSZFPXXXsopXa-1410-1108.png"}}),a("p",[s._v("不过好在中俄存在 “背靠背” 的战略伙伴关系，因此有合作的空间（俄国要应对西欧，中国要应对东南亚）。但俄罗斯的海岸线很短，这导致俄国在海权争霸的舞台只能当配角，但这个地缘结构不是一成不变的，如果全球变暖导致北冰洋融化，看到的将是另一个格局：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1x6RGbKbviK0jSZFNXXaApXXa-1440-1230.png"}}),a("p",[s._v("如果北冰洋融化后可以通航，俄罗斯将成为北冰洋地缘势力最强大的国家，其次是加拿大与阿拉斯加。如果俄国没有短视将阿拉斯加卖给美国，俄国将为成为北冰洋唯一的霸主。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("《谁在世界中心》这本书一定要看着地图读，这样会发现板块运动随机产生的变化竟然会对世界政治格局产生这么重大的影响，一个国家能否独立最重要的还是看地缘位置。")]),a("p",[s._v("这本书更是一本中国崛起的地缘解决方案指南，其中一些解决方案在商业逻辑中可以拿来借鉴：")]),a("ol",[a("li",[s._v("竞争是一个过程，唯有不断参与其中，才有可能掌握话语权，主导权，最终达到政治目的。任何领土都是通过与周边地区漫长博弈后逐渐确立下来的，想得到利益首先得参与到游戏中。")]),a("li",[s._v("各玩家实力是动态变化的，即便是无法通航的北冰洋，都可能因为温室效应变成不冻港，因此提前看到趋势并提前准备是必须的。")]),a("li",[s._v("想从对方获得利益，首先要了解对方想获得什么利益，自己有什么筹码，这样才容易促成合作。在寻找盟友前，先站在对方角度掂量一下自己是否合适。")]),a("li",[s._v("不可能一家独大，想成为霸主，必须建立一个生态。以前是小弟听大哥的话，现在大哥得给小弟好处，才能得到小弟的忠诚。")]),a("li",[s._v("已有霸主的地位不是一朝一夕就能摧毁的，就像中国想突破马六甲海峡的封锁，在不突破整体海洋封锁的前提下是不可能的，因为海洋霸权是一个全球化整体，美国封锁亚洲有完整的第一岛链、第二岛链逻辑，解决问题的视角要全面。")])]),a("p",[s._v("如今处于大变革的和平时代，国家之间看似和平，实则在进行经济扩张，大国之间要学会不撕破脸的竞争方式。而这个多方博弈的复杂性，使得阴谋几乎不可能得逞，大国的政策都是阳谋，比的是谁更能顺势而为，拉拢更多合作者。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},6643:function(s,t,a){s.exports=a.p+"img/MergeRequestFlow.4926d80e.jpg"},"66db":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("section",{staticClass:"content element-doc"},[e("header-block",[e("template",{slot:"title"},[e("p",[s._v("css")])]),e("h2",{attrs:{id:"css"}},[s._v("css "),e("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[s._v("§")])]),e("br"),e("p",[e("em",[s._v("文档版本：v1.0")])]),e("p",[e("em",[s._v("修订时间：2019年07月22日")])]),e("p",[e("em",[s._v("范围： 上海苏州研发侧所有前端产品")])]),e("table",{staticClass:"table"},[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[s._v("版本")]),e("th",{staticStyle:{"text-align":"left"}},[s._v("修改人")]),e("th",{staticStyle:{"text-align":"left"}},[s._v("修订内容")]),e("th",{staticStyle:{"text-align":"left"}},[s._v("时间")])])]),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("v1.0")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("王来彬")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("第一版发布")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("2018-07-22")])])])]),e("hr"),e("blockquote",[e("p",[e("strong",[s._v("特别说明：")])]),e("ul",[e("li",[s._v("为了前端提交规范的统一化")]),e("li",[s._v("禁止去掉每个项目所加入.hooksd的拦截")])])])],2),e("header-block",[e("template",{slot:"title"},[e("p",[s._v("commit message")])]),e("h3",{attrs:{id:"commit-message"}},[s._v("commit message "),e("a",{staticClass:"header-anchor",attrs:{href:"#commit-message"}},[s._v("§")])]),e("br"),e("p",[e("img",{attrs:{src:a("2bf1"),alt:"commit message"}})]),e("h3",{attrs:{id:"commit-message-de-zuo-yong"}},[s._v("Commit message 的作用 "),e("a",{staticClass:"header-anchor",attrs:{href:"#commit-message-de-zuo-yong"}},[s._v("§")])]),e("ul",[e("li",[s._v("提供更多的历史信息，方便快速浏览")]),e("li",[s._v("可以过滤某些commit（比如文档改动），便于快速查找信息。")]),e("li",[s._v("可以直接从commit生成Change log")])]),e("h3",{attrs:{id:"commit-message-de-ge-shi"}},[s._v("Commit message 的格式 "),e("a",{staticClass:"header-anchor",attrs:{href:"#commit-message-de-ge-shi"}},[s._v("§")])]),e("p",[s._v("**注意事项：**如果type为feat和fix，则该 commit 将肯定出现在 Change log 之中。其他情况不要放入 Change log。")]),e("blockquote",[e("p",[e("strong",[s._v("type说明：")]),s._v(" commit 的类别，只允许使用下面7个标识。")]),e("ul",[e("li",[s._v("feat：新功能（feature）")]),e("li",[s._v("fix：修补bug")]),e("li",[s._v("docs：文档（documentation）")]),e("li",[s._v("style： 格式（不影响代码运行的变动）")]),e("li",[s._v("refactor：重构（即不是新增功能，也不是修改bug的代码变动）")]),e("li",[s._v("test：增加测试")]),e("li",[s._v("chore：构建过程或辅助工具的变动 "),e("strong",[s._v("scope说明：")]),s._v(" 用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。 "),e("strong",[s._v("subject说明：")]),s._v(" commit 目的的简短描述。")]),e("li",[s._v("以动词开头，使用第一人称现在时，比如change，而不是changed或changes")]),e("li",[s._v("第一个字母小写")]),e("li",[s._v("结尾不加句号（.）")])])]),e("h3",{attrs:{id:"sheng-cheng-change-log"}},[s._v("生成 Change log "),e("a",{staticClass:"header-anchor",attrs:{href:"#sheng-cheng-change-log"}},[s._v("§")])]),e("blockquote",[e("p",[s._v("如果你的所有 Commit 都符合 Angular 格式，那么发布新版本时， Change log 就可以用脚本自动生成的文档包括以下三个部分changes")]),e("ul",[e("li",[s._v("New features")]),e("li",[s._v("Bug fixes")]),e("li",[s._v("Breaking changes")])])]),e("h3",{attrs:{id:"git-liu-cheng"}},[s._v("git 流程 "),e("a",{staticClass:"header-anchor",attrs:{href:"#git-liu-cheng"}},[s._v("§")])]),e("p",[e("img",{attrs:{src:a("90e7"),alt:"git-流程"}})]),e("h3",{attrs:{id:"npm-run-commit-liu-cheng"}},[s._v("npm run commit 流程 "),e("a",{staticClass:"header-anchor",attrs:{href:"#npm-run-commit-liu-cheng"}},[s._v("§")])]),e("p",[e("img",{attrs:{src:a("26d3"),alt:"npm run commit示意图"}})])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"6f62":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("section",{staticClass:"content element-doc"},[e("header-block",[e("template",{slot:"title"},[e("p",[s._v("codereview")])]),e("h2",{attrs:{id:"code-review"}},[s._v("Code Review "),e("a",{staticClass:"header-anchor",attrs:{href:"#code-review"}},[s._v("§")])]),e("br"),e("p",[e("em",[s._v("文档版本：v1.0")])]),e("p",[e("em",[s._v("修订时间：2019年07月22日")])]),e("p",[e("em",[s._v("范围： 上海苏州研发所有产品")])]),e("table",{staticClass:"table"},[e("thead",[e("tr",[e("th",[s._v("版本")]),e("th",[s._v("修改人")]),e("th",[s._v("修订内容")]),e("th",[s._v("时间")])])]),e("tbody",[e("tr",[e("td",[s._v("v1.0")]),e("td",[s._v("王来彬")]),e("td",[s._v("第一版发布")]),e("td",[s._v("2018-07-22")])])])]),e("blockquote",[e("p",[e("strong",[s._v("特别说明：")])]),e("ul",[e("li",[s._v("Code Review不过的代码，无特殊情况一个工作日内必须解决消化掉！")]),e("li",[s._v("对于急于上线来不及 Review 的代码，可以先合并上线，上线后再补充 Review！")])])])],2),e("header-block",[e("template",{slot:"title"},[e("p",[s._v("意义")])]),e("h3",{attrs:{id:"yi-yi"}},[s._v("意义 "),e("a",{staticClass:"header-anchor",attrs:{href:"#yi-yi"}},[s._v("§")])]),e("br"),e("ul",[e("li",[s._v("交叉排查缺陷：通过团队成员相互审核，避免代码层面出现显而易见的问题")]),e("li",[s._v("提高代码质量：通过团队成员相互监督，在完成功能的基础之上不断完善代码结构")]),e("li",[s._v("建立团队意识：代码是团队财产，团队成员在相互督促与改进中共同成长")])])],2),e("header-block",[e("template",{slot:"title"},[e("p",[s._v("体系")])]),e("h3",{attrs:{id:"ti-xi"}},[s._v("体系 "),e("a",{staticClass:"header-anchor",attrs:{href:"#ti-xi"}},[s._v("§")])]),e("br"),e("ul",[e("li",[s._v("日常 Code Review：开发者完成初步结构设计，或者完成一个相对完整的小模块达到可提交阶段")]),e("li",[s._v("需求 Code Review：评估需求完成度，与其它需求的潜在冲突")]),e("li",[s._v("上线 Code Review：上线前Review，重点排查配置问题，安全问题，代码冲突")]),e("li",[s._v("重点代码 Code Review：一定周期内对具有代表性的代码集体走读，重点在于解决团队共性问题，讨论改进方法")])])],2),e("header-block",[e("template",{slot:"title"},[e("p",[s._v("重要指标")])]),e("h3",{attrs:{id:"chong-yao-zhi-biao"}},[s._v("重要指标 "),e("a",{staticClass:"header-anchor",attrs:{href:"#chong-yao-zhi-biao"}},[s._v("§")])]),e("br"),e("ul",[e("li",[s._v("代码结构格式化清晰")]),e("li",[s._v("变量、方法等命名符合规范")]),e("li",[s._v("核心代码逻辑清晰且有必要注释说明")]),e("li",[s._v("临时性代码增加主要标识（@FIXME）")])])],2),e("header-block",[e("template",{slot:"title"},[e("p",[s._v("建议")])]),e("h3",{attrs:{id:"jian-yi"}},[s._v("建议 "),e("a",{staticClass:"header-anchor",attrs:{href:"#jian-yi"}},[s._v("§")])]),e("br"),e("ul",[e("li",[s._v("单次提交Review的代码量尽量完整独立")]),e("li",[s._v("将别人提交的代码视作自己将维护的代码，个人标准与集体标准对齐")]),e("li",[s._v("不能形式化、对事不对人，对改进意见未做修改的提交不能上线")])])],2),e("header-block",[e("template",{slot:"title"},[e("p",[s._v("技巧")])]),e("h3",{attrs:{id:"ji-qiao"}},[s._v("技巧 "),e("a",{staticClass:"header-anchor",attrs:{href:"#ji-qiao"}},[s._v("§")])]),e("br"),e("ul",[e("li",[s._v("No magic")]),e("li",[s._v("Explicit not implicit")]),e("li",[s._v("覆盖度比深度重要，覆盖度追求100%")]),e("li",[s._v("频率比仪式感重要，不专门组织会议")]),e("li",[s._v("粒度要尽可能小，一个组件一个方法均可")]),e("li",[s._v("CR 并不只是为了找错，看到好的代码，不要吝啬你的赞美")]),e("li",[s._v("本质是鼓励开发者间更多的沟通，互相学习，营造技术文化氛围")])])],2),e("header-block",[e("template",{slot:"title"},[e("p",[s._v("流程")])]),e("h3",{attrs:{id:"liu-cheng"}},[s._v("流程 "),e("a",{staticClass:"header-anchor",attrs:{href:"#liu-cheng"}},[s._v("§")])]),e("br"),e("p",[e("strong",[s._v("Code Review 体现的是团队对于代码质量的追求，对于团队内部协作的重视，也是一种团队文化。请大家自觉遵守，同时可以借鉴他人开发思想，我们也会定期总结 Review 经验来丰富开发规范！！")])]),e("h3",{attrs:{id:"code-review-liu-cheng"}},[s._v("Code Review 流程 "),e("a",{staticClass:"header-anchor",attrs:{href:"#code-review-liu-cheng"}},[s._v("§")])]),e("p",[e("img",{attrs:{src:a("6643"),alt:"codeReview-流程"}})]),e("br"),e("h4",[s._v("日常开发")]),e("p",[s._v("开发者根据 Develop 分支建立个人开发分支("),e("strong",[s._v("英文全名，如 ligang")]),s._v(")，每天自行 Merge Develop 分支代码；根据开发情况，定期向 Develop 分支发起 Merge Requests 请求，然后通知相关人进行 codereview，根据代码情况查看是否进行合并，合并与否都需要留下 coment")]),e("br"),e("h4",[s._v("Bug修改")]),e("p",[s._v("开发者根据 Master 分支建立临时 Hotfix 分支，根据开发情况，向 Master 分支发起 Merge Requests 请求，然后通知相关人进行 codereview，根据代码情况查看是否进行合并，合并与否都需要留下 coment，合并后相关开发者删除临时 Hotfix 分支。")]),e("br"),e("h4",[s._v("Merge request创建流程")]),e("ul",[e("li",[s._v("source branch")]),e("li",[s._v("target branch")]),e("li",[s._v("title")]),e("li",[s._v("description")]),e("li",[s._v("assignee")])]),e("p",[e("img",{attrs:{src:a("b5c3"),alt:" Merge request创建流程示意图"}})]),e("br"),e("h4",[s._v("Merge request审核流程")]),e("ul",[e("li",[s._v("编写代码并将其推送到单独的分支。")]),e("li",[s._v("为主要开发分支创建合并请求。 Assignee以及说明字段和评论中被提到的那些人将通过电子邮件通知合并请求。如果需要某一位开发人员关注，你可以在描述字段中@该名开发人员。")]),e("li",[s._v("等到MR被接受或拒绝，并提供有关必要修复的评论。")]),e("li",[s._v("参与有关修复的讨论。 （GitLab允许回复评论）")]),e("li",[s._v("修复。")]),e("li",[s._v("将更改推送到你的分支。")]),e("li",[s._v("打开一个新合并如果最后一个MR被关闭（如果合并请求未关闭，它将自动更新，直到最后一次提交为止）。")]),e("li",[s._v("通过注释合并请求或以其他方式报告已实施的修复")])]),e("p",[e("img",{attrs:{src:a("c170"),alt:" Merge request审核流程示意图"}})])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"746f":function(s,t,a){var e=a("428f"),n=a("1a2d"),l=a("e538"),i=a("9bf2").f;s.exports=function(s){var t=e.Symbol||(e.Symbol={});n(t,s)||i(t,s,{value:l.f(s)})}},7567:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("刷新")])]),a("h2",{attrs:{id:"shua-xin"}},[s._v("刷新 "),a("a",{staticClass:"header-anchor",attrs:{href:"#shua-xin"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("微软的市值已经突破一万亿美元了，我们很难想象当年僵化而封闭的微软是怎么涅槃重生的。从仅支持自家 Windows 到收购 Github、从失去移动操作系统市场到与 AWS 平分云服务市场、从 Windows 收费升级到 Win10 限时免费升级、从咒骂 Linux 是癌症到大部分云服务都跑在 Linux 操作系统上、从反垄断、数据隐私被诉讼大户，到 Facebook Google 被监管部门调查时却可以置身事外，微软一定从内部发生了彻底的变革。")]),a("p",[s._v("新微软的变革经验值得我们学习，"),a("a",{attrs:{href:"https://www.baidu.com/link?url=tVqSngscNfJokBYi3Jwg66SDAJy8Sn5Y4nChDn1gJRAdsrbNYqXSQl43UyyryLtsNhlf4e0UjUfseUAUpPTuMK&wd=&eqid=c6d6c373000d8ee4000000045d58efd4"}},[s._v("《刷新》")]),s._v(" 就是一本介绍这场变革的书，它的作者是领导这场变革的现任微软 CEO 萨提亚·纳德拉。")]),a("p",[s._v("这本书的关键词是："),a("strong",[s._v("同理心、文化变革、成长型思维")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本书围绕家庭与事业两个层面展开，从家庭中得到的领悟帮助作者更好的工作。")]),a("br"),a("h2",{attrs:{id:"sa-ti-ya-de-jia-ting"}},[s._v("萨提亚的家庭 "),a("a",{staticClass:"header-anchor",attrs:{href:"#sa-ti-ya-de-jia-ting"}},[s._v("§")])]),a("p",[s._v("作者萨提亚·纳德拉的母亲是一名教师，父亲是一个勤奋的印度高级官员，然而他的成长环境相当宽松，"),a("strong",[s._v("使作者从小就懂得独立思考并按照自己的意愿做事")]),s._v("。母亲难以兼顾事业与家庭而选择放弃工作，"),a("strong",[s._v("让作者体会到女性工作的不公平")]),s._v("，父亲"),a("strong",[s._v("追求上进心态与行为帮助作者得到更多职业发展机会")]),s._v("。而孩子扎因天生的重度大脑性瘫痪"),a("strong",[s._v("使作者学着站在孩子的角度思考问题，学会真正理解同理心。")])]),a("p",[s._v("作者爱好的运动是板球，这是印度最受欢迎的运动。这项运动带给作者的除了热血沸腾之外，还有对团队合作的理解："),a("strong",[s._v("好的领导不仅自己能力要出色，还要能帮助队员提升信心，发挥队员的潜力")]),s._v("，而专业技能优秀的球员，如果不能进行良好的团队合作，最坏的情况甚至会损害团队整体利益。")]),a("br"),a("h2",{attrs:{id:"wei-ruan-mian-dui-zen-yang-de-wei-ji"}},[s._v("微软面对怎样的危机 "),a("a",{staticClass:"header-anchor",attrs:{href:"#wei-ruan-mian-dui-zen-yang-de-wei-ji"}},[s._v("§")])]),a("p",[s._v("危机往往是多个维度体现的，且相辅相成。微软面临的两大主要危机分别是 "),a("strong",[s._v("员工失去信心")]),s._v(" 与 "),a("strong",[s._v("业绩下滑")]),s._v("，员工失去信心是内因，引发了业绩下滑的外因。")]),a("br"),a("p",[s._v("在最糟糕的时候，微软内部帮派林立，各部门负责人只想巩固自己的地盘，这让微软失去了创新领域竞争的机会。科技行业的业务趋势总是处于 "),a("strong",[s._v("三浪叠加状态")]),s._v("：")]),a("ul",[a("li",[a("strong",[s._v("旧的领域业绩已经在下滑")]),s._v("，但基数大，往往也是公司发家的根基，对部门负责人自己来说，再吃几年老本对自己的利益最大，但这终将导致公司走向失败。")]),a("li",[a("strong",[s._v("当前领域增长已经逐渐放慢")]),s._v("，但未来仍有很大增长空间，这些业务被寄予了厚望。")]),a("li",[a("strong",[s._v("新的领域尚不清晰")]),s._v("，但一旦探索到正确的方向，增长速度甚至会年年翻番，这些业务会在未来几年内成为公司的收入支柱。")])]),a("p",[s._v("微软的个人计算机 Windows 操作系统太过成功，使微软在移动端浪潮下没能将足够的资源投入到移动端业务中，真正的创新部门被边缘化，旧领域部门掌握着绝对话语权，如果 CEO 不能作出改变，公司将走向不可逆的衰亡。")]),a("br"),a("p",[s._v("业务上，微软也在这三个主要方向全面落后：")]),a("ul",[a("li",[a("strong",[s._v("操作系统领域")]),s._v("：微软个人计算机出货量和财务增长已陷入停滞，而苹果、谷歌的智能手机和平板电脑销量正在上升。")]),a("li",[a("strong",[s._v("搜索领域")]),s._v("：谷歌的搜索和在线广告收入也在持续增长，而微软的搜索技术才刚起步，市场份额只有竞争对手的零头。")]),a("li",[a("strong",[s._v("云技术领域")]),s._v("：亚马逊推出的 AWS 已经在市场建立起领导地位，微软由于 Windows 原因，不愿意接受云计费模式，还在固守一次性买卖思维，甚至连云产品都没有。")])]),a("br"),a("h2",{attrs:{id:"wei-ruan-shi-ru-he-zhuan-xing-de"}},[s._v("微软是如何转型的 "),a("a",{staticClass:"header-anchor",attrs:{href:"#wei-ruan-shi-ru-he-zhuan-xing-de"}},[s._v("§")])]),a("p",[s._v("站在首席执行官视角，转型一定是从文化转型开始的，只有转变了企业文化，才能充分激发每一个人的潜力，使公司朝着正确方向发展。作者在成为微软 CEO 后，在文化上作出的改变主要分为三点：")]),a("ul",[a("li",[a("strong",[s._v("找到微软公司的新使命")]),s._v("。显然，让每个人都拥有一台电脑这个目标已经达成了，为了推动微软继续前进，作者将新的目标设定为：赋能大众，通过做平台、工具，来提升全社会各组织、团体的工作效率、医疗效率、组织效率等等。")]),a("li",[a("strong",[s._v("建立耳目一新、出人意料的伙伴关系")]),s._v("。不论是 Linux 、苹果公司还是亚马逊，一方面是强劲竞争对手，但另一些领域也有合作的价值，比如将微软办公套件通过 IOS 平台普惠到大众这种部分领域合作的心态是不可或缺的。微软封闭的文化也在这一点上真正转向了开放，独占的思维模式如果走不通，合作能带来更多的机会。")]),a("li",[a("strong",[s._v("同理心")]),s._v("。微软高级副总裁沈向洋在 2019 年极客大会的分享也提到了这一点，微软通过制造辅助设备帮助帕金森患者正常完成写字、绘画。从广义上说，微软正式通过同理心，站在用户角度思考，才领悟到如何才能真正的帮助用户，比如一位安卓用户需要在手机查看 Word 文档，那么让 Word 支持安卓平台，推出基于云平台的 Office 365 就是一个自然的行为。")])]),a("br"),a("p",[s._v("在文化转型的推动下，微软在业务上也进行了一系列积极的调整：")]),a("ul",[a("li",[a("strong",[s._v("将云业务放到核心位置")]),s._v("。这一点和阿里的云战略转型很像。云业务一开始都不怎么赚钱，需要大量资金和人才投入，在数年后才能看到回报，微软最大的问题是如何打破公司内资源分配不均匀的问题。通过一系列人事调整与战略制定，微软的云业务走上了正规，现在已经与 AWS 平分市场份额。")]),a("li",[a("strong",[s._v("在可能的领域与竞争对手达成合作")]),s._v("。除了推出 IOS 平台的 Office 套件外，必应还成为了雅虎搜索的搜索引擎，微软甚至放弃了排他性条款，允许雅虎同时使用其他公司的搜索引擎服务，即便如此，必应引擎现在仍驱动着大部分雅虎搜索功能，而良好的开放心态也加速必应搜索引擎能力的迭代。")]),a("li",[a("strong",[s._v("推动部门之间员工的协作")]),s._v("。随着文化变革，微软内部部门孤岛的情况有了好转，从不接收其他部门意见的 Windows 研发部门开始采纳其他部门员工提出的建议。笔者了解到 Facebook 的大部分源码每个员工都有充分权限参与修改，维护一个系统不只是相应业务线员工的特权，来自其他部门的创意往往更优秀。")])]),a("br"),a("h2",{attrs:{id:"san-tiao-ling-dao-yuan-ze"}},[s._v("三条领导原则 "),a("a",{staticClass:"header-anchor",attrs:{href:"#san-tiao-ling-dao-yuan-ze"}},[s._v("§")])]),a("p",[s._v("无论是推动文化变革，还是推动业务增长，都需要高级、中层管理人员的实施，作者给出了三点领导原则：")]),a("ul",[a("li",[a("strong",[s._v("向共事的人传递明确信息")]),s._v("。传达信息是领导者每天都在做的事情，领导者应该把信息交流重点放在事情上，而不是人上，也就是关注如何把事情做好，而不是讨论谁更聪明。")]),a("li",[a("strong",[s._v("领导者要产生能量，不仅在自己团队中，还要在整个公司中")]),s._v("。领导者身处在多个圈子中，有自己管理的团队的圈子，也有来自上级组织的圈子，有来自公司级横向委员会的圈子，也有核心管理层的圈子，作者站在 CEO 的角度，要求领导者要将最高一层圈子放在首要地位，也就是整体利益大于局部利益。")]),a("li",[a("strong",[s._v("找到取得成功和让事情发生的方式")]),s._v("。也就是正确的做事，懂得平衡长期利益与短期利益，不走极端；让团队成员找到自己热爱的工作方式；能跨越边界，全球化思维。")])]),a("br"),a("h2",{attrs:{id:"qi-ta"}},[s._v("其它 "),a("a",{staticClass:"header-anchor",attrs:{href:"#qi-ta"}},[s._v("§")])]),a("p",[s._v("本文要突出的介绍的内容已经结束，本书还有最后几个部分笔者简要带过：")]),a("br"),a("p",[a("strong",[s._v("三大变革：")])]),a("p",[s._v("作者提出未来可能由技术引领行业变革的三个方向：混合现实、人工智能和量子计算。这就是跨越边界的思维方式，微软积极布局的这三个前沿领域，对准的是未来的 “第三浪”。")]),a("br"),a("p",[a("strong",[s._v("隐私、安全和言论自由：")])]),a("p",[s._v("捍卫隐私、安全与言论自由也是微软转型的重要内容，微软通过积极与监管部门合作，通过实际行动捍卫言论自由，使得微软从政府监管对象逐渐转变为监管原则的捍卫者，这也是近年来科技巨头纷纷作出一个改变。")]),a("br"),a("p",[a("strong",[s._v("人与机器的关系：")])]),a("p",[s._v("不要把机器与人想成竞争关系，要理解为机器辅助人类的关系。同时机器也是释放人类创造力的最重要方式，虽然在变革前期会导致大量失业，但消失的旧行业都是重复性高的，创造出来的新行业更能激发人类的创造力。有一句话笔者印象最深刻：机器替代人类工作的过程，也是人类逐渐拾回作为人的尊严的过程。人本就应该将时间用于思考与创造，而不是重复性劳动。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("引导微软一系列变革的源泉可以认为是 “同理心”，因为同理心可以练就开放的性格，指引正确的方向。微软 CEO 萨提亚从家庭与生活中养成了同理心，并将其运用在公司的变革上，最终让微软每一位员工都能换位思考，利用同理心做正确的事，这种思想的传导是最难的一步，作者做到了。")]),a("p",[s._v("对于我们的思考是，无论是公司的管理者，还是基层员工，都应该培养自己的同理心，因为有同理心的人不仅能更好的工作，在生活中也能更融洽的与人相处。")]),a("p",[s._v("在工作中，同理心也是突破职业天花板的能力之一，想要提升为客户带来的价值，首先要接触并理解客户，站在客户视角思考问题，在面临内部矛盾或外部竞争时，仍能坚守为客户创造价值的目标，下一步改革的方向就会变得清晰，矛盾会逐渐化解，竞争也不会是一个问题，用户想要的不是竞争，而是被赋能，持有这种心态做事，与竞争对手合作就是利益最大化的选择了。")]),a("p",[s._v("微软的首席执行官萨提亚正因为抱有同理心，才能作出超越竞争、封闭的决策，这对还没能掌握这一心智的公司来说，是种降维打击。一个用一切手段赋能用户、在核心能力不惧竞争（云计算）、在可合作领域充分合作的公司是极其强大的。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"76ed":function(s,t,a){var e={"./alert.md":"9888","./docs/introduction.md":"0de7","./frontier/beforeResearch/1.md":"ac11","./frontier/beforeResearch/10.md":"2972","./frontier/beforeResearch/11.md":"fc9c","./frontier/beforeResearch/12.md":"7bf9","./frontier/beforeResearch/13.md":"5ccb","./frontier/beforeResearch/14.md":"e00a","./frontier/beforeResearch/15.md":"e436","./frontier/beforeResearch/16.md":"abe0","./frontier/beforeResearch/17.md":"abfc","./frontier/beforeResearch/18.md":"2aaa","./frontier/beforeResearch/19.md":"1e9d","./frontier/beforeResearch/2.md":"e46d","./frontier/beforeResearch/20.md":"00fd","./frontier/beforeResearch/3.md":"1bd1","./frontier/beforeResearch/4.md":"e8fd","./frontier/beforeResearch/5.md":"20ca","./frontier/beforeResearch/6.md":"3d37","./frontier/beforeResearch/7.md":"2fce","./frontier/beforeResearch/8.md":"0656","./frontier/beforeResearch/9.md":"bc50","./frontier/biz/1.md":"f27d","./frontier/biz/10.md":"e2e8","./frontier/biz/11.md":"bf2ab","./frontier/biz/2.md":"1cbc","./frontier/biz/3.md":"d7c5","./frontier/biz/4.md":"da2d","./frontier/biz/5.md":"6272","./frontier/biz/6.md":"76fd","./frontier/biz/7.md":"7567","./frontier/biz/8.md":"585f","./frontier/biz/9.md":"fc5b","./frontier/designMode/1.md":"cb6d","./frontier/designMode/10.md":"8118","./frontier/designMode/11.md":"93e5","./frontier/designMode/12.md":"5d30","./frontier/designMode/13.md":"7777","./frontier/designMode/2.md":"b024","./frontier/designMode/3.md":"3138","./frontier/designMode/4.md":"94d5","./frontier/designMode/5.md":"5812","./frontier/designMode/6.md":"088c","./frontier/designMode/7.md":"be49","./frontier/designMode/8.md":"15f8","./frontier/designMode/9.md":"fc49","./guide/codereview.md":"6f62","./guide/css.md":"2e40","./guide/file.md":"296b","./guide/git.md":"66db","./guide/html.md":"0816","./guide/javascript.md":"2903","./guide/mock.md":"5212","./guide/nopart.md":"9d0e","./guide/svgicon.md":"08ad"};function n(s){var t=l(s);return a(t)}function l(s){if(!a.o(e,s)){var t=new Error("Cannot find module '"+s+"'");throw t.code="MODULE_NOT_FOUND",t}return e[s]}n.keys=function(){return Object.keys(e)},n.resolve=l,s.exports=n,n.id="76ed"},"76fd":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("Tableau 入门")])]),a("h2",{attrs:{id:"tableau-ru-men"}},[s._v("Tableau 入门 "),a("a",{staticClass:"header-anchor",attrs:{href:"#tableau-ru-men"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("引用著名瑞典统计学家 Hans Rosling 的一句话：想法来源于数字、信息，再到理解。")]),a("p",[s._v("分析数据的最好方式是可视化，因为可视化承载的信息密度更高，甚至可以从不同维度对数据进行交互式分析。今天要精读的文章就分析了经典可视化分析工具 Tableau："),a("a",{attrs:{href:"https://www.analyticsvidhya.com/blog/2017/07/data-visualisation-made-easy/"}},[s._v("data-visualisation-made-easy")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[a("a",{attrs:{href:"https://www.tableau.com/"}},[s._v("Tableau")]),s._v(" 是一款广泛用于智能商业的强大数据分析工具，通过不同可交互的图表和仪表盘帮助你获得业务洞见。")]),a("br"),a("h2",{attrs:{id:"an-zhuang"}},[s._v("安装 "),a("a",{staticClass:"header-anchor",attrs:{href:"#an-zhuang"}},[s._v("§")])]),a("p",[s._v("Tableau 提供了三种使用方式：")]),a("p",[a("strong",[s._v("Tableau Desktop")])]),a("p",[a("a",{attrs:{href:"https://www.tableau.com/products/trial"}},[s._v("拥有 14 天免费试用的桌面版")]),s._v("，可以将工作数据存储在计算机本地，如果你是学生或老师可以获得一年的免费使用权。")]),a("p",[a("strong",[s._v("Tableau Public")])]),a("p",[a("a",{attrs:{href:"https://public.tableau.com/s/download"}},[s._v("公开版完全免费")]),s._v("，和桌面版的唯一区别是，所有数据都无法保存在本地，只能保存在 Tableau 服务器的云端，而且是公开的。")]),a("p",[a("strong",[s._v("Tableau Online")])]),a("p",[a("a",{attrs:{href:"https://sso.online.tableau.com/public/idp/SSO"}},[s._v("网页版也完全免费")]),s._v("，是 Tableau Public 的网页版。")]),a("br"),a("h2",{attrs:{id:"lian-jie-shu-ju-yuan"}},[s._v("连接数据源 "),a("a",{staticClass:"header-anchor",attrs:{href:"#lian-jie-shu-ju-yuan"}},[s._v("§")])]),a("p",[s._v("安装好 Tableau 后，第一步就是连接数据源。它支持连接本地或云端的数据源，本地最常用的数据源可以从 Excel 转换。这里是一份 "),a("a",{attrs:{href:"https://github.com/pavleenkaur/TableauTutorial-On-AnalyticsVidhya/blob/master/Sample-Superstore.xls"}},[s._v("样例数据")]),s._v("，包含了一个超市几年内的销售情况，我们可以用这份数据练手。")]),a("p",[s._v("下载好这份数据后，选择从 Excel 导入，确认后将 "),a("strong",[s._v("Orders")]),s._v(" 表拖拽到右侧区域，如下图所示：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1Cvh5cV67gK0jSZPfXXahhFXa-1440-900.png"}}),a("p",[s._v("可以看到，导入的数据格式有些问题，这是因为这份 Excel 文件表头有一些描述信息干扰。勾选 "),a("strong",[s._v("Use Data Interpreter")]),s._v(" 后，可以开启数据解析功能，自动分析出你想要的表结构：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1XLJ_c7T2gK0jSZPcXXcKkpXa-1440-900.png"}}),a("p",[s._v("可以看到表结构已经正常了，在数据清洗的过程中，Tableau 强大的数据分析功能已经初见端倪。你甚至可以点击 "),a("strong",[s._v("Review ths results")]),s._v(" 看看它是如何清洗数据的：点击后会下载一份分析 Excel，其中过滤掉的数据会被标记，自动分析出的表结构会被高亮。")]),a("br"),a("h2",{attrs:{id:"shu-ju-ke-shi-hua"}},[s._v("数据可视化 "),a("a",{staticClass:"header-anchor",attrs:{href:"#shu-ju-ke-shi-hua"}},[s._v("§")])]),a("p",[s._v("在页面最底部有几个切换项，依次是 "),a("strong",[s._v("Data Source")]),s._v("：数据源、"),a("strong",[s._v("Sheet")]),s._v("：工作簿，后面跟随的三个按钮可以继续创建多个 Sheet、Dashboard、Story，这些后面都会讲到。首先点击 Sheet 进入可视化分析的工作簿：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1S2LzcebviK0jSZFNXXaApXXa-1440-900.png"}}),a("p",[s._v("可以看到，Orders 表的字段已经被自动分析成 "),a("strong",[s._v("维度")]),s._v(" "),a("strong",[s._v("度量")]),s._v(" 了。维度和度量是数据分析中重要的概念：")]),a("ul",[a("li",[a("strong",[s._v("维度：")]),s._v(" 维度是不能被计数的字段，一般为字符串或离散的值，用来描述数据的维度。")]),a("li",[a("strong",[s._v("度量：")]),s._v(" 度量是可以被计数的字段，一般为数字、日期等连续的值，用来描述数据的量。")])]),a("p",[s._v("右侧空白区域是图表展示区域，"),a("strong",[s._v("可以响应拖拽交互")]),s._v("，顶部的 Columns、Rows 表示列与行，Filters 是过滤器，拖拽字段上去可以对此字段进行过滤，Marks 是标记，Tableau 将图表所有辅助标记功能都抽象为：颜色、大小、文本、具体值、工具提示。举个例子，如果将销量 Sales 字段拖拽到大小区域，那么任何能描述大小的图表，都会以销量的多少来决定大小，比如散点图。")]),a("p",[s._v("右上角的 "),a("strong",[s._v("Show Me")]),s._v(" 是图表自动推荐区域，当你拖拽不同字段的时候，Tableau 会自动展示合适的图表，但你也可以点击 Show Me 进行图表切换。")]),a("p",[s._v("那么开始动手吧！"),a("strong",[s._v("首先我们要看看大盘数据如何，也就是这家超市的总利润、质量、销量：")])]),a("blockquote",[a("p",[s._v("在左侧维度栏目下，最后一个字段 "),a("strong",[s._v("Measure Names")]),s._v(" 表示所有度量的集合。")])]),a("ol",[a("li",[s._v("将 "),a("strong",[s._v("Measure Names")]),s._v(" 拖拽到画布的空白区域。")]),a("li",[s._v("移除我们不关心的 Row ID, Discount 等字段。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1caeXcYH1gK0jSZFwXXc7aXXa-1440-900.png"}}),a("p",[s._v("可以看到，总利润大概是总销量的 10%。如果想展示横向表格，将 Measure Names 从 Rows 拖拽到 Columns 即可。")]),a("blockquote",[a("p",[s._v("Tips: 为了方便区分，Tableau 贴心的将维度标记为蓝色，度量标记为绿色。 同时可以看到，Tableau 对于单指标拖拽，默认采取表格方式渲染。")])]),a("br"),a("p",[a("strong",[s._v("接下来我们要看每一年的详细销量与利润：")])]),a("ol",[a("li",[s._v("将 Order Date 与 Sales 拖拽到 Rows。")]),a("li",[s._v("右键 Sales，将类型从连续改成非连续，这样就会自动变成表格展示。")]),a("li",[s._v("为了展示利润，将 Profit 字段拖拽到 Marks 的 Text 字段上。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1fxV_c4v1gK0jSZFFXXb0sXXa-1440-900.png"}}),a("p",[s._v("我们可以看到，无论是销量还是利润都在逐年上升。"),a("strong",[s._v("接下来我们想具体看看每个月份的数据")]),s._v("：")]),a("ol",[a("li",[s._v("右键 Order Date，将日期维度从年切换到月。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1SCN9c.T1gK0jSZFrXXcNCXXa-1440-900.png"}}),a("p",[s._v("我们可以看到，销量较高的月份分布在：3、9、11、12 月。注意由于没有对年份做筛选，这里的每月统计数据是整合了 2013～2016 四年份的。也就是 1 月的数据其实代表了 2013.1 + 2014.1 + 2015.1 + 2016.1 共四个 1 月份数据的总和。")]),a("br"),a("p",[a("strong",[s._v("接下来我们想了解销量与利润增长的趋势：")])]),a("ol",[a("li",[s._v("将 Order Date 拖拽到 Columns。")]),a("li",[s._v("将 Sales 拖拽到 Rows，此时会出现一条线。接下来将 Profit 拖拽到 "),a("strong",[s._v("左 Y 轴")]),s._v("。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1zVF_c7P2gK0jSZPxXXacQpXa-1440-900.png"}}),a("p",[s._v("这里就涉及到线图拖拽交互设计了，线图一共有三种拖拽方式。如果将一个新字段拖拽到左 Y 轴，就会在左 Y 轴多出一条线；如果拖拽到中间图表区域，则这个字段会当作已有字段的工具提示；如果拖拽到右 Y 轴，则会自动变成双轴图。")]),a("p",[s._v("从上图中能看到，销量增长明显，但利润增长缓慢，看来经营是存在一定问题的，还要继续分析问题在哪。")]),a("br"),a("p",[a("strong",[s._v("我们再看看数据按月分布情况")]),s._v("，同样右击 Order Date，选择 月 粒度：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1RmJ9c.H1gK0jSZSyXXXtlpXa-1440-900.png"}}),a("p",[s._v("上图可以明显看到三个峰值出现在 3、9、11 月份，然而这段期间利润增长幅度却不大，可以看出这段期间采取了薄利多销的手段。")]),a("br"),a("p",[a("strong",[s._v("再从地区维度分析数据：")])]),a("ol",[a("li",[s._v("将 Regions 和 Sales 拖拽到 Columns。")]),a("li",[s._v("切换到饼图。")]),a("li",[s._v("将 Sales 拖拽到 Marks Pane 的 Label 上。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1KEJ_c7Y2gK0jSZFgXXc5OFXa-1440-900.png"}}),a("p",[s._v("可以看到东西部地区是销量最高的区域。"),a("strong",[s._v("接下来我们想看具体城市的销量：")])]),a("ol",[a("li",[s._v("将 States 拖拽到画布空白区域，此时会自动出现地图并定位到美国。将 Profits 拖拽到 Color。")]),a("li",[s._v("将地区切换到 Filled Map，将 Profits 拖拽到 Label。")])]),a("p",[s._v("这样就绘制了一张地区，颜色越深利润越高，数字表示销量。")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1CFWbc.Y1gK0jSZFCXXcwqXXa-1440-900.png"}}),a("p",[s._v("可以看到数值越大的区域一般颜色也越深，但这不是分析利润/销量性价比的最佳方式，我们先只看到加州和纽约是销售业绩最好的区域，而科罗拉多州虽然销量不错，但利润却是负的。")]),a("p",[s._v("上面的地图对地形比较直观，但要分析销售健康度，还是用散点图更合适。"),a("strong",[s._v("我们想看看城市销量/利润的健康度分布：")])]),a("ol",[a("li",[s._v("Profit 拖拽到 Columns，Sales 拖拽到 Rows，此时散点图出现，但只有一个点（之所以出现散点图，是因为横纵轴拖拽的都是度量）。")]),a("li",[s._v("我们想按城市下钻，只要把 State 拖拽到 Detail 即可。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1EMl9cVY7gK0jSZKzXXaikpXa-1440-900.png"}}),a("p",[s._v("可以看到，遥遥领先的城市有三个，加州是销售之王。")]),a("p",[s._v("由于还没有介绍到筛选条件，这里简略介绍一下，其实还可以将年份拖拽到筛选条件，只看 2013 年的分布图，也可以点击或圈选其中某些点选择排除某些城市。")]),a("br"),a("p",[a("strong",[s._v("现在需要进一步分析明细数据，将不同商品种类按年份细分，看按月的销量，并看看这些月份的利润如何：")])]),a("ol",[a("li",[s._v("此时需要用到高亮表格。首先将 Category 和 Order Date 拖拽到 Rows，简单的表格出现了。")]),a("li",[s._v("将 Order Date 再拖拽到 Columns，并右键将其粒度改为月。")]),a("li",[s._v("在 Show Me 中切换为 Highlight Table，重新将 Order Date（Year）拖拽回 Rows。")]),a("li",[s._v("为了展示颜色与文字，将 Profit 拖拽到 Color，Sales 拖拽到 Label。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1Ud07cWL7gK0jSZFBXXXZZpXa-1440-900.png"}}),a("p",[s._v("可以看到，办公套件和科技产品业绩最好，其中办公套件在 2015 年 12 月销量利润双丰收，科技产品在 2015 年 10 月与 2016 年 3 月销量利润双丰收。整体来看前半年是淡季。")]),a("p",[s._v("但这张图无法看到销量与利润性价比关系，"),a("strong",[s._v("我们要找出利润率最高的商品和利润率最低的商品：")])]),a("ol",[a("li",[s._v("将 Proft 拖拽到 Columns。")]),a("li",[s._v("将 Sub-Category 拖拽到 Rows。")]),a("li",[s._v("切换到 Horizontal Bars。")]),a("li",[s._v("将销量 Sales 拖拽到 Color。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB10T4.c9f2gK0jSZFPXXXsopXa-1440-900.png"}}),a("p",[s._v("可以明显看到 Copiers 就是性价比之王，拥有最高的利润，但销量却不是很高（颜色深度中等），而桌子是性价比最低的，利润为负，而且销量不低。")]),a("br"),a("h2",{attrs:{id:"qi-ta-gong-neng"}},[s._v("其他功能 "),a("a",{staticClass:"header-anchor",attrs:{href:"#qi-ta-gong-neng"}},[s._v("§")])]),a("p",[s._v("除了上面基本可视化分析能力之外，Tableau 还有许多辅助功能。")]),a("br"),a("h3",{attrs:{id:"shai-xuan-qi"}},[s._v("筛选器 "),a("a",{staticClass:"header-anchor",attrs:{href:"#shai-xuan-qi"}},[s._v("§")])]),a("p",[s._v("在按月分布的折线图中，如果我们只想看某一年的，可以将 Order Date 拖拽到 Filters 区域，只勾选想要保留的年份：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1jgWcc1H2gK0jSZJnXXaT1FXa-1440-900.png"}}),a("p",[s._v("Tablueau 这种交互等价于 Sql 中 "),a("code",[s._v("in")]),s._v(" 语句，当然 Tablueau 还支持更复杂的条件或代码表达式，这里只是将更友好的筛选方式优先展示区来。")]),a("br"),a("h3",{attrs:{id:"shang-juan-xia-zuan"}},[s._v("上卷下钻 "),a("a",{staticClass:"header-anchor",attrs:{href:"#shang-juan-xia-zuan"}},[s._v("§")])]),a("p",[s._v("Tableau 支持任意维度之间的上卷下钻，只要你将他们分好组。")]),a("p",[s._v("比如将 Order Date、Order ID、Ship Date、Ship Mode 拖拽到一起，成为 Orders 组；将 Category、Sub-Category、Product ID Product Name 形成 Product 组：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB11lmcc.Y1gK0jSZFCXXcwqXXa-1440-900.png"}}),a("p",[s._v("我们就可以将 Product 直接拖拽到画布区域，并选择矩形树图，通过点击指标上的 “+” “-” 号进行上卷或下钻：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1yud_cVT7gK0jSZFpXXaTkpXa-1440-900.png"}}),a("p",[s._v("上卷下钻是顺序相关的，比如 Product - Order Date 表示在产品类目基础上，对每个类目按日期下钻。而 Order Date - Product 这个顺序，表示在日期分布的基础上，对日期按产品类目下钻，了解不同日期下每个产品的分布情况。")]),a("br"),a("h3",{attrs:{id:"qu-shi-xian"}},[s._v("趋势线 "),a("a",{staticClass:"header-anchor",attrs:{href:"#qu-shi-xian"}},[s._v("§")])]),a("p",[s._v("为使用趋势线，先制作一个双轴图：")]),a("ol",[a("li",[s._v("将 Sales 与 Profit 拖拽到 Rows。")]),a("li",[s._v("将 Order Date 拖拽到 Columns 并切换到月维度。")]),a("li",[s._v("选择 Show Me 的 Dual Combination 即混合图。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1YOeacV67gK0jSZPfXXahhFXa-1440-900.png"}}),a("p",[s._v("点击 Analytics Tab，将 Trend Line 拖入 chart 中：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1HL5gc.Y1gK0jSZFCXXcwqXXa-1440-900.png"}}),a("p",[s._v("趋势图有几种算法，比如线性，Log 或指数，因此在做趋势分析前，首先要判断自己的业务属于哪种增长阶段，如果是爆发期可以选择指数，平稳期可以选择线性等等。")]),a("br"),a("h3",{attrs:{id:"yu-ce"}},[s._v("预测 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yu-ce"}},[s._v("§")])]),a("p",[s._v("回到按月分布的图表，如果我们想预测未来销量和利润的走势，可以使用预测功能：")]),a("ol",[a("li",[s._v("切换到 Analytics Tab，并将 Forecast 拖拽到图表中。")]),a("li",[s._v("可以点击右键配置预测参数。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1Cumcc4D1gK0jSZFsXXbldVXa-1440-900.png"}}),a("p",[s._v("预测趋势有一个浅色区域，表示预测范围。")]),a("br"),a("h3",{attrs:{id:"ju-lei"}},[s._v("聚类 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-lei"}},[s._v("§")])]),a("p",[s._v("象限图的四象限是多维度综合判断的法则，然而 Tableau 支持的聚类分析可以自动做到这些：")]),a("ol",[a("li",[s._v("切换到 Analytics Tab，选择 Clusters。")]),a("li",[s._v("可以选择自动聚类个数，也可以手动指定个数。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1BsWgc1P2gK0jSZFoXXauIVXa-1440-900.png"}}),a("p",[s._v("从上图可以看到，指定了 4 个分类，最右上角加州就是最突出的一组，整个聚类只有它一个元素，而画面偏左下角的也是一类，这些是业绩较差的一组数据。使用了 K 均值聚类算法，并且当你点击右键查看详细星系时，还能把组间、组内方差展示出来：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1O7Oec1H2gK0jSZFEXXcqMpXa-1440-900.png"}}),a("br"),a("h2",{attrs:{id:"yi-biao-ban"}},[s._v("仪表板 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-biao-ban"}},[s._v("§")])]),a("p",[s._v("仪表板可以将多个 Sheets 内容聚合在一起并自由布局，但仪表板最精髓的功能是图表联动功能：")]),a("ol",[a("li",[s._v("点击任意图表，选择 “作为筛选条件”。")])]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1cVjIcebviK0jSZFNXXaApXXa-1440-900.png"}}),a("p",[s._v("Tableau 的所有图表都支持点选，排除等操作，那么点选这类操作本质上其实是个筛选的过程，比如柱状图点击了某根柱子，可以认为是选择了这根柱子当前的维度值作为筛选条件。")]),a("p",[s._v("当一个 Sheet 作为筛选条件后，类似点选这种操作产生的筛选就会作用于其他同数据集的图表，因此如上图所示，当点击了条形图的某一根柱子时，上面的销量地图也自动做了筛选，仅展示当前选中的产品的销量分布。")]),a("br"),a("h2",{attrs:{id:"gu-shi"}},[s._v("故事 "),a("a",{staticClass:"header-anchor",attrs:{href:"#gu-shi"}},[s._v("§")])]),a("p",[s._v("Story 更像是 PPT，将分析后有价值或有意义的图表组合在一起，再配合上说明，得出一些结论：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1wa1gc1L2gK0jSZFmXXc7iXXa-1018-870.png"}}),a("p",[s._v("如上图所示，比如得到这家超市的大盘数据，这一般也是数据分析的最后一步，最后生成报表。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("Tableau 的交互式分析思路印证了这句话：")]),a("p",[s._v("数字、信息，再到理解最终才能产生 Idea。我们从拿到 Excel 导入数据集开始，数据就已经变成了维度和度量的信息，再经过主动思考，将同一份数据进行不同维度的展示，最终得出加州销量最好、家具销售业绩最差、而桌子是负利润的主要来源等等洞见。")]),a("p",[s._v("通过原文对 Tablueau 功能的分析能看到，Tableau 的核心资产是具备交互式分析能力的图表，这些图表通过智能推荐的方式展示出来，可以在不知道如何分析数据时找到一些灵感，真正做到以数据角度思考，图表展示只是辅助的视觉效果。")]),a("p",[s._v("目前国内还处于报表制作的时代，即先选择报表再配数据集，这种使用思路是展示数据优先，而不是分析数据优先，笔者认为原因在于国内大部分做报表的业务场景都处于最末端，也就是数据洞见已经有了，再使用 BI 将这个洞见还原出来。而 BI 工具真正想做的还是在前面 “分析洞见” 这一步，希望数据分析师能可以通过 BI 平台挖掘出商业洞见。")]),a("p",[s._v("要走到这一步，需要国内 BI 平台与使用 BI 的人都发展到下一阶段，而这种探索式数据分析功能早在 2012 年就在国外由 Tableau 团队实现，相信未来三年内国内一定能迎来一波探索式数据分析浪潮！")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},7777:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[s._m(0),a("p",[s._v("Chain of Responsibility（职责链模式）属于行为型模式。行为型模式不仅描述对象或类的模式，还描述它们之间的通信模式，比如对操作的处理应该如何传递等等。")]),s._m(1),s._m(2),s._m(3),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),s._m(4),a("p",[s._v("设想我们要为一个后端框架实现中间件（知道 Koa 的同学可以理解为 Koa 的洋葱模型），在代码中可以插入任意多个中间件，每个中间件都可以对请求与响应进行处理。")]),a("br"),a("p",[s._v("由于每个中间件只响应自己感兴趣的请求，因此只有运行时才知道这个中间件是否会处理请求，那么中间件机制应该如何设计，才能保证其功能和灵活性呢？")]),a("br"),s._m(5),a("p",[s._v("如果一个大型系统中，任何一个模块点击都会弹出帮助文案，但并不是每个模块都有帮助文案的，如果一个模块没有帮助文案，则显示其父级的帮助文案，如果再没有，就继续冒泡到整个应用，展示应用级别的兜底帮助文案。这种系统应该如何设计？")]),s._m(6),s._m(7),s._m(8),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h3",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[s._v("JS 事件冒泡机制对前端来说太常见了，但我们换个角度，站在点击事件的角度理解，就能重新发现其设计的精妙之处：")]),a("br"),a("p",[s._v("点击事件是叠加在每层 dom 上的，由于 dom 对事件的处理和绑定是动态的，浏览器本身不知道哪些地方会处理点击事件，但又要让每层 dom 拥有对点击事件的 “平等处理权”，所以就产生了冒泡机制，与事件阻止冒泡功能。")]),a("br"),a("p",[s._v("通用帮助文案和 JS 事件冒泡很类似，只是把点击事件换成了弹出帮助文案罢了，其场景机理是一样的。")]),a("br"),a("p",[s._v("说到这，我们可以再重新理解一下职责链模式的意图：")]),a("br"),a("p",[a("strong",[s._v("意图：使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。")])]),a("br"),a("p",[s._v("请求指的是某个触发机制产生的请求，是一个通用概念。“避免请求的发送者和接收者之间的耦合关系”，指的是如果我们只有一个对象有处理请求的机会，那接收者就与发送者之间耦合了，其他接收者必须通过这个接收者才能继续处理，这种模式不够灵活。")]),a("br"),a("p",[s._v("后半句描述的是如何设计，可以实现这个灵活的模式，即将对象连成一条链，沿着链条传递该请求，直到有一个对象处理它为止。还要理解到，任何一个对象都拥有阻断请求继续传递的能力。")]),a("br"),a("p",[s._v("在中间件机制的例子中，后端 Web 框架对 Http 请求的处理就是个运用职责链模式的典型案例，因为后端框架要处理的请求是平行关系，任何请求都可能要求被响应，但对请求的处理是通过插件机制拓展的，且对每个请求的处理都是一个链条，存在处理、加工、再处理的逻辑关系。")]),a("h2",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("img",{attrs:{width:"600",src:"https://img.alicdn.com/imgextra/i4/O1CN01PUN6ed1FnhM2CeZDn_!!6000000000532-2-tps-1126-500.png"}}),a("p",[s._v("Handler 就是对请求的处理，可以看到这里是一条环路，只要处理完之后就可以交给下一个 Handler 进行处理，可以在中途拦截后中断，也可以穿透整条链路。")]),a("br"),a("p",[a("code",[s._v("ConcreteHandler")]),s._v(" 是具体 Handler 的实现，他们都需要继承 Handler 以具备相同的 "),a("code",[s._v("HandleRequest")]),s._v(" 方法，这样每一个处理中间件就都拥有了处理能力，使得这些对象连成的链条可以对请求进行传递。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h3",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("职责链实现方式非常多，比如 Koa 的洋葱模型实现原理就值得再写一篇文章，感兴趣的同学可以阅读 "),a("a",{attrs:{href:"https://github.com/tj/co"}},[s._v("co 源码")]),s._v("。这里仅介绍最简单场景的实现方案。")]),a("br"),a("p",[s._v("职责链的简单实现模式也分为两种，一种是每个对象本身维护到下一个对象的引用，另一种是由 Handler 维护后继者。")]),a("br"),a("p",[s._v("下面例子使用 typescript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Handler")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" nextHandler: Handler\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("handle")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(nextHandler) {\n      nextHandler.handle()\n    }\n  }\n}\n")])]),a("br"),a("p",[s._v("每个 Handler 的默认行为就是触发下一个链条的 "),a("code",[s._v("handle")]),s._v("，因此什么都不做的话，这个链条是完全打通的，因此我们可以在链条的任何一环进行处理。")]),a("br"),a("p",[s._v("处理的方式就是重写 "),a("code",[s._v("handle")]),s._v(" 函数，我们在重写时，可以维持对 "),a("code",[s._v("nextHandler.handle()")]),s._v(" 的调用，以使得链条继续向后传递，也可以不调用，从而终止链条向后传递。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h3",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("职责链模式不保证每个中间件都有机会处理请求，因为中间件顺序的问题，后面中间件可能被前面的中间件阻断，因此当中间件之间存在不信任关系时，职责链模式并不能保证中间件调用的可靠性。")]),a("br"),a("p",[s._v("另外就是不要扩大设计模式的使用范围，对一堆对象的连续调用就没必要使用职责链模式，因为职责链适合处理对象数量不确定、是否处理请求由每个对象灵活决定的场景，而确定了对象数量以及是否调用的场景，就没必要使用职责链模式了。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("职责链模式是插件机制常用的设计模式，在事件机制、请求处理中有广泛的应用。")]),a("br"),a("p",[s._v("职责链模式还可以与组合模式组合使用，因为组合模式描述的是一种统一管理的树形结构，每个节点都可以把自己的父节点作为后继节点。实际上 dom 结构就是一种组合模式，事件冒泡就是在其基础上拓展的职责链模式。")])],2)],1)},n=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h1",{attrs:{id:"chain-of-responsibility-zhi-ze-lian-mo-shi"}},[s._v("Chain of Responsibility（职责链模式） "),a("a",{staticClass:"header-anchor",attrs:{href:"#chain-of-responsibility-zhi-ze-lian-mo-shi"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("意图：使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("几乎所有设计模式，在了解到它之前，笔者就已经在实战中遇到过了，因此设计模式的确是从实践中得出的真知。但另一方面，如果没有实战的理解，单看设计模式是枯燥的，而且难以理解的，因此大家学习设计模式时，要结合实际问题思考。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("中间件机制")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("通用帮助文案")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("JS 事件冒泡机制")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("其实 JS 事件冒泡机制就是个典型的职责链模式，因为任何 DOM 元素都可以监听比如 "),a("code",[s._v("onClick")]),s._v("，不仅可以自己响应事件，还可以使用 "),a("code",[s._v("event.stopPropagation()")]),s._v(" 阻止继续冒泡。")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("blockquote",[a("blockquote")])])}],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"7bf9":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("React")])]),a("h2",{attrs:{id:"react-gao-jie-zu-jian"}},[s._v("React 高阶组件 "),a("a",{staticClass:"header-anchor",attrs:{href:"#react-gao-jie-zu-jian"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读文章是："),a("a",{attrs:{href:"https://medium.com/@franleplant/react-higher-order-components-in-depth-cf9032ee6c3e"}},[s._v("React Higher Order Components in depth")])])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("高阶组件（ higher-order component ，HOC ）是 React 中复用组件逻辑的一种进阶技巧。它本身并不是 React 的 API，而是一种 React 组件的设计理念，众多的 React 库已经证明了它的价值，例如耳熟能详的 react-redux。")]),a("p",[s._v("高阶组件的概念其实并不难，我们能通过类比高阶函数迅速掌握。高阶函数是把函数作为参数传入到函数中并返回一个新的函数。这里我们把函数替换为组件，就是高阶组件了。")]),a("p",[a("code",[s._v("const EnhancedComponent = higherOrderComponent(WrappedComponent);")])]),a("p",[s._v("当然了解高阶组件的概念只是万里长征第一步，精读文章在阐述其概念与实现外，也强调了其重要性与局限性，以及与其他方案的比较，让我们一起来领略吧。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[s._v("高阶组件常见有两种实现方式，一种是 Props Proxy，它能够对 WrappedComponent 的 props 进行操作，提取 WrappedComponent state 以及使用其他元素来包裹 WrappedComponent。Props Proxy 作为一层代理，具有隔离的作用，因此传入 WrappedComponent 的 ref 将无法访问到其本身，需要在 Props Proxy 内完成中转，具体可参考以下代码，react-redux 也是这样实现的。")]),a("p",[s._v("此外各个 Props Proxy 的默认名称是相同的，需要根据 WrappedComponent 来进行不同命名。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("ppHOC")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("WrappedComponent")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("PP")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("React")]),s._v("."),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 实现 HOC 不同的命名")]),s._v("\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("static")]),s._v(" displayName = "),a("span",{staticClass:"hljs-string"},[s._v("`HOC("),a("span",{staticClass:"hljs-subst"},[s._v("${WrappedComponent.displayName}")]),s._v(")`")]),s._v(";\n\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getWrappedInstance")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".wrappedInstance;\n    }\n\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 实现 ref 的访问")]),s._v("\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("setWrappedInstance")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("ref")]),s._v(")")]),s._v(" {\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".wrappedInstance = ref;\n    }\n\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("render")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("WrappedComponent")]),s._v(" {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("...this.props")]),s._v(",\n        "),a("span",{staticClass:"hljs-attr"},[s._v("ref:")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("this.setWrappedInstance.bind")]),s._v("("),a("span",{staticClass:"hljs-attr"},[s._v("this")]),s._v("),\n      } />")])]),s._v("\n    }\n  }\n}\n\n@ppHOC\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Example")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("React")]),s._v("."),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("static")]),s._v(" displayName = "),a("span",{staticClass:"hljs-string"},[s._v("'Example'")]),s._v(";\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("handleClick")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" { ... }\n  ...\n}\n\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("App")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("React")]),s._v("."),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("handleClick")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".refs.example.getWrappedInstance().handleClick();\n  }\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("render")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" (\n      "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(">")]),s._v("\n        "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("button")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("onClick")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("{this.handleClick.bind(this)}")]),s._v(">")]),s._v("按钮"),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("button")]),s._v(">")]),s._v("\n        "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("Example")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("ref")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"example"')]),s._v(" />")]),s._v("\n      "),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(">")])]),s._v("  \n    );\n  }\n}\n")])]),a("p",[s._v("另一种是 Inheritance Inversion，HOC 类继承了 WrappedComponent，意味着可以访问到 WrappedComponent 的 state、props、生命周期和 render 等方法。如果在 HOC 中定义了与 WrappedComponent 同名方法，将会发生覆盖，就必须手动通过 super 进行调用了。通过完全操作 WrappedComponent 的 render 方法返回的元素树，可以真正实现渲染劫持。这种方案依然是继承的思想，对于 WrappedComponent 也有较强的侵入性，因此并不常见。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("ppHOC")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("WrappedComponent")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("ExampleEnhance")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("WrappedComponent")]),s._v(" ")]),s._v("{\n    ...\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("componentDidMount")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("super")]),s._v(".componentDidMount();\n    }\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("componentWillUnmount")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("super")]),s._v(".componentWillUnmount();\n    }\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("render")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n      ...\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("super")]),s._v(".render();\n    }\n  }\n}\n")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("本次提出独到观点的同学有： "),a("a",{attrs:{href:"https://www.zhihu.com/people/turbe-xue"}},[s._v("@monkingxue")]),s._v(" "),a("a",{attrs:{href:"https://github.com/alcat2008"}},[s._v("@alcat2008")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/BlackGanglion"}},[s._v("@淡苍")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/camsong"}},[s._v("@camsong")]),s._v("，精读由此归纳。")])]),a("p",[a("strong",[s._v("HOC 的适用范围")])]),a("p",[s._v("对比 HOC 范式 "),a("code",[s._v("compose(render)(state)")]),s._v(" 与父组件（Parent Component）的范式 "),a("code",[s._v("render(render(state))")]),s._v("，如果完全利用 HOC 来实现 React 的 implement，将操作与 view 分离，也未尝不可，但却不优雅。HOC 本质上是统一功能抽象，强调逻辑与 UI 分离。但在实际开发中，前端无法逃离 DOM ，而逻辑与 DOM 的相关性主要呈现 3 种关联形式：")]),a("ul",[a("li",[s._v("与 DOM 相关，建议使用父组件，类似于原生 HTML 编写")]),a("li",[s._v("与 DOM 不相关，如校验、权限、请求发送、数据转换这类，通过数据变化间接控制 DOM，可以使用 HOC 抽象")]),a("li",[s._v("交叉的部分，DOM 相关，但可以做到完全内聚，即这些 DOM 不会和外部有关联，均可")])]),a("p",[s._v("DOM 的渲染适合使用父组件，这是 React JSX 原生支持的方式，清晰易懂。最好是能封装成木偶组件（Dumb Component）。HOC 适合做 DOM 不相关又是多个组件共性的操作。如 Form 中，validator 校验操作就是纯数据操作的，放到了 HOC 中。但 validator 信息没有放到 HOC 中。但如果能把 Error 信息展示这些逻辑能够完全隔离，也可以放到 HOC 中（可结合下一小节 Form 具体实践详细了解）。 数据请求是另一类 DOM 不相关的场景，"),a("a",{attrs:{href:"https://github.com/heroku/react-refetch"}},[s._v("react-refetch")]),s._v(" 的实现就是使用了 HOC，做到了高效和优雅：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("connect("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("props")]),s._v(" =>")]),s._v(" ({\n  "),a("span",{staticClass:"hljs-attr"},[s._v("usersFetch")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("`/users?status="),a("span",{staticClass:"hljs-subst"},[s._v("${props.status}")]),s._v("&page="),a("span",{staticClass:"hljs-subst"},[s._v("${props.page}")]),s._v("`")]),s._v(",\n  "),a("span",{staticClass:"hljs-attr"},[s._v("userStatsFetch")]),s._v(": { "),a("span",{staticClass:"hljs-attr"},[s._v("url")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("`/users/stats`")]),s._v(", "),a("span",{staticClass:"hljs-attr"},[s._v("force")]),s._v(": "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(" }\n}))(UsersList)\n")])]),a("br"),a("p",[a("strong",[s._v("HOC 的具体实践")])]),a("p",[s._v("HOC 在真实场景下的运行非常多，之前笔者在 "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/22054582"}},[s._v("基于 Decorator 的组件扩展实践")]),s._v(" 一文中也提过使用高阶组件将更细粒度的组件组合成 Selector 与 Search。结合精读文章，这次让我们通过 Form 组件的抽象来表现 HOC 具有的良好扩展机制。")]),a("p",[s._v("Form 中会包含各种不同的组件，常见的有 Input、Selector、Checkbox 等等，也会有根据业务需求加入的自定义组件。Form 灵活多变，从功能上看，表单校验可能为单组件值校验，也可能为全表单值校验，可能为常规检验，比如：非空、输入限制，也可能需要与服务端配合，甚至需要根据业务特点进行定制。从 UI 上看，检验结果显示的位置，可能在组件下方，也可能是在组件右侧。")]),a("p",[s._v("直接裸写 Form，无疑是机械而又重复的。将 Form 中组件的 value 经过 validator，把 value，validator 产生的 error 信息储存到 state 或 redux store 中，然后在 view 层完成显示。这条路大家都是相同的，可以进行复用，只是我们面对的是不同的组件，不同的 validator，不同的 view 而已。对于 Form 而言，既要满足通用，又要满足部分个性化的需求，以往单纯的配置化只会让使用愈加繁琐，我们所需要抽象的是 Form 功能而非 UI，因此通过 HOC 针对 Form 的功能进行提取就成为了必然。")]),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/9314735/27116337-3f1f16a8-5103-11e7-8dc6-c7197e1b1eab.png",alt:"image"}})]),a("p",[s._v("至于 HOC 在 Form 上的具体实现，首先将表单中的组件（Input、Selector...）与相应 validator 与组件值回调函数名（trigger）传入 Decorator，将 validator 与 trigger 相绑定。Decorator 完成了各种不同组件与 Form 内置 Store 间 value 的传递、校验功能的抽象，即精读文章中提到 Props Proxy 方式的其中两种作用："),a("strong",[s._v("提取 state")]),s._v(" 与 "),a("strong",[s._v("操作 props")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("formFactoryFactory")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("{\n  validator,\n  trigger = "),a("span",{staticClass:"hljs-string"},[s._v("'onChange'")]),s._v(",\n  ...\n}")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("FormFactory")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("WrappedComponent")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Decorator")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("React")]),s._v("."),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n      "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getBind")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("trigger, validator")]),s._v(")")]),s._v(" {\n        ...\n      }\n      "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("render")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" newProps = {\n          ...this.props,\n          [trigger]: "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".getBind(trigger, validator),\n          ...\n        }\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("WrappedComponent")]),s._v(" {"),a("span",{staticClass:"hljs-attr"},[s._v("...newProps")]),s._v("} />")])]),s._v("\n      }\n    }\n  }\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 调用")]),s._v("\nformFactoryFactory({\n  "),a("span",{staticClass:"hljs-attr"},[s._v("validator")]),s._v(": "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("value")]),s._v(") =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" value !== "),a("span",{staticClass:"hljs-string"},[s._v("''")]),s._v(";\n  }\n})("),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("Input")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("placeholder")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v('"请输入..."')]),s._v(" />")])]),s._v(")\n")])]),a("p",[s._v("当然为了考虑个性化需求，Form Store 也向外暴露很多 API，可以直接获取和修改 value、error 的值。现在我们需要对一个表单的所有值提交到后端进行校验，根据后端返回，分别列出各项的校验错误信息，就需要借助相应项的 setError 去完成了。")]),a("p",[s._v("这里主要参考了 "),a("a",{attrs:{href:"https://github.com/react-component/form"}},[s._v("rc-form")]),s._v(" 的实现方式，有兴趣的读者可以阅读其源码。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" { createForm } "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'rc-form'")]),s._v(";\n\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Form")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("React")]),s._v("."),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n  submit = "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".props.form.validateFields("),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("error, value")]),s._v(") =>")]),s._v(" {\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(error, value);\n    });\n  }\n\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("render")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" { getFieldError, getFieldDecorator } = "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".props.form;\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" errors = getFieldError("),a("span",{staticClass:"hljs-string"},[s._v("'required'")]),s._v(");\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" (\n      "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(">")]),s._v("\n        {getFieldDecorator('required', {\n          rules: [{ required: true }],\n        })("),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("Input")]),s._v(" />")]),s._v(")}\n        {errors ? errors.join(',') : null}\n        "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("button")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("onClick")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("{this.submit}")]),s._v(">")]),s._v("submit"),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("button")]),s._v(">")]),s._v("\n      "),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(">")])]),s._v("\n    );\n  }\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" createForm()(Form);\n")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("React 始终强调组合优于继承的理念，期望通过复用小组件来构建大组件使得开发变得简单而又高效，与传统面向对象思想是截然不同的。高阶函数（HOC）的出现替代了原有 Mixin 侵入式的方案，对比隐式的 Mixin 或是继承，HOC 能够在 Devtools 中显示出来，满足抽象之余，也方便了开发与测试。当然，不可过度抽象是我们始终要秉持的原则。希望读者通过本次阅读与讨论，能结合自己具体的业务开发场景，获得一些启发。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},8118:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("Facade")])]),a("h2",{attrs:{id:"wai-guan-mo-shi"}},[s._v("外观模式 "),a("a",{staticClass:"header-anchor",attrs:{href:"#wai-guan-mo-shi"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("Facade（外观模式）属于结构型模式，是一种日常开发中经常被使用到的设计模式。")])]),a("p",[a("strong",[s._v("意图：为子系统中的一组接口提供一个一致的界面，Facade 模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h3",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h3",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("图书管理员")])]),a("p",[s._v("图书馆是一个非常复杂的系统，虽然图书按照一定规则摆放，但也只有内部人员比较清楚，作为一位初次来的访客，想要快速找到一本书，最好的办法是直接问图书管理员，而不是先了解这个图书馆的设计，因为你可能要来回在各个楼宇间奔走，借书的流程可能也比较长。")]),a("br"),a("p",[s._v("图书管理员就起到了简化图书馆子系统复杂度的作用，我们只要凡事询问图书管理员即可，而不需要关心他是如何与图书馆内部系统打交道的。")]),a("br"),a("p",[a("strong",[s._v("最多跑一次便民服务")])]),a("p",[s._v("浙江省推出的最多跑一次服务非常方便，很多办事流程都简化了，无论是证件办理还是业务受理，几乎只要跑一次，而必须要持续几天的流程也会通过手机短信或者 App 操作完成后续流程。")]),a("br"),a("p",[s._v("这就相当于外观模式，因为政府系统内部的办事流程可能没有太大变化，但通过抽象出 Facade（外观），让普通市民可以直接与便民办事处连接，而不需要在车管所与驾校之间来回奔波，背后的事情没有少，只是便民办事处帮你做了。")]),a("br"),a("p",[a("strong",[s._v("Iphone 快捷指令功能")])]),a("p",[s._v("手机的 App 非常多，而我们需要了解每个功能在哪个 App 上才能运用自如，而快捷指令功能可以将 App 的某些功能单独提取出来，形成一套新的功能组，我们可以只接触到 “拍照” “付款” “计算”，而不用管背后是调用了支付宝还是微信、系统内置摄像机还是其他摄像 App，也不用关心这个 App 内部功能的入口在哪里，这些对接都在快接指令中自动完成。")]),a("br"),a("p",[s._v("快捷指令也是一种外观模式。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h3",{attrs:{id:"yi-tu-jie-shi-1"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi-1"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("意图：为子系统中的一组接口提供一个一致的界面，Facade 模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。")])]),a("p",[s._v("为降低一个拥有多个接口的子系统内部复杂性，我们需要一个外观来屏蔽内部的复杂性，因此外观模式就是定义一个高层接口，这个接口直连子系统的内部实现，但调用这个高层接口的人不需要关心子系统内部的实现，这样，对于不想了解子系统内部实现的人来说，提高了易用度。")]),a("br"),a("p",[s._v("当然如果想要深度定制，就可以绕过外观模式，直接使用子系统提供的类，所以说并不是有了外观模式就必须通过外观调用，而是根据实际需要判断使用哪种调用方式。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h3",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("img",{attrs:{width:"600",src:"https://img.alicdn.com/tfs/TB1j9gZ3.T1gK0jSZFrXXcNCXXa-1082-412.png"}}),a("p",[s._v("可以看到，Facade 直接指向子系统中的类，"),a("strong",[s._v("而子系统的类不会反向指向 Facade")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h3",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("下面例子使用 typescript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-comment"},[s._v("// 假设一个子系统是三个类结合使用的，为了抽象而解耦开了")]),s._v("\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("A")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("constructor")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("b: B")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".b = b\n  }\n}\n\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("B")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("constructor")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("c: C")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".c = c\n  }\n}\n\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("C")]),s._v(" ")]),s._v("{\n  \n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 它们组合成了一种常用功能，我们可以使用外观模式屏蔽子类的细节直接使用")]),s._v("\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Compile")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("run")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" parser = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" A("),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" B("),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" C))\n    parser.run()\n  }\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" compile = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Compile()\ncompile.run()\n")])]),a("p",[s._v("这样我们只要知道 "),a("code",[s._v("Compile")]),s._v(" 类就可以了，而不需要了解背后的 "),a("code",[s._v("A")]),s._v(" "),a("code",[s._v("B")]),s._v(" "),a("code",[s._v("C")]),s._v(" 以及其组合关系。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h3",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("外观模式并不适合于所有场景，当子系统足够易用时，再使用外观模式就是画蛇添足。")]),a("br"),a("p",[s._v("另外，当系统难以抽象出通用功能时，外观模式的设计可能也无所适从，因为设计的高层接口可能适用范围很窄，此时外观模式的意义就比较小。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("其实抽象工厂模式也可以代替外观模式，来实现隐藏子类具体实现的效果，但外观模式描述更具有通用性。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"90e7":function(s,t,a){s.exports=a.p+"img/gitflow.90c02324.png"},"93e5":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("Flyweight")])]),a("h2",{attrs:{id:"xiang-yuan-mo-shi"}},[s._v("享元模式 "),a("a",{staticClass:"header-anchor",attrs:{href:"#xiang-yuan-mo-shi"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("Flyweight（享元模式）属于结构型模式，是一种共享对象的设计模式。")])]),a("p",[a("strong",[s._v("意图：运用共享技术有效地支持大量细粒度的对象。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h3",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),a("br"),a("p",[a("strong",[s._v("富文本编辑器的字母对象")])]),a("p",[s._v("富文本编辑器在英文环境下，其中的文本由大量字母组成，为了便于做统一的格式化、计算等处理，需要将每个字母都存储为对象，但这样存储的代价太大了。")]),a("br"),a("p",[s._v("已知英文字母一共 26 个，所以文档中存在大量重复使用的字母，而每个字母除了位置信息外，其它信息都是相同且只读的，那么有办法降低富文本场景巨大的字母对象数量吗？")]),a("br"),a("p",[a("strong",[s._v("网盘存储")])]),a("p",[s._v("当我们上传一部电影时，有时候几十 GB 的内容不到一秒就上传完了，这是网盘提示你，“已采用极速技术秒传”，你会不会心生疑惑，这么厉害的技术为什么不能每次都生效？")]),a("br"),a("p",[s._v("另外，网盘存储时，同一部电影可能都会存放在不同用户的不同文件夹中，而且电影文件又特别巨大，和富文本类似，电影文件也只有存放位置是不同的，而其余内容都特别巨大且只读，有什么办法能优化存储呢？")]),a("br"),a("p",[a("strong",[s._v("大型多人游戏")])]),a("p",[s._v("玩多人游戏时，为了防止外挂，一般对象的创建与计算是在服务器完成的，那如何保证一个玩家拾取物品后，另一个玩家看到的物品会消失？")]),a("br"),a("p",[s._v("其实道理已经不言而喻了，虽然在不同客户端之间，游戏对象是相互独立的，但在一局游戏中，所有玩家的对象在服务器是共享的。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h3",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[s._v("“共享” 就是享元模式的精髓，将那些大量的，具有很多内部状态而外部状态很少的对象进行共享，就是享元模式的使用方式。")]),a("br"),a("p",[a("strong",[s._v("意图：运用共享技术有效地支持大量细粒度的对象。")])]),a("br"),a("p",[s._v("共享技术可以理解为缓存，当一个对象创建后，再次访问相同对象时，就不再创建新的对象了，而只有在访问没有被缓存过的对象时，才创建新对象，并立即缓存起来。")]),a("br"),a("p",[s._v("这样做可以有效支持大量细粒度的对象，在富文本例子中，"),a("strong",[s._v("无数的字母就是大量细粒度对象")]),s._v("，在网盘存储中，"),a("strong",[s._v("电影文件就是大量细粒度对象")]),s._v("，在大型多人游戏中，"),a("strong",[s._v("每局游戏内存在大量细粒度对象")]),s._v("。")]),a("br"),a("p",[s._v("这些细粒度对象都拥有相同的特征：")]),a("ul",[a("li",[s._v("量特别大，这个很容易理解。")]),a("li",[s._v("具有大量内部状态，且不随着客户端的不同而改变。 "),a("ul",[a("li",[s._v("富文本的字母，不因为展示到不同语句中而发生变化，变化的只有状态；电影文件，不因为放在不同用户的文件夹中而对电影内容产生变化，变化的只有属于哪些用户，放在哪些文件夹里；多人游戏中，同一把武器对象，不因为有多个人的电脑独立运行而拥有更多的弹药，变化的只有在哪些客户端被访问。")])])]),a("li",[s._v("具有少量外部状态，甚至没有外部状态。在上面已经解释了，字母的位置、电影的位置、游戏对象的客户端都是外部状态，这些外部状态相比于其内部状态来说，大小微乎其微，且方便分离存储。")])]),a("p",[s._v("遇到这种情况，我们就可以将对象内部状态共享，外部状态独立存储，从而节省大量空间。")]),a("br"),a("p",[s._v("尤其是对于网盘的场景，承诺给用户 2 TB 的存储空间，这个用户看到其他人分享了 100 个电影，就点击 “下载到我的网盘”，"),a("strong",[s._v("此时虽然占用了自己 1 TB 的网盘空间，但实际上网盘运营商并没有增加 1 TB 的存储空间，实际可能增加了 1kb 的存储空间，记录了存储位置")]),s._v("，这就是网盘鸡贼的地方，并不占用空间的内容，却占用了用户真金白银购买的存储空间。")]),a("br"),a("p",[s._v("当然，这就是享元模式的价值，对网盘公司来说，价值巨大，对用户来说，没有价值。所以享元模式的价值体现在全局，比如对整个富文本编辑器来说，减少了巨量字母对象数量，但对于每一个字母对象而言，并没有任何优化。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h3",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("img",{attrs:{width:"800",src:"https://img.alicdn.com/tfs/TB1KMTY4UY1gK0jSZFMXXaWcVXa-1420-886.png"}}),a("p",[s._v("对于 Client 而言，下图描述了如何共享 Flyweight：")]),a("img",{attrs:{width:"800",src:"https://img.alicdn.com/tfs/TB1JwLL4QL0gK0jSZFtXXXQCXXa-1460-542.png"}}),a("ul",[a("li",[s._v("Flyweight: 共享接口，通过这个接口可以操作对象的外部状态。")]),a("li",[s._v("ConcreteFlyweight: 实现 Flyweight 接口的对象，这个对象是可被共享的。")]),a("li",[s._v("UnsharedConcreteFlyweight: 不被共享的对象，因为在享元模式中，实际上并不是所有对象都可以被共享。")]),a("li",[s._v("FlyweightFactory: 创建并管理 Flyweight 对象，通过其返回的 Flyweight 对象，如果已创建，则会返回之前创建的那个，没有的话才会创建一个新的。")]),a("li",[s._v("Client: 使用 Flyweight 的客户端。")])]),a("p",[s._v("通过第二个图可以明显看到，两个不同的 Client 持有了相同 "),a("code",[s._v("aConcreteFlyweight")]),s._v(" 引用。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h3",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("下面例子使用 typescript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("FlyweightFactory")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("getFlyWeight")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("key")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".flyweight[key]) {\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".flyweight[key]\n    }\n\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" flyweight = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Flyweight()\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".flyweight[key] = flyweight\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" flyweight\n  }\n}\n")])]),a("br"),a("p",[a("code",[s._v("FlyweightFactory")]),s._v(" 提供的 "),a("code",[s._v("getFlyWeight")]),s._v(" 方法，实际上是按照 "),a("code",[s._v("key")]),s._v(" 对 "),a("code",[s._v("flyweight")]),s._v(" 实例进行缓存，相同 "),a("code",[s._v("key")]),s._v(" 下只存储一个 "),a("code",[s._v("flyweight")]),s._v(" 实例。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h3",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("如果细粒度对象不多，则没必要使用享元模式。")]),a("br"),a("p",[s._v("另外，就算细粒度对象很多，如果对象内部状态并不多，主要都是外部状态，那么享元模式就起不到什么作用了，"),a("strong",[s._v("因为享元模式通过共享对象，只能节省内部状态，而不能节省外部状态。")])]),a("br"),a("p",[s._v("另外，如果享元模式映射到的共享对象数量并没有比原始对象少出数量级关系，使用的意义也不大。比如富文本编辑器的例子，对于英文来说，一共就 26 个字母，那么 1 万字的文章优化比例是 10000:26，但对于中文文章而言，文字实例本身就很多，可能 1 万字的文章中，汉字去重后依然有 3000 个，那么优化比例就是 10000:3000，此时享元模式的意义就没那么大了。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("享元模式的本质就是尽可能的共享对象，特别适用于存在大量细粒度对象，而这些对象内部状态特别多，外部状态较少的场景。")]),a("br"),a("p",[s._v("对于云存储来说，享元模式是必须使用的，因为云存储的场景决定了，存在大量细粒度文件对象，而存在大量只读的文件，就非常适合共享一个对象，每个用户存储的只是引用。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},"94d5":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("Prototype")])]),a("h2",{attrs:{id:"yuan-xing-mo-shi"}},[s._v("原型模式 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yuan-xing-mo-shi"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("Prototype（原型模式）属于创建型模式，既不是工厂也不是直接 New，而是以拷贝的方式创建对象。")])]),a("p",[a("strong",[s._v("意图：用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h2",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),a("br"),a("p",[a("strong",[s._v("做钥匙")])]),a("p",[s._v("很显然，为了房屋安全，要尽量做到一把钥匙只能开一扇门，每把钥匙结构都多多少少不一样，却又很相似，做钥匙的人按照你给的钥匙一模一样做一个新的，这属于什么模式呢？")]),a("br"),a("p",[a("strong",[s._v("两种状态表")])]),a("p",[s._v("当网站做不停机维护时，假设维护内容是给每个高级会员账户多打 100 元现金，现在需要改数据库表。已知：")]),a("ol",[a("li",[s._v("数据库表有几千万条数据，其中高级会员有几千位，为了方便调用已经缓存在中间层了，且数据库对应 ID 更新后对应缓存也会更新。")]),a("li",[s._v("几千条数据修改语句执行完需要几分钟，这几分钟内无法接受用户数据不同步的问题。")])]),a("p",[s._v("一种常见的做法是，我们生成一份高级会员列表的拷贝，代替数据库缓存的结果，数据库只要读到对应会员 ID 就从拷贝列表中获取，数据表新增一列状态标志，操作完后这个拷贝移除，更新高级会员缓存。")]),a("p",[s._v("但是如何生成高级会员列表拷贝呢？如果直接从几千万条用户数据中重新查询，会有较高的数据库查询成本。")]),a("br"),a("p",[a("strong",[s._v("模版组件")])]),a("p",[s._v("通用搭建系统中，我们可以将某个拖拽到页面的区块设置为 “模版”，这个模版可以作为一个新组件被重新拖拽到任意为止，实例化任意次。实际上，这是一种分段式复制粘贴，你会如何实现这个功能呢？")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h2",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[s._v("解决上面问题的办法都很简单，就是基于已有对象进行复制即可，效率比 New 一个，或者工厂模式都要高。")]),a("br"),a("p",[a("strong",[s._v("意图：用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。")])]),a("br"),a("p",[s._v("所谓原型实例，就是被选为拷贝模版的那个对象，比如做钥匙例子中，你给老板的样板钥匙；两种状态表中的已有缓存高级会员列表；模版组件中选中的那个组件。然后，通过拷贝这些原型创建你想要的对象即可。")]),a("br"),a("p",[s._v("我们抽象思考一下，如果每把钥匙都遵循 "),a("code",[s._v("Prototype")]),s._v(" 接口，提供了 "),a("code",[s._v("clone()")]),s._v(" 方法以复制自己，那就可以快速复制任意一把钥匙。钥匙工厂可无法解决每把钥匙不一样的问题，我们要的就是和某个钥匙一模一样的副本，复制一份钥匙最简单。")]),a("br"),a("p",[s._v("高级会员状态表例子中，查询数据库的成本是高昂的，但如果仅仅复制已经查询好的列表，时间可以忽略不计，因此最经济的方案是直接复制，而不是通过工厂模式重新连接数据库并执行查询。")]),a("br"),a("p",[s._v("模版组件更是如此，我们根本没有定义那么多组件实例的基类，只要每个组件提供一个 "),a("code",[s._v("clone()")]),s._v(" 函数，就可以立即复制任意组件实例，这无疑是最经济实惠的方案。")]),a("br"),a("p",[s._v("看到这里，你应该知道了，原型模式的精髓是对象要提供 "),a("code",[s._v("clone()")]),s._v(" 方法，而这个 "),a("code",[s._v("clone()")]),s._v(" 方法实现难度有高有低。")]),a("br"),a("p",[s._v("一般来说，原型模式的拷贝建议用深拷贝，毕竟新对象最好不要影响到旧对象，"),a("strong",[s._v("但是在深拷贝性能问题较大的情况下，可以考虑深浅拷贝结合，也就是将在新对象中，不会修改的数据使用浅拷贝，可能被修改的数据使用深拷贝。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h2",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("img",{attrs:{width:"800",src:"https://img.alicdn.com/tfs/TB1roQlZWL7gK0jSZFBXXXZZpXa-1328-596.png"}}),a("p",[a("code",[s._v("Client")]),s._v(" 是发出指令的客户端，"),a("code",[s._v("Prototype")]),s._v(" 是一个接口，描述了一个对象如何克隆自身，比如必须拥有 "),a("code",[s._v("clone()")]),s._v(" 方法，而 "),a("code",[s._v("ConcretePrototype")]),s._v(" 就是克隆具体的实现，不同对象有不同的实现来拷贝自身。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h2",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("下面例子使用 typescript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("implements")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Prototype")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-comment"},[s._v("/**\n   * 组件名\n   */")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" name: "),a("span",{staticClass:"hljs-built_in"},[s._v("string")]),s._v("\n  "),a("span",{staticClass:"hljs-comment"},[s._v("/**\n   * 组件版本\n   */")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" version: "),a("span",{staticClass:"hljs-built_in"},[s._v("string")]),s._v("\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("/**\n   * 拷贝自身\n   */")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" clone = "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 构造函数省略了，大概就是传递 name 和 version")]),s._v("\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Component("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".name, "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".version)\n  }\n}\n")])]),a("br"),a("p",[s._v("我们可以看到，实现了 "),a("code",[s._v("Prototype")]),s._v(" 接口的 "),a("code",[s._v("Component")]),s._v(" 必须实现 "),a("code",[s._v("clone")]),s._v(" 方法，这样任意组件在执行复制时，就可以直接调用 "),a("code",[s._v("clone")]),s._v(" 函数，而不用关心每个组件不同的实现方式了。")]),a("br"),a("p",[s._v("从这就能看出，原型模式与 Factory 与 Builder 模式还是有类似之处的，在隐藏创建对象细节这一点上。")]),a("br"),a("p",[s._v("使用的时候，我们就可以这样创建一个新对象：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" newComponent = oldComponent.clone()\n")])]),a("br"),a("p",[s._v("这里有两个注意点：一般来说，"),a("strong",[s._v("如果要二次修改生成的对象，不建议给 "),a("code",[s._v("clone")]),s._v(" 函数加参数，因为这样会导致接口的不一致。")]),s._v(" 我们可以为对象实例提供一些 "),a("code",[s._v("set")]),s._v(" 函数进行二次修改。另外，"),a("code",[s._v("clone")]),s._v(" 函数要考虑性能，就像前面说过的，可以考虑深浅拷贝结合的方式，同时要注意当对象存在引用关系甚至循环引用时，甚至不一定能实现拷贝函数。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h2",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("每个设计模式必有弊端，但就像每一期都说的，有弊端不代表设计模式不好用，而是指在某种场景喜爱存在问题，我们只要规避这些场景，在合理的场景使用对应设计模式即可。")]),a("br"),a("p",[s._v("原型模式的弊端：")]),a("ul",[a("li",[s._v("每个类都要实现 "),a("code",[s._v("clone")]),s._v(" 方法，对类的实现是有一定入侵的，要修改已有类时，违背了开闭原则。")]),a("li",[s._v("当类又调用了其他对象时，如果要实现深拷贝，需要对应对象也实现 "),a("code",[s._v("clone")]),s._v(" 方法，整体链路可能会特别长，实现起来比较麻烦。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h2",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("原型模式一般与工厂模式搭配使用，一般工厂方法接收一个符合原型模式的实例，就可以调用它的 "),a("code",[s._v("clone")]),s._v(" 函数创建返回新对象啦。")]),s._v(" 代码大概是这样：")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-comment"},[s._v("// buildComponentFactory 内部通过 targetComponent.clone() 创建对象，而不是 New 或者调用其他工厂函数。")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" newComponent = buildComponentFactory("),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Component())\n")])]),a("br"),a("p",[s._v("最后来一张图快速理解原型模式：")]),a("img",{attrs:{width:"600",src:"https://img.alicdn.com/tfs/TB1hBIdm6MZ7e4jSZFOXXX7epXa-982-486.png"}})],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},9888:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[s._m(0),a("hr"),a("p",[s._v("按钮用于传递用户触摸时会触发的操作")]),s._m(1),s._m(2),a("demo-block",{scopedSlots:s._u([{key:"highlight",fn:function(){return[a("pre",{pre:!0},[a("code",{pre:!0,attrs:{class:"html"}},[s._v('<at-button type="primary">主要按钮</at-button>\n<at-button>次要按钮</at-button>\n<at-button type="text">文字按钮</at-button>\n')])])]},proxy:!0}])},[a("div",[a("p",[s._v("使用"),a("code",[s._v("type")]),s._v("、"),a("code",[s._v("plain")]),s._v("、"),a("code",[s._v("round")]),s._v("和"),a("code",[s._v("circle")]),s._v("属性来定义 Button 的样式。")])]),a("template",{slot:"source"},[a("element-demo0")],1)],2),s._m(3),s._m(4),a("demo-block",{scopedSlots:s._u([{key:"highlight",fn:function(){return[a("pre",{pre:!0},[a("code",{pre:!0,attrs:{class:"html"}},[s._v('<at-button type="primary" disabled>主要按钮</at-button>\n<at-button hollow disabled>次要按钮</at-button>\n<at-button type="text" disabled>文字按钮</at-button>\n')])])]},proxy:!0}])},[a("template",{slot:"source"},[a("element-demo1")],1)],2),s._m(5),a("p",[s._v("带有色彩倾向的按钮能给用户带来操作提示")]),a("demo-block",{scopedSlots:s._u([{key:"highlight",fn:function(){return[a("pre",{pre:!0},[a("code",{pre:!0,attrs:{class:"html"}},[s._v('<div class="row">\n  <at-button hollow>默认按钮</at-button>\n  <at-button type="primary" hollow>主要按钮</at-button>\n  <at-button type="success" hollow>成功按钮</at-button>\n  <at-button type="error" hollow>危险按钮</at-button>\n  <at-button type="warning" hollow>警告按钮</at-button>\n  <at-button type="info" hollow>信息按钮</at-button>\n</div>\n<div class="row">\n  <at-button>默认按钮</at-button>\n  <at-button type="primary">主要按钮</at-button>\n  <at-button type="success">成功按钮</at-button>\n  <at-button type="error">危险按钮</at-button>\n  <at-button type="warning">警告按钮</at-button>\n  <at-button type="info">信息按钮</at-button>\n</div>\n')])])]},proxy:!0}])},[a("template",{slot:"source"},[a("element-demo2")],1)],2),s._m(6),s._m(7),a("demo-block",{scopedSlots:s._u([{key:"highlight",fn:function(){return[a("pre",{pre:!0},[a("code",{pre:!0,attrs:{class:"html"}},[s._v('<div class="row">\n  <at-button icon="icon-download">下载资源</at-button>\n  <at-button icon="icon-user-plus">添加用户</at-button>\n  <at-button icon="icon-edit"></at-button>\n  <at-button type="primary" icon="icon-search"></at-button>\n</div>\n<div class="row">\n  <at-button icon="icon-edit" circle></at-button>\n  <at-button type="primary" icon="icon-search" circle></at-button>\n</div>\n')])])]},proxy:!0}])},[a("template",{slot:"source"},[a("element-demo3")],1)],2),s._m(8),s._m(9),a("demo-block",{scopedSlots:s._u([{key:"highlight",fn:function(){return[a("pre",{pre:!0},[a("code",{pre:!0,attrs:{class:"html"}},[s._v("<at-button loading>加载中</at-button>\n<at-button loading></at-button>\n<at-button loading circle></at-button>\n")])])]},proxy:!0}])},[a("template",{slot:"source"},[a("element-demo4")],1)],2),s._m(10),s._m(11),a("demo-block",{scopedSlots:s._u([{key:"highlight",fn:function(){return[a("pre",{pre:!0},[a("code",{pre:!0,attrs:{class:"html"}},[s._v('<at-button-group>\n  <at-button>左</at-button>\n  <at-button>中</at-button>\n  <at-button>右</at-button>\n</at-button-group>\n<br>\n<at-button-group>\n  <at-button icon="icon-edit" title="编辑"></at-button>\n  <at-button icon="icon-copy" title="复制"></at-button>\n  <at-button icon="icon-download" title="下载"></at-button>\n</at-button-group>\n<br>\n<at-button-group>\n  <at-button><i class="icon icon-chevron-left"></i>后退</at-button>\n  <at-button>往前<i class="icon icon-chevron-right"></i></at-button>\n</at-button-group>\n')])])]},proxy:!0}])},[a("template",{slot:"source"},[a("element-demo5")],1)],2),s._m(12),s._m(13),a("demo-block",{scopedSlots:s._u([{key:"highlight",fn:function(){return[a("pre",{pre:!0},[a("code",{pre:!0,attrs:{class:"html"}},[s._v('<div>\n  <at-button type="primary" size="large">变大按钮</at-button>\n  <at-button type="primary">正常按钮</at-button>\n  <at-button type="primary" size="small">变小按钮</at-button>\n  <at-button type="primary" size="smaller">超小按钮</at-button>\n</div>\n<div style="margin-top: 8px;">\n  <at-button type="primary" size="large" icon="icon-search" circle></at-button>\n  <at-button type="primary" icon="icon-search" circle></at-button>\n  <at-button type="primary" size="small" icon="icon-search" circle></at-button>\n  <at-button type="primary" size="smaller" icon="icon-search" circle></at-button>\n</div>\n<div style="margin-top: 8px;">\n  <at-button-group size="large">\n    <at-button>左</at-button>\n    <at-button>中</at-button>\n    <at-button>右</at-button>\n  </at-button-group>\n  <at-button-group>\n    <at-button>左</at-button>\n    <at-button>中</at-button>\n    <at-button>右</at-button>\n  </at-button-group>\n  <at-button-group size="small">\n    <at-button>左</at-button>\n    <at-button>中</at-button>\n    <at-button>右</at-button>\n  </at-button-group>\n</div>\n')])])]},proxy:!0}])},[a("template",{slot:"source"},[a("element-demo6")],1)],2),s._m(14),s._m(15),s._m(16),s._m(17)],1)},n=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h1",{attrs:{id:"button-an-niu"}},[s._v("Button 按钮 "),a("a",{staticClass:"header-anchor",attrs:{href:"#button-an-niu"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"ji-chu-an-niu"}},[s._v("基础按钮 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ji-chu-an-niu"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("基础按钮分三种："),a("code",[s._v("主按钮（实心）")]),s._v(" 、 "),a("code",[s._v("次按钮（空心）")]),s._v(" 、 "),a("code",[s._v("文字按钮")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"bu-ke-yong-zhuang-tai-an-niu"}},[s._v("不可用状态按钮 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bu-ke-yong-zhuang-tai-an-niu"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("添加属性 "),a("code",[s._v("disabled")]),s._v(" 禁用按钮")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"dai-yan-se-qing-xiang-de-an-niu"}},[s._v("带颜色倾向的按钮 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-yan-se-qing-xiang-de-an-niu"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"tu-biao-wen-zi-an-niu"}},[s._v("图标文字按钮 "),a("a",{staticClass:"header-anchor",attrs:{href:"#tu-biao-wen-zi-an-niu"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("如需要在在按钮中添加图标，可设置 "),a("code",[s._v("icon")]),s._v(" 属性，或者自行在 "),a("code",[s._v("Button")]),s._v(" 中内联 "),a("code",[s._v("icon")]),s._v("。通过 "),a("code",[s._v("icon")]),s._v(" 属性设置的图标，位置固定在文本的前面。")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"jia-zai-zhong-an-niu"}},[s._v("加载中按钮 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jia-zai-zhong-an-niu"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("可通过添加 "),a("code",[s._v("loading")]),s._v(" 属性，使按钮处于加载中状态")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"zu-he-an-niu"}},[s._v("组合按钮 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zu-he-an-niu"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("可以将多个按钮放进 "),a("code",[s._v("AtButtonGroup")]),s._v(" 中形成一个组合按钮")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"an-niu-chi-cun"}},[s._v("按钮尺寸 "),a("a",{staticClass:"header-anchor",attrs:{href:"#an-niu-chi-cun"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("按钮提供四种尺寸：大、中、小、超小，可通过 "),a("code",[s._v("size")]),s._v(" 属性配置；"),a("br"),s._v(" 组合按钮提供三种尺寸：大、中、小"),a("br"),s._v(" 若不设置 "),a("code",[s._v("size")]),s._v(" 属性，则默认为中等大小")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"button-can-shu"}},[s._v("Button 参数 "),a("a",{staticClass:"header-anchor",attrs:{href:"#button-can-shu"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("table",{staticClass:"table"},[a("thead",[a("tr",[a("th",[s._v("参数")]),a("th",[s._v("说明")]),a("th",[s._v("类型")]),a("th",[s._v("可选值")]),a("th",[s._v("默认值")])])]),a("tbody",[a("tr",[a("td",[s._v("type")]),a("td",[s._v("按钮的类型")]),a("td",[s._v("String")]),a("td",[a("code",[s._v("default")]),s._v(", "),a("code",[s._v("primary")]),s._v(", "),a("code",[s._v("success")]),s._v(", "),a("code",[s._v("error")]),s._v(", "),a("code",[s._v("warning")]),s._v(", "),a("code",[s._v("info")]),s._v(", "),a("code",[s._v("text")])]),a("td",[s._v("-")])]),a("tr",[a("td",[s._v("nativeType")]),a("td",[s._v("原生按钮的类型")]),a("td",[s._v("String")]),a("td",[s._v("-")]),a("td",[a("code",[s._v("button")])])]),a("tr",[a("td",[s._v("size")]),a("td",[s._v("按钮的大小")]),a("td",[s._v("String")]),a("td",[a("code",[s._v("large")]),s._v(", "),a("code",[s._v("small")]),s._v(", "),a("code",[s._v("smaller")])]),a("td",[s._v("-")])]),a("tr",[a("td",[s._v("hollow")]),a("td",[s._v("是否为空心按钮")]),a("td",[s._v("Boolean")]),a("td",[s._v("-")]),a("td",[s._v("false")])]),a("tr",[a("td",[s._v("icon")]),a("td",[s._v("按钮的图标类名，填入图标的 "),a("code",[s._v("classname")])]),a("td",[s._v("String")]),a("td",[s._v("见文档 "),a("code",[s._v("Icon 图标")])]),a("td",[s._v("-")])]),a("tr",[a("td",[s._v("loading")]),a("td",[s._v("设置按钮的载入状态")]),a("td",[s._v("Boolean")]),a("td",[s._v("-")]),a("td",[s._v("false")])]),a("tr",[a("td",[s._v("circle")]),a("td",[s._v("设置圆形图标按钮")]),a("td",[s._v("Boolean")]),a("td",[s._v("-")]),a("td",[s._v("false")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"button-group-can-shu"}},[s._v("Button Group 参数 "),a("a",{staticClass:"header-anchor",attrs:{href:"#button-group-can-shu"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("table",{staticClass:"table"},[a("thead",[a("tr",[a("th",[s._v("参数")]),a("th",[s._v("说明")]),a("th",[s._v("类型")]),a("th",[s._v("可选值")]),a("th",[s._v("默认值")])])]),a("tbody",[a("tr",[a("td",[s._v("size")]),a("td",[s._v("按钮的大小")]),a("td",[s._v("String")]),a("td",[a("code",[s._v("large")]),s._v(", "),a("code",[s._v("small")])]),a("td",[s._v("正常大小")])]),a("tr",[a("td",[s._v("gap")]),a("td",[s._v("按钮间隔")]),a("td",[s._v("Number")]),a("td",[s._v("-")]),a("td",[s._v("-1")])])])])}];a("b64b"),a("a4d3"),a("4de4"),a("d3b7"),a("e439"),a("159b"),a("dbb4");function l(s,t,a){return t in s?Object.defineProperty(s,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):s[t]=a,s}function i(s,t){var a=Object.keys(s);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(s);t&&(e=e.filter((function(t){return Object.getOwnPropertyDescriptor(s,t).enumerable}))),a.push.apply(a,e)}return a}function r(s){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(s,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(s,t,Object.getOwnPropertyDescriptor(a,t))}))}return s}var v={name:"component-doc",components:{"element-demo0":function(){var s=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",[a("at-button",{attrs:{type:"primary"}},[s._v("主要按钮")]),s._v(" "),a("at-button",[s._v("次要按钮")]),s._v(" "),a("at-button",{attrs:{type:"text"}},[s._v("文字按钮")])],1)},t=[],a={};return r({render:s,staticRenderFns:t},a)}(),"element-demo1":function(){var s=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",[a("at-button",{attrs:{type:"primary",disabled:""}},[s._v("主要按钮")]),s._v(" "),a("at-button",{attrs:{hollow:"",disabled:""}},[s._v("次要按钮")]),s._v(" "),a("at-button",{attrs:{type:"text",disabled:""}},[s._v("文字按钮")])],1)},t=[],a={};return r({render:s,staticRenderFns:t},a)}(),"element-demo2":function(){var s=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",[a("div",{staticClass:"row"},[a("at-button",{attrs:{hollow:""}},[s._v("默认按钮")]),s._v(" "),a("at-button",{attrs:{type:"primary",hollow:""}},[s._v("主要按钮")]),s._v(" "),a("at-button",{attrs:{type:"success",hollow:""}},[s._v("成功按钮")]),s._v(" "),a("at-button",{attrs:{type:"error",hollow:""}},[s._v("危险按钮")]),s._v(" "),a("at-button",{attrs:{type:"warning",hollow:""}},[s._v("警告按钮")]),s._v(" "),a("at-button",{attrs:{type:"info",hollow:""}},[s._v("信息按钮")])],1),s._v(" "),a("div",{staticClass:"row"},[a("at-button",[s._v("默认按钮")]),s._v(" "),a("at-button",{attrs:{type:"primary"}},[s._v("主要按钮")]),s._v(" "),a("at-button",{attrs:{type:"success"}},[s._v("成功按钮")]),s._v(" "),a("at-button",{attrs:{type:"error"}},[s._v("危险按钮")]),s._v(" "),a("at-button",{attrs:{type:"warning"}},[s._v("警告按钮")]),s._v(" "),a("at-button",{attrs:{type:"info"}},[s._v("信息按钮")])],1)])},t=[],a={};return r({render:s,staticRenderFns:t},a)}(),"element-demo3":function(){var s=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",[a("div",{staticClass:"row"},[a("at-button",{attrs:{icon:"icon-download"}},[s._v("下载资源")]),s._v(" "),a("at-button",{attrs:{icon:"icon-user-plus"}},[s._v("添加用户")]),s._v(" "),a("at-button",{attrs:{icon:"icon-edit"}}),s._v(" "),a("at-button",{attrs:{type:"primary",icon:"icon-search"}})],1),s._v(" "),a("div",{staticClass:"row"},[a("at-button",{attrs:{icon:"icon-edit",circle:""}}),s._v(" "),a("at-button",{attrs:{type:"primary",icon:"icon-search",circle:""}})],1)])},t=[],a={};return r({render:s,staticRenderFns:t},a)}(),"element-demo4":function(){var s=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",[a("at-button",{attrs:{loading:""}},[s._v("加载中")]),s._v(" "),a("at-button",{attrs:{loading:""}}),s._v(" "),a("at-button",{attrs:{loading:"",circle:""}})],1)},t=[],a={};return r({render:s,staticRenderFns:t},a)}(),"element-demo5":function(){var s=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",[a("at-button-group",[a("at-button",[s._v("左")]),s._v(" "),a("at-button",[s._v("中")]),s._v(" "),a("at-button",[s._v("右")])],1),s._v(" "),a("br"),s._v(" "),a("at-button-group",[a("at-button",{attrs:{icon:"icon-edit",title:"编辑"}}),s._v(" "),a("at-button",{attrs:{icon:"icon-copy",title:"复制"}}),s._v(" "),a("at-button",{attrs:{icon:"icon-download",title:"下载"}})],1),s._v(" "),a("br"),s._v(" "),a("at-button-group",[a("at-button",[a("i",{staticClass:"icon icon-chevron-left"}),s._v("后退")]),s._v(" "),a("at-button",[s._v("往前"),a("i",{staticClass:"icon icon-chevron-right"})])],1)],1)},t=[],a={};return r({render:s,staticRenderFns:t},a)}(),"element-demo6":function(){var s=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",[a("div",[a("at-button",{attrs:{type:"primary",size:"large"}},[s._v("变大按钮")]),s._v(" "),a("at-button",{attrs:{type:"primary"}},[s._v("正常按钮")]),s._v(" "),a("at-button",{attrs:{type:"primary",size:"small"}},[s._v("变小按钮")]),s._v(" "),a("at-button",{attrs:{type:"primary",size:"smaller"}},[s._v("超小按钮")])],1),s._v(" "),a("div",{staticStyle:{"margin-top":"8px"}},[a("at-button",{attrs:{type:"primary",size:"large",icon:"icon-search",circle:""}}),s._v(" "),a("at-button",{attrs:{type:"primary",icon:"icon-search",circle:""}}),s._v(" "),a("at-button",{attrs:{type:"primary",size:"small",icon:"icon-search",circle:""}}),s._v(" "),a("at-button",{attrs:{type:"primary",size:"smaller",icon:"icon-search",circle:""}})],1),s._v(" "),a("div",{staticStyle:{"margin-top":"8px"}},[a("at-button-group",{attrs:{size:"large"}},[a("at-button",[s._v("左")]),s._v(" "),a("at-button",[s._v("中")]),s._v(" "),a("at-button",[s._v("右")])],1),s._v(" "),a("at-button-group",[a("at-button",[s._v("左")]),s._v(" "),a("at-button",[s._v("中")]),s._v(" "),a("at-button",[s._v("右")])],1),s._v(" "),a("at-button-group",{attrs:{size:"small"}},[a("at-button",[s._v("左")]),s._v(" "),a("at-button",[s._v("中")]),s._v(" "),a("at-button",[s._v("右")])],1)],1)])},t=[],a={};return r({render:s,staticRenderFns:t},a)}()}},_=v,c=a("2877"),o=Object(c["a"])(_,e,n,!1,null,null,null);t["default"]=o.exports},"9d0e":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("section",{staticClass:"content element-doc"},[e("header-block",[e("template",{slot:"title"},[e("p",[s._v("部署")])]),e("h2",{attrs:{id:"bu-shu"}},[s._v("部署 "),e("a",{staticClass:"header-anchor",attrs:{href:"#bu-shu"}},[s._v("§")])]),e("br"),e("p",[e("em",[s._v("Vue前端打包部署到sping boot中")])]),e("p",[e("em",[s._v("文档版本：v1.0")])]),e("p",[e("em",[s._v("修订时间：2019年07月22日")])]),e("p",[e("em",[s._v("范围： 上海苏州研发侧所有前端产品(集成到spring boot中)")])]),e("table",{staticClass:"table"},[e("thead",[e("tr",[e("th",[s._v("版本")]),e("th",[s._v("修改人")]),e("th",[s._v("修订内容")]),e("th",[s._v("时间")])])]),e("tbody",[e("tr",[e("td",[s._v("v1.0")]),e("td",[s._v("王来彬")]),e("td",[s._v("第一版发布")]),e("td",[s._v("2018-07-22")])])])]),e("blockquote",[e("p",[e("strong",[s._v("特别说明：")])]),e("ul",[e("li",[s._v("以静态项目作为参考[前端vue-cli3+后台sping boot]")])])])],2),e("header-block",[e("template",{slot:"title"},[e("p",[s._v("流程")])]),e("h3",{attrs:{id:"liu-cheng"}},[s._v("流程 "),e("a",{staticClass:"header-anchor",attrs:{href:"#liu-cheng"}},[s._v("§")])]),e("ul",[e("li",[e("h6",[s._v("前端工程目录如下:")]),e("blockquote",[e("p",[e("img",{attrs:{src:a("4218"),alt:"前端工程目录"}})])])])]),e("br"),e("ul",[e("li",[e("h6",[s._v("后台工程目录如下:")]),e("blockquote",[e("p",[e("img",{attrs:{src:a("bf2a"),alt:"后端工程目录"}})])])])]),e("br"),e("ul",[e("li",[e("h6",[s._v("前后端整合:")]),e("blockquote",[e("p",[s._v("在项目整合的过程中，直接将前端开发好后将build构建好的dist下static中的文件拷贝到spring boot的resource的static下，index.html则直接拷贝到spring boot的resource的static下。我们这样就可以愉快的启动sping boot，输入网址就可以愉快的访问啦！但是通过上面的整合后会出现两个比较大的问题。")])]),e("p",[e("img",{attrs:{src:a("535e"),alt:"整合"}})])])]),e("br"),e("ul",[e("li",[e("h6",[s._v("前后端整合核心问题处理:")])])]),e("p",[s._v("1. 无法正常访问静态资源 。")]),e("blockquote",[e("p",[s._v("解决该问题问题，我们必须重新指定spring boot的静态资源处理前缀，代码：")])]),e("pre",[e("code",{staticClass:"hljs language-java"},[e("span",{staticClass:"hljs-meta"},[s._v("@Configuration")]),s._v("\n"),e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-class"},[e("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("WebAppConfigurer")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("WebMvcConfigurerAdapter")]),s._v(" ")]),s._v("{\n    "),e("span",{staticClass:"hljs-meta"},[s._v("@Override")]),s._v("\n    "),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("void")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("addResourceHandlers")]),e("span",{staticClass:"hljs-params"},[s._v("(ResourceHandlerRegistry registry)")]),s._v(" ")]),s._v("{\n        registry.addResourceHandler("),e("span",{staticClass:"hljs-string"},[s._v('"/holmeslog/**"')]),s._v(").addResourceLocations("),e("span",{staticClass:"hljs-string"},[s._v('"file:"')]),s._v(" + SystemConfig.getProperty("),e("span",{staticClass:"hljs-string"},[s._v('"holmeslog.path"')]),s._v("));\n        registry.addResourceHandler("),e("span",{staticClass:"hljs-string"},[s._v('"/processorlog/**"')]),s._v(").addResourceLocations("),e("span",{staticClass:"hljs-string"},[s._v('"file:"')]),s._v(" + SystemConfig.getProperty("),e("span",{staticClass:"hljs-string"},[s._v('"processorlog.path"')]),s._v("));\n        registry.addResourceHandler("),e("span",{staticClass:"hljs-string"},[s._v('"/installtar/**"')]),s._v(").addResourceLocations("),e("span",{staticClass:"hljs-string"},[s._v('"file:"')]),s._v(" + SystemConfig.getProperty("),e("span",{staticClass:"hljs-string"},[s._v('"installtar.path"')]),s._v("));\n        registry.addResourceHandler("),e("span",{staticClass:"hljs-string"},[s._v('"/static/**"')]),s._v(").addResourceLocations("),e("span",{staticClass:"hljs-string"},[s._v('"classpath:/static/"')]),s._v("); "),e("span",{staticClass:"hljs-comment"},[s._v("//重新指定spring boot的静态资源处理前缀")]),s._v("\n        "),e("span",{staticClass:"hljs-keyword"},[s._v("super")]),s._v(".addResourceHandlers(registry);\n    }\n}\n")])]),e("br"),e("p",[s._v("2. vue router路由的路径无法正常解析 。")]),e("blockquote",[e("p",[s._v("对vue的路由的路径做rewrite，交给router来处理，而不是spring boot自己处理，rewrite时可以考虑路由的路径统一增加后缀，然后在spring boot中编写过滤拦截特定后缀来做请求转发交给vue的路由处理。前端路增加fe，如")])]),e("pre",[e("code",{staticClass:"hljs language-javascript"},[e("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("default")]),s._v(" {\n  "),e("span",{staticClass:"hljs-attr"},[s._v("path")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'/fe/regular'")]),s._v(",\n  "),e("span",{staticClass:"hljs-attr"},[s._v("component")]),s._v(": "),e("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("("),e("span",{staticClass:"hljs-string"},[s._v("'@/views/empty'")]),s._v("),\n  "),e("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'regular'")]),s._v(",\n  "),e("span",{staticClass:"hljs-attr"},[s._v("meta")]),s._v(": { "),e("span",{staticClass:"hljs-attr"},[s._v("title")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'规则配置'")]),s._v(", "),e("span",{staticClass:"hljs-attr"},[s._v("icon")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'guize'")]),s._v(" },\n  "),e("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": [{\n    "),e("span",{staticClass:"hljs-attr"},[s._v("path")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'find'")]),s._v(",\n    "),e("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'regular-find'")]),s._v(",\n    "),e("span",{staticClass:"hljs-attr"},[s._v("meta")]),s._v(": { "),e("span",{staticClass:"hljs-attr"},[s._v("hidden")]),s._v(": "),e("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(", "),e("span",{staticClass:"hljs-attr"},[s._v("title")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'发现规则'")]),s._v(", "),e("span",{staticClass:"hljs-attr"},[s._v("icon")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'right'")]),s._v(" },\n    "),e("span",{staticClass:"hljs-attr"},[s._v("component")]),s._v(": "),e("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("("),e("span",{staticClass:"hljs-string"},[s._v("'@/views/regular/find'")]),s._v(")\n  }, \n  ...... \n  {\n    "),e("span",{staticClass:"hljs-attr"},[s._v("path")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'mask-edit/:id'")]),s._v(",\n    "),e("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'regular-mask-edit'")]),s._v(",\n    "),e("span",{staticClass:"hljs-attr"},[s._v("meta")]),s._v(": { "),e("span",{staticClass:"hljs-attr"},[s._v("title")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'编辑脱敏规则'")]),s._v(", "),e("span",{staticClass:"hljs-attr"},[s._v("icon")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'right'")]),s._v(", "),e("span",{staticClass:"hljs-attr"},[s._v("hidden")]),s._v(": "),e("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(", "),e("span",{staticClass:"hljs-attr"},[s._v("breadcrumb")]),s._v(": [{ "),e("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'regular-mask'")]),s._v(", "),e("span",{staticClass:"hljs-attr"},[s._v("title")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'规则配置'")]),s._v(" }, { "),e("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'regular-mask'")]),s._v(", "),e("span",{staticClass:"hljs-attr"},[s._v("title")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'脱敏规则'")]),s._v(" }] },\n    "),e("span",{staticClass:"hljs-attr"},[s._v("component")]),s._v(": "),e("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("("),e("span",{staticClass:"hljs-string"},[s._v("'@/views/regular/mask-edit.js'")]),s._v(")\n  }]\n}\n\n")])]),e("blockquote",[e("p",[s._v("后台改变，如")])]),e("pre",[e("code",{staticClass:"hljs language-java"},[s._v("Application."),e("span",{staticClass:"hljs-function"},[s._v("java\n\n    "),e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" FilterRegistrationBean "),e("span",{staticClass:"hljs-title"},[s._v("someFilterRegistration")]),e("span",{staticClass:"hljs-params"},[s._v("()")]),s._v(" ")]),s._v("{\n        FilterRegistrationBean registration = "),e("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" FilterRegistrationBean();\n        registration.setFilter(XssFilter());\n        registration.addUrlPatterns("),e("span",{staticClass:"hljs-string"},[s._v('"/*"')]),s._v(");\n        registration.addInitParameter("),e("span",{staticClass:"hljs-string"},[s._v('"paramName"')]),s._v(", "),e("span",{staticClass:"hljs-string"},[s._v('"paramValue"')]),s._v(");\n        registration.addInitParameter(XssFilter.REWRITE_TO,"),e("span",{staticClass:"hljs-string"},[s._v('"/index.html"')]),s._v(");  "),e("span",{staticClass:"hljs-comment"},[s._v("// 重点")]),s._v("\n        registration.addInitParameter(XssFilter.REWRITE_PATTERNS, "),e("span",{staticClass:"hljs-string"},[s._v('"/fe/*"')]),s._v(");  "),e("span",{staticClass:"hljs-comment"},[s._v("// 重点")]),s._v("\n        registration.setName("),e("span",{staticClass:"hljs-string"},[s._v('"XssFilter"')]),s._v(");\n        "),e("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" registration;\n    }\n\nXssFilter.java\n\n"),e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-class"},[e("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("XssFilter")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("implements")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("Filter")]),s._v(" ")]),s._v("{\n\n    "),e("span",{staticClass:"hljs-comment"},[s._v("//需要rewrite的目的地址")]),s._v("\n    "),e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("static")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("final")]),s._v(" String REWRITE_TO ="),e("span",{staticClass:"hljs-string"},[s._v('"rewriteUrl"')]),s._v(";\n    "),e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("static")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("final")]),s._v(" String REWRITE_PATTERNS = "),e("span",{staticClass:"hljs-string"},[s._v('"rewritePatterns"')]),s._v(";\n    "),e("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" Set<String> urlPatterns = "),e("span",{staticClass:"hljs-keyword"},[s._v("null")]),s._v(";"),e("span",{staticClass:"hljs-comment"},[s._v("//配置url通配符")]),s._v("\n    "),e("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" String rewriteTo = "),e("span",{staticClass:"hljs-keyword"},[s._v("null")]),s._v(";\n    "),e("span",{staticClass:"hljs-meta"},[s._v("@Override")]),s._v("\n    "),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("void")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("init")]),e("span",{staticClass:"hljs-params"},[s._v("(FilterConfig filterConfig)")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("throws")]),s._v(" ServletException ")]),s._v("{\n        rewriteTo = filterConfig.getInitParameter(REWRITE_TO);\n        String exceptUrlString = filterConfig.getInitParameter(REWRITE_PATTERNS);\n        "),e("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(StringUtil.isEmpty(exceptUrlString)) {\n            urlPatterns = Collections.emptySet();\n        }"),e("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n            urlPatterns = Collections.unmodifiableSet("),e("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" HashSet<>(Arrays.asList(exceptUrlString.split("),e("span",{staticClass:"hljs-string"},[s._v('";"')]),s._v(","),e("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("))));\n        }\n    }\n\n    "),e("span",{staticClass:"hljs-meta"},[s._v("@Override")]),s._v("\n    "),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("void")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("doFilter")]),e("span",{staticClass:"hljs-params"},[s._v("(ServletRequest request, ServletResponse response, FilterChain chain)")]),s._v("\n            "),e("span",{staticClass:"hljs-keyword"},[s._v("throws")]),s._v(" IOException, ServletException ")]),s._v("{\n        MHttpServletRequest xssRequest = "),e("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" MHttpServletRequest((HttpServletRequest) request);\n        HttpServletRequest request1 = xssRequest;\n        String servletPath = request1.getServletPath();\n        String context = request1.getContextPath();\n        "),e("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(isMatches(urlPatterns, servletPath)) {\n            request.getRequestDispatcher(context+ "),e("span",{staticClass:"hljs-string"},[s._v('"/"')]),s._v("+ rewriteTo).forward(xssRequest,response);\n        } "),e("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(servletPath.contains("),e("span",{staticClass:"hljs-string"},[s._v('"main"')]),s._v(")) {"),e("span",{staticClass:"hljs-comment"},[s._v("//兼容处理main和main#")]),s._v("\n            request.getRequestDispatcher(context+ "),e("span",{staticClass:"hljs-string"},[s._v('"/"')]),s._v("+ rewriteTo).forward(xssRequest,response);\n        }"),e("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n            chain.doFilter(xssRequest, response);\n        }\n\n    }\n\n    "),e("span",{staticClass:"hljs-meta"},[s._v("@Override")]),s._v("\n    "),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("void")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("destroy")]),e("span",{staticClass:"hljs-params"},[s._v("()")]),s._v(" ")]),s._v("{\n    }\n\n    "),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("boolean")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("isMatches")]),e("span",{staticClass:"hljs-params"},[s._v("(Set<String> patterns, String url)")]),s._v(" ")]),s._v("{\n        "),e("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("("),e("span",{staticClass:"hljs-keyword"},[s._v("null")]),s._v(" == patterns) {\n            "),e("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("false")]),s._v(";\n        }\n        "),e("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" (String str: patterns) {\n            "),e("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(str.endsWith("),e("span",{staticClass:"hljs-string"},[s._v('"/*"')]),s._v(")) {\n                String name = str.substring("),e("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", str.length()-"),e("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(");\n                "),e("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(url.contains(name)) {\n                    "),e("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("true")]),s._v(";\n                }\n            }"),e("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v("  {\n                Pattern pattern = Pattern.compile(str);\n                "),e("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(pattern.matcher(url).matches()) {\n                    "),e("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("true")]),s._v(";\n                }\n            }\n        }\n        "),e("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("false")]),s._v(";\n    }\n}\n")])]),e("p",[s._v("后端拦截到带有/fe的都交给router来处理!")]),e("br"),e("br"),e("p",[s._v("另外一种实现：spring boot 的接口都增加标识，拦截spring boot的接口标识，非接口统一交给前端来处理。")]),e("p",[s._v("1. 无法正常访问静态资源 。")]),e("pre",[e("code",[s._v("同上\n")])]),e("p",[s._v("2. vue router路由不做任何改动，只变动后端代理的地方 。")]),e("pre",[e("code",{staticClass:"hljs language-java"},[e("span",{staticClass:"hljs-meta"},[s._v('@WebFilter(filterName = "ApiFilter", urlPatterns = "/*")')]),s._v("\n"),e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-class"},[e("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("ApiFilter")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("implements")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("Filter")]),s._v(" ")]),s._v("{\n\n    "),e("span",{staticClass:"hljs-comment"},[s._v("/**\n     * 需要rewrite的目的地址\n     */")]),s._v("\n    "),e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("static")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("final")]),s._v(" String REWRITE_TO ="),e("span",{staticClass:"hljs-string"},[s._v('"/api"')]),s._v(";\n    "),e("span",{staticClass:"hljs-meta"},[s._v("@Override")]),s._v("\n    "),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("void")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("init")]),e("span",{staticClass:"hljs-params"},[s._v("(FilterConfig filterConfig)")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("throws")]),s._v(" ServletException ")]),s._v("{\n    }\n\n    "),e("span",{staticClass:"hljs-meta"},[s._v("@Override")]),s._v("\n    "),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("void")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("doFilter")]),e("span",{staticClass:"hljs-params"},[s._v("(ServletRequest request, ServletResponse response, FilterChain chain)")]),s._v("\n            "),e("span",{staticClass:"hljs-keyword"},[s._v("throws")]),s._v(" IOException, ServletException ")]),s._v("{\n        MHttpServletRequest xssRequest = "),e("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" MHttpServletRequest((HttpServletRequest) request);\n        HttpServletRequest request1 = xssRequest;\n        String servletPath = request1.getServletPath();\n        "),e("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(!StringUtils.isEmpty(servletPath) && !servletPath.contains(REWRITE_TO) ) {\n            request.getRequestDispatcher(servletPath).forward(xssRequest,response);\n        } "),e("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n            chain.doFilter(xssRequest, response);\n        }\n    }\n\n    "),e("span",{staticClass:"hljs-meta"},[s._v("@Override")]),s._v("\n    "),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),e("span",{staticClass:"hljs-keyword"},[s._v("void")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("destroy")]),e("span",{staticClass:"hljs-params"},[s._v("()")]),s._v(" ")]),s._v("{\n    }\n}\n")])]),e("br"),e("h4",[s._v("重点：")]),e("pre",[e("code",[s._v("   > 上面这是最简单的合并方式，但是如果作为工程级的项目开发，并不推荐使用手工合并，也不推荐将前端代码构建后提交到spring boot的resouce下。好的方式应该是保持前后端完全独立开发代码，项目代码互不影响，编写脚本在构建spring boot时触发前端构建并编写自动化脚本将前端webpack构建好的资源拷贝到spring boot下再进行jar的打包，最后就得到了一个完全包含前后端的spring boot项目了。【在复制的时候，不要进行替换或者覆盖，最好的方式，把原有的的文件进行删除之后在进行复制】\n")])]),e("br"),e("h6",[s._v("前端路由使用的是history模式")])],2),e("header-block",[e("template",{slot:"title"},[e("p",[s._v("文档")])]),e("h3",{attrs:{id:"wen-dang"}},[s._v("文档 "),e("a",{staticClass:"header-anchor",attrs:{href:"#wen-dang"}},[s._v("§")])]),e("br"),e("h6",[s._v("ps:建议大家在各个产品，严格遵守规范，以便后期的维护以及代码的健壮性等。")]),e("h6",[s._v("如果文档有更好的补充和好的建议，欢迎联系@王来彬")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},a4d3:function(s,t,a){"use strict";var e=a("23e7"),n=a("da84"),l=a("d066"),i=a("2ba4"),r=a("c65b"),v=a("e330"),_=a("c430"),c=a("83ab"),o=a("4930"),p=a("d039"),h=a("1a2d"),d=a("e8b5"),u=a("1626"),m=a("861d"),C=a("3a9b"),j=a("d9b5"),g=a("825a"),b=a("7b0b"),f=a("fc6a"),y=a("a04b"),w=a("577e"),k=a("5c6c"),x=a("7c73"),S=a("df75"),z=a("241c"),A=a("057f"),T=a("7418"),E=a("06cf"),O=a("9bf2"),P=a("d1e7"),I=a("f36a"),B=a("6eeb"),R=a("5692"),q=a("f772"),X=a("d012"),F=a("90e3"),M=a("b622"),D=a("e538"),N=a("746f"),W=a("d44e"),H=a("69f3"),$=a("b727").forEach,L=q("hidden"),K="Symbol",G="prototype",J=M("toPrimitive"),U=H.set,V=H.getterFor(K),Z=Object[G],Y=n.Symbol,Q=Y&&Y[G],ss=n.TypeError,ts=n.QObject,as=l("JSON","stringify"),es=E.f,ns=O.f,ls=A.f,is=P.f,rs=v([].push),vs=R("symbols"),_s=R("op-symbols"),cs=R("string-to-symbol-registry"),os=R("symbol-to-string-registry"),ps=R("wks"),hs=!ts||!ts[G]||!ts[G].findChild,ds=c&&p((function(){return 7!=x(ns({},"a",{get:function(){return ns(this,"a",{value:7}).a}})).a}))?function(s,t,a){var e=es(Z,t);e&&delete Z[t],ns(s,t,a),e&&s!==Z&&ns(Z,t,e)}:ns,us=function(s,t){var a=vs[s]=x(Q);return U(a,{type:K,tag:s,description:t}),c||(a.description=t),a},ms=function(s,t,a){s===Z&&ms(_s,t,a),g(s);var e=y(t);return g(a),h(vs,e)?(a.enumerable?(h(s,L)&&s[L][e]&&(s[L][e]=!1),a=x(a,{enumerable:k(0,!1)})):(h(s,L)||ns(s,L,k(1,{})),s[L][e]=!0),ds(s,e,a)):ns(s,e,a)},Cs=function(s,t){g(s);var a=f(t),e=S(a).concat(ys(a));return $(e,(function(t){c&&!r(gs,a,t)||ms(s,t,a[t])})),s},js=function(s,t){return void 0===t?x(s):Cs(x(s),t)},gs=function(s){var t=y(s),a=r(is,this,t);return!(this===Z&&h(vs,t)&&!h(_s,t))&&(!(a||!h(this,t)||!h(vs,t)||h(this,L)&&this[L][t])||a)},bs=function(s,t){var a=f(s),e=y(t);if(a!==Z||!h(vs,e)||h(_s,e)){var n=es(a,e);return!n||!h(vs,e)||h(a,L)&&a[L][e]||(n.enumerable=!0),n}},fs=function(s){var t=ls(f(s)),a=[];return $(t,(function(s){h(vs,s)||h(X,s)||rs(a,s)})),a},ys=function(s){var t=s===Z,a=ls(t?_s:f(s)),e=[];return $(a,(function(s){!h(vs,s)||t&&!h(Z,s)||rs(e,vs[s])})),e};if(o||(Y=function(){if(C(Q,this))throw ss("Symbol is not a constructor");var s=arguments.length&&void 0!==arguments[0]?w(arguments[0]):void 0,t=F(s),a=function(s){this===Z&&r(a,_s,s),h(this,L)&&h(this[L],t)&&(this[L][t]=!1),ds(this,t,k(1,s))};return c&&hs&&ds(Z,t,{configurable:!0,set:a}),us(t,s)},Q=Y[G],B(Q,"toString",(function(){return V(this).tag})),B(Y,"withoutSetter",(function(s){return us(F(s),s)})),P.f=gs,O.f=ms,E.f=bs,z.f=A.f=fs,T.f=ys,D.f=function(s){return us(M(s),s)},c&&(ns(Q,"description",{configurable:!0,get:function(){return V(this).description}}),_||B(Z,"propertyIsEnumerable",gs,{unsafe:!0}))),e({global:!0,wrap:!0,forced:!o,sham:!o},{Symbol:Y}),$(S(ps),(function(s){N(s)})),e({target:K,stat:!0,forced:!o},{for:function(s){var t=w(s);if(h(cs,t))return cs[t];var a=Y(t);return cs[t]=a,os[a]=t,a},keyFor:function(s){if(!j(s))throw ss(s+" is not a symbol");if(h(os,s))return os[s]},useSetter:function(){hs=!0},useSimple:function(){hs=!1}}),e({target:"Object",stat:!0,forced:!o,sham:!c},{create:js,defineProperty:ms,defineProperties:Cs,getOwnPropertyDescriptor:bs}),e({target:"Object",stat:!0,forced:!o},{getOwnPropertyNames:fs,getOwnPropertySymbols:ys}),e({target:"Object",stat:!0,forced:p((function(){T.f(1)}))},{getOwnPropertySymbols:function(s){return T.f(b(s))}}),as){var ws=!o||p((function(){var s=Y();return"[null]"!=as([s])||"{}"!=as({a:s})||"{}"!=as(Object(s))}));e({target:"JSON",stat:!0,forced:ws},{stringify:function(s,t,a){var e=I(arguments),n=t;if((m(t)||void 0!==s)&&!j(s))return d(t)||(t=function(s,t){if(u(n)&&(t=r(n,this,s,t)),!j(t))return t}),e[1]=t,i(as,null,e)}})}if(!Q[J]){var ks=Q.valueOf;B(Q,J,(function(s){return r(ks,this)}))}W(Y,K),X[L]=!0},abe0:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("CSS Animations vs Web Animations API")])]),a("h2",{attrs:{id:"css-animations-vs-web-animations-api"}},[s._v("CSS Animations vs Web Animations API "),a("a",{staticClass:"header-anchor",attrs:{href:"#css-animations-vs-web-animations-api"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读文章 "),a("a",{attrs:{href:"https://css-tricks.com/css-animations-vs-web-animations-api/"}},[s._v("CSS Animations vs Web Animations API | CSS-Tricks")])])]),a("blockquote",[a("p",[s._v("译文地址 "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/27867539?refer=FrontendMagazine"}},[s._v("CSS Animation 与 Web Animation API 之争")])])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i3/O1CN01O88KwS1bcAxfZER9N_!!6000000003485-2-tps-1438-583.png",alt:"logo",width:"500"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("前端是一个很神奇的工种，一个合格的前端至少要熟练的使用 3 个技能，html、css 和 javascript。在传统的前端开发领域它们三个大多时候是各司其职，分别负责布局、样式以及交互。而在当代的前端开发中，由于多种原因 javascript 做的事情愈来愈多，大有一统全栈之势。服务端的 nodejs，让前端同学可以用自己的语言来开发 server。即便是在前端，我们现在好像也很少写 html 了，在 React 中出来了 JSX，在其他的开发体系中也有与之类似的前端模板代替了 html。我们好像也很少写 css 了，sass、less、stylus 等预处理器以及 css in js 出现。此外，很多 css 领域的的工作也可以通过 javascript 以更加优雅和高效的方式实现。今天我们来一起聊聊 CSS 动画与 WEB Animation API 的优劣。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[s._v("JavaScript 规范确实借鉴了很多社区内的优秀类库，通过原生实现的方式提供更好的性能。WAAPI 提供了与 jQuery 类似的语法，同时也做了很多补充，使得其更加的强大。同时 W3C 官方也为开发者提供了 "),a("a",{attrs:{href:"https://github.com/web-animations/web-animations-js/tree/master"}},[s._v("web-animations/web-animations-js")]),s._v(" polyfill。下面简单回顾下文章内容：")]),a("br"),a("p",[s._v("WAAPI 提供了很简洁明了的，我们可以直接在 dom 元素上直接调用 animate 函数：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" element = "),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".querySelector("),a("span",{staticClass:"hljs-string"},[s._v("'.animate-me'")]),s._v(");\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" animation = element.animate(keyframes, "),a("span",{staticClass:"hljs-number"},[s._v("1000")]),s._v(");\n")])]),a("br"),a("p",[s._v("第一个参数是一个对象数组，每个对象表示动画中的一帧：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" keyframes = [\n  { "),a("span",{staticClass:"hljs-attr"},[s._v("opacity")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(" },\n  { "),a("span",{staticClass:"hljs-attr"},[s._v("opacity")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(" }\n];\n")])]),a("br"),a("p",[s._v("这与 css 中的 keyframe 定义类似：")]),a("pre",[a("code",{staticClass:"hljs language-css"},[a("span",{staticClass:"hljs-number"},[s._v("0%")]),s._v(" {\n  "),a("span",{staticClass:"hljs-attribute"},[s._v("opacity")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n}\n"),a("span",{staticClass:"hljs-number"},[s._v("100%")]),s._v(" {\n  "),a("span",{staticClass:"hljs-attribute"},[s._v("opacity")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(";\n}\n")])]),a("br"),a("p",[s._v("第二个参数是 duration，表示动画的时间。同时也支持在第二个参数中传入配置项来指定缓动方式、循环次数等。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" options = {\n  "),a("span",{staticClass:"hljs-attr"},[s._v("iterations")]),s._v(": "),a("span",{staticClass:"hljs-literal"},[s._v("Infinity")]),s._v(", "),a("span",{staticClass:"hljs-comment"},[s._v("// 动画的重复次数，默认是 1")]),s._v("\n  "),a("span",{staticClass:"hljs-attr"},[s._v("iterationStart")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", "),a("span",{staticClass:"hljs-comment"},[s._v("// 用于指定动画开始的节点，默认是 0")]),s._v("\n  "),a("span",{staticClass:"hljs-attr"},[s._v("delay")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", "),a("span",{staticClass:"hljs-comment"},[s._v("// 动画延迟开始的毫秒数，默认 0")]),s._v("\n  "),a("span",{staticClass:"hljs-attr"},[s._v("endDelay")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", "),a("span",{staticClass:"hljs-comment"},[s._v("// 动画结束后延迟的毫秒数，默认 0")]),s._v("\n  "),a("span",{staticClass:"hljs-attr"},[s._v("direction")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'alternate'")]),s._v(", "),a("span",{staticClass:"hljs-comment"},[s._v("// 动画的方向 默认是按照一个方向的动画，alternate 则表示交替")]),s._v("\n  "),a("span",{staticClass:"hljs-attr"},[s._v("duration")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("700")]),s._v(", "),a("span",{staticClass:"hljs-comment"},[s._v("// 动画持续时间，默认 0")]),s._v("\n  "),a("span",{staticClass:"hljs-attr"},[s._v("fill")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'forwards'")]),s._v(", "),a("span",{staticClass:"hljs-comment"},[s._v("// 是否在动画结束时回到元素开始动画前的状态")]),s._v("\n  "),a("span",{staticClass:"hljs-attr"},[s._v("easing")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'ease-out'")]),s._v(", "),a("span",{staticClass:"hljs-comment"},[s._v('// 缓动方式，默认 "linear"')]),s._v("\n};\n")])]),a("br"),a("p",[s._v("有了这些配置项，基本可以满足开发者的动画需求。同时，文中也提到了在 WAAPI 中很多专业术语与 CSS 变量有所不同，不过这些变化也更显简洁。")]),a("p",[s._v("在 dom 元素上调用 animate 函数之后返回 animation 对象，或者通过 ele.getAnimation 方法获取 dom 上的 animation 对象。借此开发者可以通过 promise 和 event 两种方式对动画进行操作：")]),a("p",[a("strong",[s._v("1. event 方式")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("myAnimation.onfinish = "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  element.remove();\n}\n")])]),a("p",[a("strong",[s._v("1. promise 方式")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("myAnimation.finished.then("),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v("\n  element.remove())\n")])]),a("br"),a("p",[s._v("通过这种方式相对 dom 事件获取更加的简洁优雅。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("参与本次精度的同学主要来自 "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/FrontendMagazine"}},[s._v("前端外刊评论 - 知乎专栏")]),s._v(" 的留言，该部分主要由文章评论总结而出。")]),a("p",[a("strong",[s._v("WAAPI 优雅简洁")])]),a("p",[s._v("web animation 的 api 设计优雅而又全面。文中比对了常见的 WAAPI 与 CSS Animation 对照关系，我们可以看到 WAAPI 更加简洁，而且语法上也更加容易为开发者接受。确实，在写一些复杂的动画逻辑时，需要灵活控制性强的接口。我们可以看到，在处理串连多个动画、截取完整动画的一部分时更加方便。如果非要说有什么劣势，个人在开发中感觉 keyframe 的很多只都只能使用字符串，不过这也是将 css 写在 js 中最常见的一种方式了。")]),a("p",[a("strong",[s._v("低耦合")])]),a("p",[s._v("CSS 动画中，如果需要控制动画或者过渡的开始或结束只能通过相应的 dom 事件来监听，并且在回调函数中操作，这也是受 CSS 本身语言特性约束所致。也就是说很多情况下，想要完成一个动画需要结合 CSS 和 JS 来共同完成。使用 WAAPI 则有 promise 和 event 两种方式与监听 dom 事件相对应。从代码可维护性和完整性上看 WAAPI 有自身语言上的优势。")]),a("p",[a("strong",[s._v("兼容性和流畅度")])]),a("p",[s._v("兼容性上 WAAPI 常用方法已经兼容了大部分现代的浏览器。如果想现在就玩玩 WAAPI，可以使用官方提供的 polyfill。而 CSS 动画我们也用了很久，基本作为一种在现代浏览器中提升体验的方式，对于老旧的浏览器只能用一些优雅的降级方案。至于流畅度的问题，文中也提到性能与 CSS 动画一般，而且提供了性能优化的方案。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("目前看来，CSS 动画可以做到的，使用 WAAPI 同样可以实现。至于浏览器支持问题，WAAPI 尚需要 polyfill 支持，不过 CSS 动画也同样存在兼容性问题。可能现在新的 API 的接受度还不够，但正如文章结尾处所说：『现有的规范和实现看起来更像是一项伟大事业的起点。』")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},abfc:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("React contex")])]),a("h2",{attrs:{id:"ru-he-an-quan-di-shi-yong-react-context"}},[s._v("如何安全地使用 React context "),a("a",{staticClass:"header-anchor",attrs:{href:"#ru-he-an-quan-di-shi-yong-react-context"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读文章是："),a("a",{attrs:{href:"https://medium.com/@mweststrate/how-to-safely-use-react-context-b7e343eff076"}},[s._v("How to safely use React context")])])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("在 React 源码中，context 始终存在，却在 React 0.14 的官方文档中才有所体现。在目前最新的官方文档中，仍不建议使用 context，也表明 context 是一个实验性的 API，在未来 React 版本中可能被更改。那么哪些场景下需要用到 context，而哪些情况下应该避免使用，context 又有什么坑呢？让我们一起来讨论一下。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[s._v("React context 可以把数据直接传递给组件树的底层组件，而无需中间组件的参与。Redux 作者 Dan Abramov 为 contenxt 的使用总结了一些注意事项：")]),a("ul",[a("li",[s._v("如果你是一个库的作者，需要将信息传递给深层次组件时，context 在一些情况下可能无法更新成功。")]),a("li",[s._v("如果是界面主题、本地化信息，context 被应用于不易改变的全局变量，可以提供一个高阶组件，以便在 API 更新时只需修改一处。")]),a("li",[s._v("如果库需要你使用 context，请它提供高阶组件给你。")])]),a("p",[s._v("正如 Dan 第一条所述，在 React issue 中，经常能找到 React.PureComponent、shouldComponentUpdate 与包含 Context 的库结合后引发的一些问题。原因在于 shouldComponentUpdate 会切断子树的 rerender，当 state 或 props 没有发生变化时，可能意外中断上层 context 传播。也就是当 shouldComponentUpdate 返回 false 时，context 的变化是无法被底层所感知的。")]),a("p",[s._v("因此，我们认为 context 应该是不变的，在构造时只接受 context 一次，使用 context，应类似于依赖注入系统来进行。结合精读文章的示例总结一下思路，不变的 context 中包含可变的元素，元素的变化触发自身的监听器实现底层组件的更新，从而绕过 shouldComponentUpdate。")]),a("p",[s._v("最后作者提出了 Mobx 下的两种解决方案。context 中的可变元素可用 observable 来实现，从而避免上述事件监听器编写，因为 observable 会帮你完成元素改变后的响应。当然 Provider + inject 也可以完成，具体可参考精读文章中的代码。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本次提出独到观点的同学有： "),a("a",{attrs:{href:"https://www.zhihu.com/people/turbe-xue"}},[s._v("@monkingxue")]),s._v(" "),a("a",{attrs:{href:"https://github.com/alcat2008"}},[s._v("@alcat2008")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/huang-zi-yi-83"}},[s._v("@ascoders")]),s._v("，精读由此归纳。")]),a("p",[a("strong",[s._v("context 的使用场景")])]),a("blockquote",[a("p",[s._v("In some cases, you want to pass data through the component tree without having to pass the props down manually at every level.")])]),a("p",[s._v("context 的本质在于为组件树提供一种跨层级通信的能力，原本在 React 只能通过 props 逐层传递数据，而 context 打破了这一层束缚。")]),a("p",[s._v("context 虽然不被建议使用，但在一些流行库中却非常常见，例如："),a("a",{attrs:{href:"https://github.com/reactjs/react-redux"}},[s._v("react-redux")]),s._v("、"),a("a",{attrs:{href:"https://github.com/ReactTraining/react-router"}},[s._v("react-router")]),s._v("。究其原因，我认为是单一顶层与多样底层间不是单纯父子关系的结果。例如：react-redux 中的 Provider，react-router 中的 Router，均在顶层控制 store 信息与路由信息。而对于 Connect 与 Route 而言，它们在 view 中的层级是多样化的，通过 context 获取顶层 Provider 与 Router 中的相关信息再合适不过。")]),a("p",[a("strong",[s._v("context 的坑")])]),a("ul",[a("li",[s._v("context 相当于一个全局变量，难以追溯数据源，很难找到是在哪个地方中对 context 进行了更新。")]),a("li",[s._v("组件中依赖 context，会使组件耦合度提高，既不利于组件复用，也不利于组件测试。")]),a("li",[s._v("当 props 改变或是 setState 被调用，getChildContext 也会被调用，生成新的 context，但 shouldComponentUpdate 返回的 false 会 block 住 context，导致没有更新，这也是精读文章的重点内容。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("正如精读文章开头所说，context 是一个非常强大的，具有很多免责声明的特性，就像伊甸园中的禁果。的确，引入全局变量似乎是应用混乱的开始，而 context 与 props/state 相比也实属异类。在业务代码中，我们应抵制使用 context，而在框架和库中可结合场景适当使用，相信 context 也并非洪水猛兽。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},ac11:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("JavaScript 模块化发展")])]),a("h2",{attrs:{id:"javascript-mo-kuai-hua-fa-zhan"}},[s._v("JavaScript 模块化发展 "),a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-mo-kuai-hua-fa-zhan"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读的文章是："),a("a",{attrs:{href:"https://github.com/myshov/history-of-javascript/tree/master/4_evolution_of_js_modularity"}},[s._v("evolutionOfJsModularity")]),s._v("。")])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i4/O1CN01mvDKCM1owPSsLDBmI_!!6000000005289-2-tps-475-297.png",alt:"logo",width:"500"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("如今，Javascript 模块化规范非常方便、自然，但这个新规范仅执行了 2 年，就在 4 年前，js 的模块化还停留在运行时支持，10 年前，通过后端模版定义、注释定义模块依赖。对经历过来的人来说，历史的模块化方式还停留在脑海中，反而新上手的同学会更快接受现代的模块化规范。")])]),a("p",[s._v("但为什么要了解 Javascript 模块化发展的历史呢？因为凡事都有两面性，了解 Javascript 模块化规范，有利于我们思考出更好的模块化方案，纵观历史，从 1999 年开始，模块化方案最多维持两年，就出现了新的替代方案，比原有的模块化更清晰、强壮，我们不能被现代模块化方式限制住思维，因为现在的 ES2015 模块化方案距离发布也仅仅过了两年。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("直接定义依赖 (1999)")]),s._v(": 由于当时 js 文件非常简单，模块化方式非常简单粗暴 —— 通过全局方法定义、引用模块。这种定义方式与现在的 commonjs 非常神似，区别是 commonjs 以文件作为模块，而这种方法可以在任何文件中定义模块，模块不与文件关联。")]),a("br"),a("p",[a("strong",[s._v("闭包模块化模式 (2003)")]),s._v(": 用闭包方式解决了变量污染问题，闭包内返回模块对象，只需对外暴露一个全局变量。")]),a("br"),a("p",[a("strong",[s._v("模版依赖定义 (2006)")]),s._v(": 这时候开始流行后端模版语法，通过后端语法聚合 js 文件，从而实现依赖加载，说实话，现在 go 语言等模版语法也很流行这种方式，写后端代码的时候不觉得，回头看看，还是挂在可维护性上。")]),a("br"),a("p",[a("strong",[s._v("注释依赖定义 (2006)")]),s._v(": 几乎和模版依赖定义同时出现，与 1999 年方案不同的，不仅仅是模块定义方式，而是终于以文件为单位定义模块了，通过 "),a("a",{attrs:{href:"https://github.com/bevacqua/lazyjs"}},[s._v("lazyjs")]),s._v(" 加载文件，同时读取文件注释，继续递归加载剩下的文件。")]),a("br"),a("p",[a("strong",[s._v("外部依赖定义 (2007)")]),s._v(": 这种定义方式在 cocos2d-js 开发中普遍使用，其核心思想是将依赖抽出单独文件定义，这种方式不利于项目管理，毕竟依赖抽到代码之外，我是不是得两头找呢？所以才有通过 webpack 打包为一个文件的方式暴力替换为 commonjs 的方式出现。 "),a("br")]),a("p",[a("strong",[s._v("Sandbox 模式 (2009)")]),s._v(": 这种模块化方式很简单，暴力，将所有模块塞到一个 "),a("code",[s._v("sandbox")]),s._v(" 变量中，硬伤是无法解决命名冲突问题，毕竟都塞到一个 "),a("code",[s._v("sandbox")]),s._v(" 对象里，而 "),a("code",[s._v("Sandbox")]),s._v(" 对象也需要定义在全局，存在被覆盖的风险。模块化需要保证全局变量尽量干净，目前为止的模块化方案都没有很好的做到这一点。")]),a("br"),a("p",[a("strong",[s._v("依赖注入 (2009)")]),s._v(": 就是大家熟知的 angular1.0，依赖注入的思想现在已广泛运用在 react、vue 等流行框架中。但依赖注入和解决模块化问题还差得远。")]),a("br"),a("p",[a("strong",[s._v("CommonJS (2009)")]),s._v(": 真正解决模块化问题，从 node 端逐渐发力到前端，前端需要使用构建工具模拟。 "),a("br")]),a("p",[a("strong",[s._v("Amd (2009)")]),s._v(": 都是同一时期的产物，这个方案主要解决前端动态加载依赖，相比 commonJs，体积更小，按需加载。")]),a("br"),a("p",[a("strong",[s._v("Umd (2011)")]),s._v(": 兼容了 CommonJS 与 Amd，其核心思想是，如果在 commonjs 环境（存在 "),a("code",[s._v("module.exports")]),s._v("，不存在 "),a("code",[s._v("define")]),s._v("），将函数执行结果交给 "),a("code",[s._v("module.exports")]),s._v(" 实现 Commonjs，否则用 Amd 环境的 "),a("code",[s._v("define")]),s._v("，实现 Amd。")]),a("br"),a("p",[a("strong",[s._v("Labeled Modules (2012)")]),s._v(": 和 Commonjs 很像了，没什么硬伤，但生不逢时，碰上 Commonjs 与 Amd，那只有被人遗忘的份了。")]),a("br"),a("p",[a("strong",[s._v("YModules (2013)")]),s._v(": 既然都出了 Commonjs Amd，文章还列出了此方案，一定有其独到之处。其核心思想在于使用 "),a("code",[s._v("provide")]),s._v(" 取代 "),a("code",[s._v("return")]),s._v("，可以控制模块结束时机，处理异步结果；拿到第二个参数 "),a("code",[s._v("module")]),s._v("，修改其他模块的定义（虽然很有拓展性，但用在项目里是个搅屎棍）。")]),a("br"),a("p",[a("strong",[s._v("ES2015 Modules (2015)")]),s._v(": 就是我们现在的模块化方案，还没有被浏览器实现，大部分项目已通过 "),a("code",[s._v("babel")]),s._v(" 或 "),a("code",[s._v("typescript")]),s._v(" 提前体验。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本次提出独到观点的同学有："),a("a",{attrs:{href:"https://github.com/arcthur"}},[s._v("流形")]),s._v("，"),a("a",{attrs:{href:"https://github.com/ascoders"}},[s._v("黄子毅")]),s._v("，"),a("a",{attrs:{href:"https://github.com/javie007"}},[s._v("苏里约")]),s._v("，"),a("a",{attrs:{href:"https://github.com/camsong"}},[s._v("camsong")]),s._v("，"),a("a",{attrs:{href:"https://github.com/jasonslyvia"}},[s._v("杨森")]),s._v("，"),a("a",{attrs:{href:"https://github.com/BlackGanglion"}},[s._v("淡苍")]),s._v("，"),a("a",{attrs:{href:"https://github.com/fanhc019"}},[s._v("留影")]),s._v("，精读由此归纳。")]),a("br"),a("ul",[a("li",[a("h4",[s._v("从语言层面到文件层面的模块化")])])]),a("blockquote",[a("p",[s._v("从 1999 年开始，模块化探索都是基于语言层面的优化，真正的革命从 2009 年 CommonJS 的引入开始，前端开始大量使用预编译。")])]),a("p",[s._v("这篇文章所提供的模块化历史的方案都是逻辑模块化，"),a("strong",[s._v("从 CommonJS 方案开始前端把服务端的解决方案搬过来之后，算是看到标准物理与逻辑统一的模块化")]),s._v("。但之后前端工程不得不引入模块化构建这一步。正是这一步给前端开发无疑带来了诸多的不便，尤其是现在我们开发过程中经常为了优化这个工具带了很多额外的成本。")]),a("br"),a("p",[s._v("从 CommonJS 之前其实都只是封装，并没有一套模块化规范，这个就有些像类与包的概念。我在 10 年左右用的最多的还是 YUI2，YUI2 是用 namespace 来做模块化的，但有很多问题没有解决，比如多版本共存，因此后来 YUI3 出来了。")]),a("br"),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("YUI().use("),a("span",{staticClass:"hljs-string"},[s._v("'node'")]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v("'event'")]),s._v(", "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("Y")]),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// The Node and Event modules are loaded and ready to use.")]),s._v("\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// Your code goes here!")]),s._v("\n});\n")])]),a("br"),a("p",[s._v("YUI3 的 sandbox 像极了差不多同时出现的 AMD 规范，但早期 yahoo 在前端圈的影响力还是很大的，而 requirejs 到 2011 年才诞生，因此圈子不是用着 YUI 要不就自己封装一套 sandbox，内部使用 jQuery。")]),a("br"),a("p",[s._v("为什么模块化方案这么晚才成型，可能早期应用的复杂度都在后端，前端都是非常简单逻辑。后来 Ajax 火了之后，web app 概念的开始流行，前端的复杂度也呈指数级上涨，到今天几乎和后端接近一个量级。"),a("strong",[s._v("工程发展到一定阶段，要出现的必然会出现。")])]),a("br"),a("ul",[a("li",[a("h4",[s._v("前端三剑客的模块化展望")])])]),a("blockquote",[a("p",[s._v("从 js 模块化发展史，我们还看到了 css html 模块化方面的严重落后，如今依赖编译工具的模块化增强在未来会被标准所替代。")])]),a("p",[s._v("原生支持的模块化，"),a("strong",[s._v("解决 html 与 css 模块化问题正是以后的方向。")])]),a("br"),a("p",[s._v("再回到 JS 模块化这个主题，开头也说到是为了构建 scope，实则提供了业务规范标准的输入输出的方式。但文章中的 JS 的模块化还不等于前端工程的模块化，Web 界面是由 HTML、CSS 和 JS 三种语言实现，不论是 CommonJS 还是 AMD 包括之后的方案都无法解决 CSS 与 HTML 模块化的问题。")]),a("br"),a("p",[s._v("对于 CSS 本身它就是 global scope，因此开发样式可以说是喜忧参半。近几年也涌现把 HTML、CSS 和 JS 合并作模块化的方案，其中 react/css-modules 和 vue 都为人熟知。当然，这一点还是非常依赖于 webpack/rollup 等构建工具，让我们意识到在 browser 端还有很多本质的问题需要推进。")]),a("br"),a("p",[s._v("对于 css 模块化，目前不依赖预编译的方式是 "),a("code",[s._v("styled-component")]),s._v("，通过 js 动态创建 class。而目前 css 也引入了"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Using_CSS_variables"}},[s._v("与 js 通信的机制 与 原生变量支持")]),s._v("。未来 css 模块化也很可能是运行时的，所以目前比较看好 "),a("code",[s._v("styled-component")]),s._v(" 的方向。")]),a("br"),a("p",[s._v("对于 html 模块化，小尤最近爆出与 chrome 小组调研 html Modules，如果 html 得到了浏览器，编辑器的模块化支持，未来可能会取代 jsx 成为最强大的模块化、模板语言。")]),a("br"),a("p",[s._v("对于 js 模块化，最近出现的 "),a("code",[s._v('<script type="module">')]),s._v(" 方式，虽然还没有得到浏览器原生支持，但也是我比较看好的未来趋势，这样就连 webpack 的拆包都不需要了，直接把源代码传到服务器，配合 http2.0 完美抛开预编译的枷锁。")]),a("br"),a("p",[s._v("上述三中方案都不依赖预编译，分别实现了 html、css、js 模块化，相信这就是未来。")]),a("br"),a("ul",[a("li",[a("h4",[s._v("模块化标准推进速度仍然缓慢")])])]),a("blockquote",[a("p",[s._v("2015 年提出的标准，在 17 年依然没有得到实现，即便在 nodejs 端。")])]),a("p",[s._v("这几年 TC39 对语言终于重视起来了，慢慢有动作了，但针对模块标准制定的速度，与落实都非常缓慢，与 javascript 越来越流行的趋势逐渐脱节。nodejs 至今也没有实现 ES2015 模块化规范，所有 jser 都处在构建工具的阴影下。")]),a("br"),a("ul",[a("li",[a("h4",[s._v("Http 2.0 对 js 模块化的推动")])])]),a("blockquote",[a("p",[s._v("js 模块化定义的再美好，浏览器端的支持粒度永远是瓶颈，http 2.0 正是考虑到了这个因素，大力支持了 ES 2015 模块化规范。")])]),a("p",[s._v("幸运的是，模块化构建将来可能不再需要。随着 HTTP/2 流行起来，请求和响应可以并行，一次连接允许多个请求，对于前端来说宣告不再需要在开发和上线时再做编译这个动作。")]),a("br"),a("p",[s._v("几年前，模块化几乎是每个流行库必造的轮子（YUI、Dojo、Angular），大牛们自己爽的同时其实造成了社区的分裂，很难积累。有了 ES2015 Modules 之后，JS 开发者终于可以像 Java 开始者十年前一样使用一致的方式愉快的互相引用模块。")]),a("br"),a("p",[s._v("不过 ES2015 Modules 也只是解决了开发的问题，由于浏览器的特殊性，还是要经过繁琐打包的过程，等 Import，Export 和 HTTP 2.0 被主流浏览器支持，那时候才是彻底的模块化。")]),a("br"),a("ul",[a("li",[a("h4",[s._v("Http 2.0 后就不需要构建工具了吗？")])])]),a("blockquote",[a("p",[s._v("看到大家基本都提到了 HTTP/2，对这项技术解决前端模块化及资源打包等工程问题抱有非常大的期待。很多人也认为 HTTP/2 普及后，基本就没有 Webpack 什么事情了。")])]),a("p",[s._v("不过 Webpack 作者 @sokra 在他的文章 "),a("a",{attrs:{href:"https://medium.com/webpack/webpack-http-2-7083ec3f3ce6#.zdo4juvgo"}},[s._v("webpack & HTTP/2")]),s._v(" 里提到了一个新的 Webpack 插件 "),a("code",[s._v("AggressiveSplittingPlugin")]),s._v("。简单的说，这款插件就是为了充分利用 HTTP/2 的文件缓存能力，将你的业务代码自动拆分成若干个数十 KB 的小文件。后续若其中任意一个文件发生变化，可以保证其他的小 chunk 不需要重新下载。")]),a("br"),a("p",[s._v("可见，"),a("strong",[s._v("即使不断的有新技术出现，也依然需要配套的工具来将前端工程问题解决方案推向极致。")])]),a("br"),a("ul",[a("li",[a("h4",[s._v("模块化是大型项目的银弹吗？")])])]),a("blockquote",[a("p",[s._v("只要遵循了最新模块化规范，就可以使项目具有最好的可维护性吗？ Js 模块化的目的是支持前端日益上升的复杂度，但绝不是唯一的解决方案。")])]),a("p",[s._v("分析下 JavaScript 为什么没有模块化，为什么又需要模块化：这个 95 年被设计出来的时候，语言的开发者根本没有想到它会如此的大放异彩，也没有将它设计成一种模块化语言。按照文中的说法，99 年也就是 4 年后开始出现了模块化的需求。如果只有几行代码用模块化是扯，初始的 web 开发业务逻辑都写在 server 端，js 的作用小之又小。而现在 spa 都出现了，几乎所有的渲染逻辑都在前端，如果还是没有模块化的组织，开发过程会越来越难，维护也是更痛苦。")]),a("br"),a("p",[s._v("文中已经详细说明了模块化的发展和优劣，这里不准备做过多的讨论。我想说的是，"),a("strong",[s._v("在模块化之后还有一个模块间耦合的问题，如果模块间耦合度大也会降低代码的可重用性或者说复用性")]),s._v("。所以也出现了降低耦合的观察者模式或者发布/订阅模式。这对于提升代码重用，复用性和避免单点故障等都很重要。说到这里，还想顺便提一下最近流行起来的响应式编程（RxJS），响应式编程中有一个很核心的概念就是 observable，也就是 Rx 中的流（stream）。它可以被 subscribe，其实也就是观察者设计模式。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("未来前端复杂度不断增加已成定论，随着后端成熟，自然会将焦点转移到前端领域，而且服务化、用户体验越来越重要，前端体验早不是当初能看就行，任何网页的异常、视觉的差异，或文案的模糊，都会导致用户流失，支付中断。前端对公司营收的影响，渐渐与后端服务宕机同等严重，所以前端会越来越重，异常监控，性能检测，工具链，可视化等等都是这几年大家逐渐重视起来的。")]),a("br"),a("p",[s._v("我们早已不能将 javascript 早期玩具性质的模块化方案用于现代越来越重要的系统中，前端界必然出现同等重量级的模块化管理方案，感谢 TC39 制定的 ES2015 模块化规范，我们已经离不开它，哪怕所有人必须使用 babel。")]),a("br"),a("p",[s._v("话说回来，标准推进的太慢，我们还是把编译工具当作常态，抱着哪怕支持了 ES2015 所有特性，babel 依然还有用的心态，将预编译进行到底。一句话，模块化仍在路上。js 模块化的矛头已经对准了 css 与 html，这两位元老也该向前卫的 js 学习学习了。")]),a("br"),a("p",[s._v("未来 css、html 的模块化会自立门户，还是赋予 js 更强的能力，让两者的模块化依附于 js 的能力呢？目前 html 有自立门户的苗头（htmlModules），而 css 迟迟没有改变，社区出现的 "),a("code",[s._v("styled-component")]),s._v(" 已经用 js 将 css 模块化得很好了，最新 css 规范也支持了与 js 的变量通信，难道希望依附于 js 吗？这里希望得到大家更广泛的讨论。")]),a("br"),a("p",[s._v("我也认同，毕竟压缩、混淆、md5、或者利用 "),a("a",{attrs:{href:"https://www.thepolyglotdeveloper.com/2015/03/create-a-random-nonce-string-using-javascript/"}},[s._v("nonce")]),s._v(" 属性对 script 标签加密，都离不开本地构建工具。")]),a("br"),a("p",[s._v("据说 http2 的优化中，有个最佳文件大小与数量的比例，那么还是脱离不了构建工具，前端未来会越来越复杂，同时也越来越美好。 "),a("br")]),a("p",[s._v("至此，对于 javascript 模块化讨论已接近尾声，对其优缺点也基本达成了一致。前端复杂度不断提高，促使着模块化的改进，代理（浏览器、node） 的支持程度，与前端特殊性（流量、缓存）可能前端永远也离不开构建工具，新的标准会让这些工作做的更好，同时取代、增强部分特征，前端的未来是更加美好的，复杂度也更高。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("补充阅读")])]),a("h3",{attrs:{id:"bu-chong-yue-du"}},[s._v("补充阅读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bu-chong-yue-du"}},[s._v("§")])]),a("ul",[a("li",[a("a",{attrs:{href:"https://huangxuan.me/2015/07/09/js-module-7day/"}},[s._v("JavaScript 模块化七日谈")])]),a("li",[a("a",{attrs:{href:"https://yuguo.us/weblog/javascript-module-development-history/"}},[s._v("JavaScript 模块化编程简史（2009-2016）")])])])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},b024:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("Builder")])]),a("h2",{attrs:{id:"sheng-cheng-qi"}},[s._v("生成器 "),a("a",{staticClass:"header-anchor",attrs:{href:"#sheng-cheng-qi"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("Builder（生成器）属于创建型模式，针对的是单个复杂对象的创建。")])]),a("p",[a("strong",[s._v("意图：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h2",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),a("br"),a("p",[a("strong",[s._v("搭乐高积")]),s._v("木")]),a("p",[s._v("乐高积木是很典型的随机拼装场景，你有很多乐高积木，要搭一个小房子都太复杂了，可能不得不看着说明书一步步操作，这就像创建一个复杂的对象，要传入非常多的参数，而且顺序还不能错。")]),a("p",[s._v("如果不考虑拼装乐高过程中的乐趣，你只是想快速得到一个标准的房子，怎么样才可以最快最省事？")]),a("br"),a("p",[a("strong",[s._v("工厂流水线")])]),a("p",[s._v("制作一个罐头要经历许多步骤，而其中一些步骤比如制作罐头是通用的，可以用这个罐头装很多东西，比如红枣罐头、黄桃罐头，那工厂流水线是怎么做到灵活可拓展的呢？")]),a("br"),a("p",[a("strong",[s._v("创建数据库连接池")])]),a("p",[s._v("建立一个数据库连接池，我们需要传入数据库的地址、用户名与密码、还有要创建多少大小的连接池，缓存的位置等等。")]),a("p",[s._v("考虑到数据库必须正确连接后才有效，创建时必须校验传入的数据库地址与密码的正确性，甚至存储方式与数据库类型还有关系，这是一个简单的 "),a("code",[s._v("new")]),s._v(" 实例化可以解决的吗？")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h2",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[s._v("在乐高积木的例子中，我们为了得到一个房子其实不需要关心每一个积木应该如何摆放，"),a("strong",[s._v("我们只要交给组装工厂（一个人或者一个程序）产出标准房子就行了")]),s._v("，这其中参数可能是 "),a("code",[s._v(".setHouseType().build()")]),s._v(" 设置房屋类型，而不需要 "),a("code",[s._v("new House(block1, block2, ... block999)")]),s._v(" 传递这些没必要的参数。"),a("strong",[s._v("其中组装工厂就是生成器")]),s._v("。")]),a("br"),a("p",[s._v("在工厂流水线的例子中，"),a("strong",[s._v("流水线就是生成器，一个流水线可以不通过不同组合生成不同作用的工厂")]),s._v("，黄桃罐头的流水线可以理解为 "),a("code",[s._v("new Builder().组装罐头().放入黄桃().build()")]),s._v("，红枣罐头的流水线可以理解为 "),a("code",[s._v("new Builder().组装罐头().放入红枣().build()")]),s._v("，我们可以复用生成器最基础的函数 "),a("code",[s._v("组装罐头()")]),s._v(" 将其用于创建不同的产品中，复用了组装基础能力。")]),a("br"),a("p",[s._v("在创建数据库例子中，我们可以先设置一些必要的参数再创建，比如 "),a("code",[s._v("new Builder().setUrl().setPassword().setType().build()")]),s._v("，这样在最终执行 "),a("code",[s._v("build")]),s._v(" 函数的时候，可以对参数中存在关联的进行校验，而得到的对象也无法再被修改，这样比直接暴露数据库连接池对象，再一个值一个值 Set 多了如下好处：")]),a("ul",[a("li",[s._v("对象无法被修改，保护了程序稳定性，减少了维护复杂度。")]),a("li",[s._v("可以对参数关联进行一次性校验。")]),a("li",[s._v("在创建对象之前不会存在中间态，即创建了对象实例，但缺少部分参数，这可能导致对象无法正确 work。")])]),a("br"),a("p",[a("strong",[s._v("意图：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。")])]),a("br"),a("p",[s._v("我们再理解一次意图，所谓构建与表示分离，就是指一个对象 "),a("code",[s._v("Person")]),s._v(" 并不是简单的 "),a("code",[s._v("new Person()")]),s._v(" 就可以实例化出来的，如果可以，那就是构建与表示一体。"),a("strong",[s._v("所谓构建与表示分离，就是指 "),a("code",[s._v("Person")]),s._v(" 只能描述，而不能通过 "),a("code",[s._v("new Person()")]),s._v(" 实例化，将实例化工作通过 Builder 实现，这样同样一个构建过程可以创建不同的 "),a("code",[s._v("Person")]),s._v(" 实例。")])]),a("br"),a("p",[s._v("在乐高积木的例子中，通过乐高创建的房子并不是 "),a("code",[s._v("new House()")]),s._v(" 出来，而是将构建与表示分离了，工厂流水线中我们创建一个黄桃罐头，不是通过 "),a("code",[s._v("new 黄桃罐头()")]),s._v("，而是通过流水线不同拼装方式来完成，在数据库例子中，我们没有通过 "),a("code",[s._v("new DB()")]),s._v(" 的方式创建数据库，而是通过 Builder 来创建，这都体现了构建与表示的分离。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h2",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("img",{attrs:{width:"800",src:"https://img.alicdn.com/tfs/TB14lOwYXT7gK0jSZFpXXaTkpXa-1382-466.png"}}),a("ul",[a("li",[a("code",[s._v("Director")]),s._v(" 指导器，用来指导构建过程。")]),a("li",[a("code",[s._v("Builder")]),s._v(" 生成器接口，用来提供一系列构建对象的方法，以及最终的 "),a("code",[s._v("build")]),s._v(" 生成对象函数，这个函数里可以做一些参数校验。")]),a("li",[a("code",[s._v("ConcreteBuilder")]),s._v(" 是 "),a("code",[s._v("Builder")]),s._v(" 的具体实现。")])]),a("p",[s._v("实际上，Builder 模式抽象层次可高可低，我们上面三个例子都没有用到指导器与生成器接口，这是因为在代码不太复杂的情况下，可以使用简化模型。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h2",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("下面例子使用 javascript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Director")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("create")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("concreteBuilder: ConcreteBuilder")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 创建了一些零件")]),s._v("\n    concreteBuilder.buildA();\n    concreteBuilder.buildB();\n\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 校验参数已经生成实例")]),s._v("\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" concreteBuilder.build();\n  }\n}\n\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("HouseBuilder")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("buildA")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 创建房屋")]),s._v("\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// this.xxx = xxx")]),s._v("\n  }\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("buildB")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 刷油漆")]),s._v("\n  }\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("build")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 最终创建实例")]),s._v("\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" House("),a("span",{staticClass:"hljs-comment"},[s._v("/* ..一堆参数 this.xxx.. */")]),s._v(");\n  }\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 接下来是正式使用")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" director = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Director();\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" builder = HouseBuilder();\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" house = director.create(builder);\n")])]),a("br"),a("p",[s._v("上面的例子是完整版本的 Builder 模式，抽象了指导器 "),a("code",[s._v("Director")]),s._v(" 与生成器 "),a("code",[s._v("Builder")]),s._v("，只要两者都严格按照接口实现，我们可以：")]),a("ul",[a("li",[s._v("替换任意 "),a("code",[s._v("Director")]),s._v("，使创建的过程做任意修改。")]),a("li",[s._v("替换任意 "),a("code",[s._v("Builder")]),s._v("，使创建的实现做任意修改。")])]),a("p",[s._v("做了任意的改动，都可以得到不同的房子实现，这就是创建与表示分离的好处，我们可以通过同样的构建过程创建不同的表示。")]),a("br"),a("p",[s._v("这个 "),a("code",[s._v("director.create()")]),s._v("：")]),a("ul",[a("li",[s._v("在搭乐高积木的例子，表示用乐高搭建房屋的过程。")]),a("li",[s._v("在工程流水线的例子，表示罐头的组装构成。")]),a("li",[s._v("在创建数据库连接池的例子，表示数据库连接池的创建过程。")])]),a("p",[s._v("而 "),a("code",[s._v("Builder")]),s._v(" 以及其函数 "),a("code",[s._v("buildA")]),s._v(" "),a("code",[s._v("buildB")]),s._v(" 等方法表示具体制造方法，比如：")]),a("ul",[a("li",[s._v("在搭乐高积木的例子，表示如何盖房子，如何刷油漆。")]),a("li",[s._v("在工程流水线的例子，表示如何做一个罐头，如何添加黄桃。")]),a("li",[s._v("在创建数据库连接池的例子，表示如何设置数据库地址，如何设置用户名密码等。")])]),a("p",[s._v("对于数据库的例子中，我们不仅可以保证创建对象的便捷性，因为不需要传入过多参数，也保证了对象的正确校验，同时生成的实例也是不可变的。")]),a("br"),a("p",[s._v("更重要的是，如果使用完整模式，我们可以替换 "),a("code",[s._v("Director")]),s._v(" 来修改创建数据库的方式，替换 "),a("code",[s._v("Builder")]),s._v(" 来修改具体方法，比如 "),a("code",[s._v(".setUserName")]),s._v(" 这个函数不做具体实现，而是统计性能，"),a("code",[s._v("build()")]),s._v(" 函数创建的不是一个数据库连接实例，而是一个测试实例。")]),a("br"),a("p",[s._v("再比如前端同一个方法在 JS 和 Node 环境下运行效果不一样，我们可以实现 "),a("code",[s._v("BrowserBuild")]),s._v(" 与 "),a("code",[s._v("NodeBuild")]),s._v("，实现相同的接口，这样可以共享相同的创建过程，创建不同环境可以运行的实例。")]),a("br"),a("p",[s._v("可以看到，使用 Builder 模式可以保证创建对象的便捷与稳定性，还留了足够的拓展空间改变对象的创建过程与创建方法，具有极强的拓展性。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h2",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("任何设计模式都有其适用场景，反过来也说明了在某些场景下不适用。")]),a("ul",[a("li",[s._v("实例化对象非常繁琐，重复定义了许多对象成员变量的 "),a("code",[s._v("set")]),s._v(" 方法，而且也不如 "),a("code",[s._v("new")]),s._v(" 看的直观，也就是场景足够简单时，不需要任何地方都用 Builder 实例化对象。")]),a("li",[s._v("一个对象只有一种表示时，没必要做如此地步的抽象。")])]),a("p",[s._v("上面的例子都是相对复杂的，假设我们的搭房子的例子中，我们不是用乐高积木搭建，而是用两块半成品模板拼起来就得到一个房子，那就没有必要使用 Builder 模式，直接 "),a("code",[s._v("new House()")]),s._v(" 即可。")]),a("br"),a("p",[s._v("再者，如果我们只需要生产各种罐头，而不需要生产汽车，那么就没必要过度抽象 Builder，把创建汽车的方法也囊括进去，最后，如果我们的对象只有一种表示时，没有必要抽象 Builder，也就是流水线如果只生产黄桃罐头，就没必要把各个生产环节变成可拆卸的，因为也没有重新组合的需要。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h2",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("Builder 模式对于创建一个复杂对象特别有用，可以看下图加深理解：")]),a("img",{attrs:{wdith:"800",src:"https://img.alicdn.com/tfs/TB109aLYoT1gK0jSZFrXXcNCXXa-1412-984.png"}}),a("p",[s._v("最后总结一下何时适合用 Builder 模式：只有当创建过程允许被构造对象有不同表示，或者对象复杂到对象描述与创建对象过程值得分离时，才使用 Builder 设计模式。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},b5c3:function(s,t,a){s.exports=a.p+"img/createMergeRequest.c8d4b874.png"},b64b:function(s,t,a){var e=a("23e7"),n=a("7b0b"),l=a("df75"),i=a("d039"),r=i((function(){l(1)}));e({target:"Object",stat:!0,forced:r},{keys:function(s){return l(n(s))}})},bc50:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("Immutable")])]),a("h2",{attrs:{id:"immutable-jie-gou-gong-xiang"}},[s._v("Immutable 结构共享 "),a("a",{staticClass:"header-anchor",attrs:{href:"#immutable-jie-gou-gong-xiang"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读的文章是："),a("a",{attrs:{href:"https://medium.com/@dtinth/immutable-js-persistent-data-structures-and-structural-sharing-6d163fbd73d2"}},[s._v("Immutable 结构共享是如何实现的")])])]),a("blockquote",[a("p",[s._v("鉴于 "),a("a",{attrs:{href:"https://github.com/mobxjs/mobx-state-tree"}},[s._v("mobx-state-tree")]),s._v(" 的发布，实现了 mutable 到 immutable 数据的自由转换，将 mobx 写法的数据流，无缝接入 redux 生态，或继续使用 mobx 生态。")])]),a("blockquote",[a("p",[s._v("这是将事务性，可追溯性与依赖追踪特性的结合，同时解决开发体验与数据流可维护性。万一这种思路火了呢？我们先来预热下其重要特征，结构共享。")])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i1/O1CN01VNRzdc20vkHFdKxsr_!!6000000006912-2-tps-459-237.png",width:"500",alt:"logo"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("结构共享不仅仅是 “结构共享” 那么简单，背后包含了 Hash maps tries 与 vector tries 结构的支持，如果让我们设计一个结构共享功能，需要考虑哪些点呢？本期精读的文章给了答案。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[s._v("使用 Object.assign 作用于大对象时，速度会成为瓶颈，比如拥有 "),a("code",[s._v("100,000")]),s._v(" 个属性的对象，这个操作耗费了 134ms。性能损失主要原因是 “结构共享” 操作需要遍历近 10 万个属性，而这些引用操作耗费了 100ms 以上的时间。")]),a("br"),a("p",[s._v("解决办法就是减少引用指向的操作数量，而且由于引用指向到任何对象的损耗都几乎一致（无论目标对象极限小或者无穷大，引用消耗时间都几乎没有区别），我们需要一种精心设计的树状结构将打平的引用建立深度，以减少引用操作次数，"),a("code",[s._v("vector tries")]),s._v(" 就是一种解决思路：")]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i1/O1CN011RDclR1XNk14n5tzd_!!6000000002912-2-tps-800-509.png",width:"500",alt:"tires"}}),a("br"),a("p",[s._v("上图的 key: "),a("code",[s._v("t0143c274")]),s._v('，通过 hash 后得到的值为 621051904（与 md5 不同，比如 hash("a") == 0，hash("c") == 2），转化为二进制后，值是 '),a("code",[s._v("10010 10000 01001 00000 00000 00000")]),s._v("，这个路径是唯一的，同时，为了减少树的深度，按照 5bit 切分，切分后的路径也是唯一的。因此寻址路径就如上图所示。")]),a("br"),a("p",[s._v("因此结构共享的核心思路是"),a("strong",[s._v("以空间换时间")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本精读由 "),a("a",{attrs:{href:"https://github.com/rccoder"}},[s._v("rccoder")]),s._v(" "),a("a",{attrs:{href:"https://github.com/ascoders"}},[s._v("ascoders")]),s._v(" "),a("a",{attrs:{href:"https://github.com/cisen"}},[s._v("cisen")]),s._v(" "),a("a",{attrs:{href:"https://github.com/BlackGanglion"}},[s._v("BlackGanglion")]),s._v(" "),a("a",{attrs:{href:"https://github.com/jasonslyvia"}},[s._v("jasonslyvia")]),s._v(" "),a("a",{attrs:{href:"https://github.com/TingGe"}},[s._v("TingGe")]),s._v(" "),a("a",{attrs:{href:"https://github.com/twobin"}},[s._v("twobin")]),s._v(" "),a("a",{attrs:{href:"https://github.com/camsong"}},[s._v("camsong")]),s._v(" 讨论而出，以及我个人的吐血阅读论文原文总结而成。")]),a("ul",[a("li",[a("strong",[s._v("Immutable 树结构的特性")])])]),a("p",[s._v("以 "),a("a",{attrs:{href:"https://github.com/camsong/blog/issues/3"}},[s._v("camsong")]),s._v(" 的动态图形象介绍一下共享的操作流程：")]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i2/O1CN012nTH2925Vhq1HKdZZ_!!6000000007532-2-tps-613-575.png",width:"500",alt:"share"}}),a("p",[s._v("但是，当树越宽（子节点越多）时，相应树的高度会下降，随之查询效率会提高，但更新效率则会下降（试想一下极限情况，就相当于线性结构）。为寻求更新与查询的平衡，我们便选择了 5bit 一分割。")]),a("p",[s._v("因此最终每个节点拥有 2^5=32 个子节点，同时通过 Vector trie 和 Hash maps trie 压缩空间结构，使其深度最小，性能最优。")]),a("ul",[a("li",[a("strong",[s._v("Vector trie")])])]),a("p",[s._v("通过这篇文章查看"),a("a",{attrs:{href:"http://www.hypirion.com/musings/understanding-persistent-vector-pt-1"}},[s._v("详细介绍")]),s._v("。")]),a("p",[s._v("其原理是，使用二叉树，"),a("strong",[s._v("将所有值按照顺序，从左到右存放于叶子节点")]),s._v("，当需要更新数据时，只将其更新路径上的节点生成新的对象，没有改变的节点继续共用。")]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i3/O1CN01OkHHBS1vQzbbc0uK3_!!6000000006168-2-tps-569-509.png",width:"500",alt:"vector-tire"}}),a("ul",[a("li",[a("strong",[s._v("Hash maps trie")])])]),a("p",[s._v("Immutablejs 对于 Map，使用了这种方式优化，并且通过树宽与树高的压缩，形成了文中例图中的效果（"),a("code",[s._v("10010 10000")]),s._v(" 聚合成了一个节点，并且移除了同级的空节点）。")]),a("p",[s._v("树宽压缩：")]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i3/O1CN01Usg7Up1U1oChDkp4q_!!6000000002458-2-tps-848-314.png",width:"500",alt:"vhash-maps-tire-1"}}),a("p",[s._v("树高压缩：")]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i1/O1CN01OplYaG24nHQDZg1xx_!!6000000007435-2-tps-1077-561.png",width:"500",alt:"hash-maps-tire-2"}}),a("p",[s._v("再结合 Vector trie，实现结构共享，保证其更新性能最优，同时查询路径相对较优。")]),a("ul",[a("li",[a("strong",[s._v("Object.assign 是否可替代 Immutable？")])])]),a("blockquote",[a("p",[s._v("结构共享指的是，根节点的引用改变，但对没修改的节点，引用依然指向旧节点。所以"),a("code",[s._v("Object.assign")]),s._v(" 也能实现结构共享")])]),a("p",[s._v("见如下代码：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" objA = { "),a("span",{staticClass:"hljs-attr"},[s._v("a")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-attr"},[s._v("b")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),a("span",{staticClass:"hljs-attr"},[s._v("c")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(" }\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" objB = "),a("span",{staticClass:"hljs-built_in"},[s._v("Object")]),s._v(".assign({}, objA, { "),a("span",{staticClass:"hljs-attr"},[s._v("c")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(" })\nobjA === objB     "),a("span",{staticClass:"hljs-comment"},[s._v("// false")]),s._v("\nobjA.a === objB.a "),a("span",{staticClass:"hljs-comment"},[s._v("// true")]),s._v("\nobjA.b === objB.b "),a("span",{staticClass:"hljs-comment"},[s._v("// true")]),s._v("\n")])]),a("p",[s._v("证明 Object.assign 完全可以胜任 Immutable 的场景。但正如文章所述，当对象属性庞大时， Object.assign 的效率较低，因此在特殊场景，不适合使用 Object.assign 生成 immutable 数据。但是大部分场景还是完全可以使用 Object.assign 的，因为性能不是瓶颈，唯一繁琐点在于深层次对象的赋值书写起来很麻烦。")]),a("ul",[a("li",[s._v("** Map 性能比 Object.assign 更好，是否可以替代 Immutable？**")])]),a("blockquote",[a("p",[s._v("当一层节点达到 1000000 时，immutable.get 查询性能是 object.key 的 10 倍以上。")])]),a("p",[s._v("就性能而言可以替代 Immutable，但就结合 redux 使用而言，无法替代 Immutable。")]),a("p",[s._v("redux 判断数据更新的条件是，对象引用是否变化，而且要满足，"),a("strong",[s._v("当修改对象子属性时，父级对象的引用也要一并修改")]),s._v("。Map 跪在这个特性上，它无法使 set 后的 map 对象产生一份新的引用。")]),a("p",[s._v("这样会导致，Connect 了 style 对象，其 backgroundColor 属性变化时，不会触发 reRender。因此虽然 Map 性能不错，但无法胜任 Object.assign 或 immutablejs 库对 redux 的支持。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("p",[s._v("数据结构共享要达到真正可用，需要借助 Hash maps tries 和 vector tries 数据结构的帮助，在上文中已经详细阐述。既然清楚了结构共享怎么做，就更加想知道 mobx-state-tree 是如何做到 mutable 数据到 immutable 数据转换了，敬请期待下次的源码分析（不一定在下一期）。")]),a("br"),a("p",[s._v("如何你对原理不是很关心，那拿走这个结论也不错：在大部分情况可以使用 Object.assign 代替 Immutablejs，只要你不怕深度赋值的麻烦语法；其效果与 Immutablejs 一模一样，唯一，在数据量巨大的字段上，可以使用 Immutablejs 代替以提高性能。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},be49:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[s._m(0),s._m(1),s._m(2),s._m(3),a("br"),a("p",[s._v("桥接模式比较难理解，我会一步步还原该设计模式的思考，让你体会这个设计模式是如何一步一步被提炼出来的。")]),s._m(4),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h3",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),a("br"),a("p",[a("strong",[s._v("汽车生产线改造为新能源生产线")])]),a("p",[s._v("汽油车与新能源汽车的生产流程有很大相似之处，那么汽油车生产线能否快速改造为新能源汽车生产线呢？")]),a("br"),a("p",[s._v("如果汽油车生产线没有将内部实现解耦，只把生产汽油车的各部分独立了出来，对新能源车生产线是没什么用处的，但如果汽油车生产线提供了更底层的能力，比如加装轮胎，加装方向盘，那么这些步骤是可以同时被汽油车与新能源车所共享的。")]),a("br"),a("p",[s._v("在设计汽油车生产线时，就将生产过程与汽油车解耦，使其可以快速运用到新能源汽车的生产，这就是桥接模式的一种运用。")]),a("br"),a("p",[a("strong",[s._v("窗口（Window）类的派生")])]),a("p",[s._v("假设存在一个 Window 窗口类，其底层实现在不同操作系统是不一样的，假设对于操作系统 A 与 B，分别有 AWindow 与 BWindow 继承自 Window，现在要做一个新功能 ManageWindow（管理器窗口），就要针对操作系统 A 与 B 分别生成 AManageWindow 与 BManageWindow，这样显然不容易拓展。")]),a("br"),a("p",[s._v("无论我们新增支持 C 操作系统，还是新增支持一个 IconWindow，类的数量都会成倍提升，因为我们所做的 AMangeWindow 与 BMangeWindow 同时存在两个即以上的独立维度，这使得增加维度时，代码变得很冗余。")]),a("br"),a("p",[a("strong",[s._v("适配多个搭建平台的物料")])]),a("p",[s._v("做前端搭建平台时，经常出现一些物料（组件）因为固化了某个搭建平台的 API，因此无法迁移到另一个搭建平台，如果要迁移，就需要为不同的平台写不同的组件，而这些组件中大部分 UI 逻辑都是一样的，这使得产生大量代码冗余，如果再兼容一个新搭建平台，或者为已有的 10 个搭建平台再创建一个新组件，工作量都是写一个组件的好几倍。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h3",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("意图：将抽象部分与它的实现部分分离，使它们可以独立地变化。")])]),a("br"),a("p",[s._v("“抽象” 部分与 “实现” 部分分离，这句话看起来很像接口与实现。确实，如果 “抽象” 指的是 接口(Interface)，而 “实现” 指的是 类(Class) 的话，这就是简简单单的 "),a("code",[s._v("class MyWindow implements Window")]),s._v(" 类实现过程而已。")]),a("br"),a("p",[s._v("但后半句话 “使它们可以独立地变化” 会让你难以和前半句联系起来，如果说 “抽象” 不变，“实现” 可以随意改变还好理解，但反过来就难以解释了。")]),a("br"),a("p",[a("strong",[s._v("其实桥接模式中，抽象指的是一种接口（Abstraction），实现指的也是一种接口（Implementor），其中 Implementor 并不是直接实现了 Abstraction 定义的接口，而是提供更底层的方法，使 Abstraction 可以基于它们封装出自己的接口实现。")])]),a("br"),a("p",[s._v("这样一来，Abstraction 的接口可以随意变化，毕竟调用的是 Implementor 提供函数的组合，只要 Implementor 提供的功能全面，Implementor 可以不变；相应的，Implementor 的实现也可以随意变化，只要提供的底层函数不变，就不影响 Abstraction 对其的使用。")]),a("br"),a("p",[s._v("上面举的三个例子都是这样，我们应该把汽油车生产线的标准与通用汽车生产线标准分离、将具体功能窗口与适配不同操作系统的基础 GUI 能力隔离、将组件功能与平台功能隔离，只有做到了抽象部分与实现部分的隔离，才可以通过组合满足更多场景。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h3",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("img",{attrs:{width:"600",src:"https://img.alicdn.com/tfs/TB1mZv52oH1gK0jSZSyXXXtlpXa-1726-696.png"}}),a("ul",[a("li",[s._v("Abstraction：定义抽象类的接口。")]),a("li",[s._v("RefinedAbstraction：扩充 Abstraction。")]),a("li",[s._v("Implementor：定义实现类的接口，该接口可以与 Abstraction 接口不一致。")]),a("li",[s._v("ConcreteImplementor：实现 Implementor 接口并定义它的具体实现。")])]),a("p",[s._v("抽象部分就是 Abstraction，实现部分就是 Implementor，在这个结构图中，它们是分离的，可以各自独立变化的，桥接模式，就是指 "),a("code",[s._v("imp")]),s._v(" 这个桥，通过 Implementor 实现 Abstraction 接口，就算是桥接上了，这种组合的桥接相比普通的类实现更灵活，更具有拓展性。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h3",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("对于完全版桥接模式，Implementor 可以有多套实现，Abstraction 不需关心具体用的是哪一种实现，而是通过抽象工厂方式封装。下面举一个简单版的例子。")]),a("br"),a("p",[s._v("下面例子使用 typescript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Window")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" windowImp: WindowImp\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("drawBox")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 通过画线生成 box")]),s._v("\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".windowImp.drawLine("),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(")\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".windowImp.drawLine("),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(")\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".windowImp.drawLine("),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(")\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".windowImp.drawLine("),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(")\n  }\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 拓展 window 就非常容易")]),s._v("\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("SuperWindow")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Window")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" drawIcon {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 通过自定义画线")]),s._v("\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".windowImp.drawLine("),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(")\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".windowImp.drawLine("),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("9")]),s._v(")\n  }\n}\n")])]),a("br"),a("p",[s._v("桥接模式的精髓，通过上面的例子可以这么理解：")]),a("br"),a("p",[a("code",[s._v("Window")]),s._v(" 的能力是 "),a("code",[s._v("drawBox")]),s._v("，那继承 "),a("code",[s._v("Window")]),s._v(" 容易拓展 "),a("code",[s._v("drawIcon")]),s._v(" 吗？默认是不行的，因为 "),a("code",[s._v("Window")]),s._v(" 并没有提供这个能力。经分析可以看出，划线是一种基础能力，不应该与 "),a("code",[s._v("Window")]),s._v(" 代码耦合，因此我们将基础能力放到 "),a("code",[s._v("windowImp")]),s._v(" 中，这样 "),a("code",[s._v("drawIcon")]),s._v(" 也可以利用其基础能力画线了。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h3",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("不要过度抽象，桥接模式是为了让类的职责更单一，维护更便捷，但如果只是个小型项目，桥接模式会增加架构设计的复杂度，而且不正确的模块拆分，把本来关联的逻辑强制解耦，在未来会导致更大的问题。")]),a("br"),a("p",[s._v("另外桥接模式也有简单与复杂模式之分，只有一种实现的场景就不要用抽象工厂做过度封装了。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("桥接模式让我们重新审视类的设计是否合理，把类中不相关，或者说相互独立的维度抽出去，由桥接模式做桥接的方式使用，这样会使每个类功能更内聚，代码量更少更清晰，组合能力更强大，更容易做拓展。")]),a("br"),a("p",[s._v("下图做了一个简单的解释：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1nossndTfau8jSZFwXXX1mVXa-1308-1078.png"}})],2)],1)},n=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("blockquote",[a("blockquote",[a("p",[s._v("Bridge")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"qiao-jie-mo-shi"}},[s._v("桥接模式 "),a("a",{staticClass:"header-anchor",attrs:{href:"#qiao-jie-mo-shi"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("Bridge（桥接模式）属于结构型模式，是一种解决继承后灵活拓展的方案。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("意图：将抽象部分与它的实现部分分离，使它们可以独立地变化。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("blockquote",[a("blockquote")])])}],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},bf2a:function(s,t,a){s.exports=a.p+"img/prject-be.f4190d58.png"},bf2ab:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("当我在分享的时候，我在做什么？")])]),a("h2",{attrs:{id:"dang-wo-zai-fen-xiang-de-shi-hou-wo-zai-zuo-shi-me"}},[s._v("当我在分享的时候，我在做什么？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#dang-wo-zai-fen-xiang-de-shi-hou-wo-zai-zuo-shi-me"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("很荣幸被评为公司年度十佳作者，被要求写了这篇命题作文。")]),a("p",[s._v("虽然我写了几年文章，稍稍学会了如何总结，但从来没想过要给自己 “做分享” 这件事做一个总结。这次我决定挑战一下自己，应邀写下这篇文章，谈谈我自己做分享这件事。")]),a("p",[s._v("我将从 Why、What、How 三个角度去说明做分享这件事，分别阐述为什么做分享，做什么分享，以及如何做分享。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("h3",{attrs:{id:"why---wei-shi-me-yao-fen-xiang"}},[s._v("Why - 为什么要分享 "),a("a",{staticClass:"header-anchor",attrs:{href:"#why---wei-shi-me-yao-fen-xiang"}},[s._v("§")])]),a("p",[s._v("在构思《前端精读》这个专栏的时候，那时网上的聚合专栏有很多，一般是每周收集一些优秀的技术、思考文章汇聚成一个列表，特别是一些知名度较高的头部专栏，用户阅读量很大，内容又多质量又好。当时我很羡慕这种模式，因为这种模式不用自己写文章，只要收集文章就可以了，而且在用户的监督下，也会促进你多阅读、多思考。")]),a("br"),a("p",[s._v("当时还萌生了另一个想法，就是现在《前端精读》的模式，每周找到一篇文章精读，并分享文章和自己对文章的观点。萌生这个想法的原因是，当时看了一些文章，觉得还不过瘾，想着如果把一系列关联知识串起来文章会更有价值，可是我并不能要求原文作者做这件事，因此就决定自己写关于这些文章的精读，将自己融会贯通后的理解展现给读者。但这样做有一些风险，首先就是自己写文章的要求比较高，我不能确定自己是否能坚持下来，其次是一周只写一篇，总感觉接收的信息量不如做聚合模式的大，毕竟别人一周就能看二、三十篇文章，而自己只能看一篇。")]),a("br"),a("p",[s._v("让我下决定的原因是看了一篇商业文章，是著名商业顾问刘润的一个观点：商业世界存在点、线、面、体，比如做一家杂志社就是一个点，做互联网信息收集入口就是线，而微博、微信都是面，整个社交行业就是体，每高一个维度都会对下一维度造成降维打击，所以科技行业才演变这么快，实际上是所处维度的不同。但高维也有自己脆弱的一面，就是竞争非常激烈，一个行业体中，通常是容不下太多面的。")]),a("br"),a("p",[s._v("同理，对写作来说，聚合专栏就是线，就像淘宝连接买家与卖家一样，聚合专栏收集优秀作者的文章，利用自己的流量分发给读者，但这个领域必然竞争激烈，当读者有了更好的线，为什么还需要差一些的呢？但做点就不一样了，你可以被无数线和想做线的人需要，你产出自己原创的价值，不会受到太大竞争影响。实际上我的经历也是这样，我可以将文章投放到各个平台（各个线上），这些线都成为了放大我影响力的工具，有越多的线，点的价值就越大，毕竟，想做线的人太多了。")]),a("br"),a("p",[s._v("在这里稍稍插一句，反过来，如果所有人都做点，只有极少数人做线，那线必定形成垄断，就像品牌商垄断农民货物一样，因为农民无法直达消费者，只能以很低的价格把农产品卖给品牌商，同样，消费者也只能通过品牌商买到货，所以品牌商就可以肆意加价。但互联网的发展改变了这些，无论是社交电商还是直播带货，都让生产者有了直接触达消费者的机会，就不用担心被中间商赚取差价；再者，如果大家觉得中间商有利可图，大量的品牌出现，生产者完全可以同时给多个品牌商供货，而在互联网分享的信息不会因为在一个平台的传播而消失，我们可以说文章与知识传播的边际成本完全为零，所以可以最大化利用多平台给自己带来优势。")]),a("br"),a("p",[s._v("所以我决定做一个点，将《前端精读》这个招牌培养起来。")]),a("br"),a("img",{attrs:{width:"300",src:"https://img.alicdn.com/tfs/TB1pTGFtRr0gK0jSZFnXXbRRXXa-1052-741.png"}}),a("br"),a("h3",{attrs:{id:"what---zuo-shi-me-fen-xiang"}},[s._v("What - 做什么分享 "),a("a",{staticClass:"header-anchor",attrs:{href:"#what---zuo-shi-me-fen-xiang"}},[s._v("§")])]),a("p",[s._v("因为我的爱好与职业是前端，所以看上去要做什么分享这件事很简单，只要分享前端技术相关内容就可以了。但这几年持续下来发现，事情远远没有这么简单。")]),a("br"),a("p",[s._v("在分享刚一开始的时候，肚子里憋着一堆想说的话，恨不得一天写一篇精读，但奈何精力与表达能力有限，勉强以一周一篇的节奏坚持下来。写作的内容都是自己最熟悉、最想表达的前端技术内容，而且过程中为了活跃团队气氛，还拉上大家一起参与，坚持了蛮长一段时间。然而很快就遇到了第一个问题，坚持力问题。")]),a("br"),a("p",[s._v("持续做一件事情总会觉得枯燥，加上业务变得更有前途，大家都越来越忙碌，逐渐出现了下周找不到人写精读的情况，此时我选择顶上空缺。但毕竟那时候精读没有多少人关注，成就感不高，加上没有养成写作习惯，写一篇文章往往要花费一整周的精力，连续写两周就觉得非常痛苦，毕竟把自己的知识与想法写成文章有着不小的成本，对自己非常熟悉的知识感觉写下来有些浪费时间，逐渐觉得枯燥。")]),a("br"),a("p",[s._v("在枯燥的过程中，我逐渐培养出更快的写作速度，但一个严重的问题也渐渐浮现出来，我渐渐发现自己的存量知识已经见底，有时间写文章，但却不知道写什么。每周我都会从网上的聚合专栏寻找优秀的文章，但与其说寻找还不如说是过滤，因为很多知识我并没有深入了解，特别是技术领域大部分是英文文章，光看下来就费劲了，更别说写下自己的精读理解。但周更的频率不能停，我只能逼着着自己啃英文文章，从一眼看下去脑袋全懵的状态硬是培养到一眼扫下去就能评估出文章是否值得精读，这是个漫长的习惯过程，因为初期效率很低，唯一坚持下去的理由就是我知道未来阅读速度会越来越快，读英文文章的速度最终是可以追平读中文文章速度的。")]),a("br"),a("p",[s._v("渐渐的我可以通过快速阅读，每周掌握一些新知识，并通过与存量知识进行碰撞产生出新的理解，这解决了 “无话可写” 的尴尬情况，毕竟没有人能保证自己的存量知识够自己写 50 篇、100 篇的文章，现在精读更新到 100 多篇，绝大多数内容都是我新学到的，这也是写作带给我无比受益的地方。")]),a("br"),a("p",[s._v("前端内容写多了，不免觉得自己知识面还是太狭隘了，每周不是捣鼓新设计模式，就是研究新语法，关注技术新进展，这只能把自己培养成一颗 “黄金螺丝钉”，如果我未来能坚持十年，写了十年基础技术知识，可能也最多成为一颗 “钻石螺丝钉” 而已。我第一次非技术细节文章的尝试是第一百零三期的 "),a("a",{attrs:{href:"https://github.com/dt-fe/weekly/blob/v2/103.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%93%E5%AE%B6%E4%B8%8D%E5%86%8D%E5%85%B3%E5%BF%83%E6%8A%80%E6%9C%AF%E7%BB%86%E8%8A%82%E3%80%8B.md"}},[s._v("精读《为什么专家不再关心技术细节》")]),s._v("，这篇文章也道出了我对个人成长的看法：你想发挥更大的价值，就要能影响更多的人，研究 100 年前端技术成为不了马云；同理，让马云写前端，他也不可能一个人写出阿里巴巴。")]),a("br"),a("p",[s._v("实际上写作就是一件价值放大的事情，你将自己的优秀理念输出给其他人，让别人写出的代码和你一样优秀，这就可以提升整个团队的工作效率。但这还远远不够，代码只是软件研发流程的一部分，我逐渐发现，把握业务方向、做好团队管理这两大能力才能最大化输出自己的价值，所以后面又写了一些例如 "),a("a",{attrs:{href:"https://github.com/dt-fe/weekly/blob/v2/111.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%89%8D%E7%AB%AF%E6%9C%AA%E6%9D%A5%E5%B1%95%E6%9C%9B%E3%80%8B.md"}},[s._v("精读《前端未来展望》")]),s._v(" 对前端进行综合展望，"),a("a",{attrs:{href:"https://github.com/dt-fe/weekly/blob/v2/116.%E7%B2%BE%E8%AF%BB%E3%80%8A%E5%88%B7%E6%96%B0%E3%80%8B.md"}},[s._v("精读《刷新》")]),s._v(" 对领导力进行领悟，以及一些极客公园系列文章增强对商业的理解，这些看似偏离前端技术的文章最终都是为前端服务，一个优秀的前端 Leader 具备的素质至少有：敏锐的商业嗅觉、清晰的理解业务方向、管理好团队，管理好人才、同时还是一个方向的技术大拿。")]),a("br"),a("br"),a("p",[s._v("通过对商业、业务、管理的学习与写作，我并没有发现在专业知识上有多少延误，反而觉得自己以前认为是核心竞争力的 “技术思考” 变得越来越廉价，毕竟就前端技术甚至所有业务技术来说，理解任何一个技术点都没有绝对的壁垒，只要花费足够的时间就行了，难就难在需要花多久去理解，是否可以快速理解技术，理解业务。")]),a("br"),a("img",{attrs:{width:"220",src:"https://img.alicdn.com/tfs/TB1x6uBtQL0gK0jSZFxXXXWHVXa-762-1004.png"}}),a("br"),a("h3",{attrs:{id:"how---ru-he-zuo-fen-xiang"}},[s._v("How - 如何做分享 "),a("a",{staticClass:"header-anchor",attrs:{href:"#how---ru-he-zuo-fen-xiang"}},[s._v("§")])]),a("p",[s._v("写作的时候，只要明确文章主旨，句句点题就不会写的太差，一定不要企图将你的想法在一篇文章中全部表达，毕竟你没写的不代表你不知道，而东拼西凑的文章对读者没什么益处，毕竟读者是为了某个明确目的来读文章的，如果内容和标题关系不大，读者大概率会选择离开。")]),a("br"),a("p",[s._v("上面是最基本的写作技巧，我就不继续展开了，接下来要重点聊聊的是前端精读是怎么做分享的。我会从如何写作、如何坚持、如何形成正循环三个方面谈谈自己的感受。")]),a("br"),a("p",[s._v("首先是写作方式，前端精读的命题很明确，就是基于某个文章或者观点进行精读，因此每篇文章都有一个明确的主题。第二步是摘要，将文章内容精简的表达出来，这可以锻炼你的总结能力，也让读者能了解到背景知识。第三步是精读，这一步需要你有一些私藏干货，毕竟把文章直接翻译一遍是没有任何价值的，我在精读自己不熟悉领域的文章时经常遇到这个问题，此时我一般会找几篇类似的文章结合阅读，并找到一些可以互补的观点，这样的精读可以让文章的观点更加饱满。最后是总结，总结时可以点题，将重要内容再梳理一遍，也可以进行延伸，指出更进一步的思考方向。")]),a("br"),a("p",[s._v("为了让分享坚持下来，我在每周结束之前都会提前立好下周精读的 Flag，在 Github 开一个 issue，这样不仅可以提醒我周末的写作，还可以收获很多来自社区的讨论与反馈，让文章聚集了社区的智慧。这种提前立 Flag 的做法让我想到了自家小区物业费的收取方式，每年年初都会提前征收一整年的物业费，抛开商业手法不谈，这至少意味着物业对业务整整一年的承诺，这种承诺支撑了物业后续一整年的服务，也支撑了每周下一次的精读文章。")]),a("br"),a("p",[s._v("同时，我还找到了一种正循环模式促进写作，分别是让写作与工作、与分享、与生活结合。很自然的，我参与的数据中台工作本身就具有很大挑战性，工作中的内容与思考往往会成为精读内容的来源之一，比如之前写过的《手写 SQL 编译器》系列，因为数据工作中真的要用到这些知识。当我参加一些前端大会时，也可以顺便将分享稿整理成精读，将本来就要分享的内容分析得更彻底，有一种借力打力的感觉。在生活中，参加一些论坛，看过的书都可以成为精读的题材，无论是商业的，人文的，还是历史的，对多元化思维有帮助的内容都可以分享。")]),a("img",{attrs:{width:"450",src:"https://img.alicdn.com/tfs/TB1s5OAtHr1gK0jSZR0XXbP8XXa-1480-1136.png"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("回到主题，当我分享的时候，我在做什么？相信看完上面的内容，你已经得到了答案。")]),a("p",[s._v("当我在分享时，我在传播知识，扩大自己的影响力，这是显而易见动作。但在这背后，我同时也在践行终身学习理念，每次分享都是一次新知识的学习，是一次知识边界的拓展。也许是一次对工作的思考，也许是一次对生活的感悟，然而每一次都是成长的记录。")]),a("p",[s._v("思想不会因为传播给他人而减少，每一次分享都是在创造永不磨灭的价值，希望看到这篇文章的你也能认知到分享对自己、对他人的帮助，相信分享的力量，相信积累的力量。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},c170:function(s,t,a){s.exports=a.p+"img/MergeFlow.cb0ece30.png"},cb6d:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("Abstract Factory")])]),a("h2",{attrs:{id:"chou-xiang-gong-han"}},[s._v("抽象工厂 "),a("a",{staticClass:"header-anchor",attrs:{href:"#chou-xiang-gong-han"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("Abstract Factory（抽象工厂）属于创建型模式，工厂类模式抽象程度从低到高分为：简单工厂模式 -> 工厂模式 -> 抽象工厂模式。")])]),a("p",[a("strong",[s._v("意图：提供一个接口以创建一系列相关或相互依赖的对象，而无须指定它们具体的类。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h3",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),a("br"),a("p",[a("strong",[s._v("汽车工厂")])]),a("p",[s._v("我们都知道汽车有很多零部件，随着工业革命带来的分工，很多零件都可以被轻松替换。但实际生活中我们消费者不愿意这样，我们希望买来的宝马车所包含的零部件都是同一系列的，以保证最大的匹配度，从而带来更好的性能与舒适度。")]),a("br"),a("p",[s._v("所以消费者不愿意到轮胎工厂、方向盘工厂、车窗工厂去一个个采购，而是将需求提给了宝马工厂这家抽象工厂，由这家工厂负责组装。那你是这家工厂的老板，已知汽车的组成部件是固定的，只是不同配件有不同的型号，分别来自不同的制造厂商，你需要推出几款不同组合的车型来满足不同价位的消费者，你会怎么设计？")]),a("br"),a("p",[a("strong",[s._v("迷宫游戏")])]),a("p",[s._v("你做一款迷宫游戏，已知元素有房间、门、墙，他们之间的组合关系是固定的，你通过一套算法生成随机迷宫，这套算法调用房间、门、墙的工厂生成对应的实例。但随着新资料片的放出，你需要生成具有新功能的房间（可以回复体力）、新功能的门（需要魔法钥匙才能打开）、新功能的墙（可以被炸弹破坏），但修改已有的迷宫生成算法违背了开闭原则（需要在已有对象进行修改），如果你希望生成迷宫的算法完全不感知新材料的存在，你会怎么设计？")]),a("br"),a("p",[a("strong",[s._v("事件联动")])]),a("p",[s._v("假设我们做一个前端搭建引擎，现在希望做一套关联机制，以实现点击表格组件单元格，可以弹出一个模态框，内部展示一个折线图。已知业务方存在定制表格组件、模态框组件、折线图组件的需求，但组件之间联动关系是确定的，你会怎么设计？")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h3",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[s._v("在汽车工厂的例子中，我们已知车子的构成部件，"),a("strong",[s._v("为了组装成一辆车子，需要以一定方式拼装部件，而具体用什么部件是需要可拓展的")]),s._v("。")]),a("br"),a("p",[s._v("在迷宫游戏的例子中，我们已知迷宫的组成部分是房间、门、墙，"),a("strong",[s._v("为了生成一个迷宫，需要以某种算法生成许多房间、门、墙的实例，而具体用哪种房间、哪种门、哪种墙是这个算法不关心的，是需要可被拓展的")]),s._v("。")]),a("br"),a("p",[s._v("在事件联动的例子中，我们已知这个表格弹出趋势图的交互场景基本组成元素是表格组件、模态框组件、折线图组件，"),a("strong",[s._v("需要以某种联动机制让这三者间产生联动关系，而具体是什么表格、什么模态框组件、什么折线图组件是这个事件联动所不关心的，是需要可以被拓展的")]),s._v("，表格可以被替换为任意业务方注册的表格，只要满足点击 "),a("code",[s._v("onClick")]),s._v(" 机制就可以。")]),a("blockquote",[a("p",[a("strong",[s._v("意图：提供一个接口以创建一系列相关或相互依赖的对象，而无须指定它们具体的类。")])])]),a("p",[s._v("这三个例子不正是符合上面的意图吗？我们要设计的抽象工厂就是要 "),a("strong",[s._v("创建一系列相关或相互依赖的对象")]),s._v("，在上面的例子中分别是汽车的组成配件、迷宫游戏的素材、事件联动的组件。"),a("strong",[s._v("而无须指定它们具体的类")]),s._v("，也就说明了我们不关心车子方向盘用的是什么牌子，迷宫的房间是不是普通房间，联动机制的折线图是不是用 "),a("code",[s._v("Echarts")]),s._v(" 画的，我们只要描述好他们之间的关系即可，"),a("strong",[s._v("这带来的好处是，未来我们拓展新的方向盘、新的房间、新的折线图时，不需要修改抽象工厂。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h3",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("img",{attrs:{width:"800",src:"https://img.alicdn.com/tfs/TB1k8DVVkT2gK0jSZFkXXcIQFXa-1472-658.png"}}),a("p",[a("code",[s._v("AbstractFactory")]),s._v(" 就是我们要的抽象工厂，描述了创建产品的抽象关系，比如描述迷宫如何生成，表格和趋势图怎么联动。")]),a("p",[s._v("至于具体用什么方向盘、用什么房间，是由 "),a("code",[s._v("ConcreteFactory")]),s._v(" 实现的，所以我们可能有多个 "),a("code",[s._v("ConcreteFactory")]),s._v("，比如 "),a("code",[s._v("ConcreteFactory1")]),s._v(" 实例化的墙壁是普通墙壁，"),a("code",[s._v("ConcreteFactory2")]),s._v(" 实例化的墙壁是魔法墙壁，但其对 "),a("code",[s._v("AbstractFactory")]),s._v(" 的接口是一致的，所以 "),a("code",[s._v("AbstractFactory")]),s._v(" 不需要关心具体调用的是哪一个工厂。")]),a("br"),a("p",[a("code",[s._v("AbstractProduct")]),s._v(" 是产品抽象类，描述了比如方向盘、墙壁、折线图的创建方法，而 "),a("code",[s._v("ConcreteProduct")]),s._v(" 是具体实现产品的方法，比如 "),a("code",[s._v("ConcreteProduct1")]),s._v(" 创建的表格是用 "),a("code",[s._v("canvas")]),s._v(" 画的，折线图是用 "),a("code",[s._v("G2")]),s._v(" 画的，而 "),a("code",[s._v("ConcreteProduct2")]),s._v(" 创建的表格是用 "),a("code",[s._v("div")]),s._v(" 画的，折线图是用 "),a("code",[s._v("Echarts")]),s._v(" 画的。")]),a("br"),a("p",[s._v("这样，当我们要拓展一个用 "),a("code",[s._v("Rcharts")]),s._v(" 画的折线图，用 "),a("code",[s._v("svg")]),s._v(" 画的表格，用 "),a("code",[s._v("div")]),s._v(" 画的模态框组成的事件机制时，只需要再创建一个 "),a("code",[s._v("ConcreteFactory3")]),s._v(" 做相应的实现即可，再将这个 "),a("code",[s._v("ConcreteFactory3")]),s._v(" 传递给 "),a("code",[s._v("AbstractFactory")]),s._v("，并不需要修改 "),a("code",[s._v("AbstractFactory")]),s._v(" 方法本身。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h3",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("下面例子使用 javascript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("AbstractFactory")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("createProducts")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("concreteFactory: ConcreteFactory")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" productA = concreteFactory.createProductA();\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" productB = concreteFactory.createProductB();\n\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 建立 A 与 B 固定的关联，即便 A 与 B 实现换成任意实现都不受影响")]),s._v("\n    productA.bind(productB);\n  }\n}\n")])]),a("br"),a("p",[a("code",[s._v("productA.bind(productB)")]),s._v(" 是一种抽象表示：")]),a("ul",[a("li",[s._v("对于汽车工厂的例子，表示组装汽车的过程。")]),a("li",[s._v("对于迷宫游戏的例子，表示生成迷宫的过程。")]),a("li",[s._v("对于事件联动的例子，表示创建组件间关联的过程。")])]),a("p",[s._v("假设我们的迷宫有两套素材，分别是普通素材与魔法素材，只要在分别创建普通素材工厂 "),a("code",[s._v("ConcreteFactoryA")]),s._v("，与魔法素材工厂 "),a("code",[s._v("ConcreteFactoryB")]),s._v("，调用 "),a("code",[s._v("createProducts")]),s._v(" 时传入的是普通素材，则产出的就是普通素材搭建的迷宫，传入的是魔法素材，则产出的就是用魔法素材搭建的迷宫。")]),a("br"),a("p",[s._v("当我们要创建一套新迷宫材料，比如熔岩迷宫，我们只要创建一套熔岩素材（熔岩房间、熔岩门、熔岩墙壁），再组装一个 "),a("code",[s._v("ConcreteFactoryC")]),s._v(" 熔岩素材生成工厂传递给 "),a("code",[s._v("AbstractFactory.createProducts")]),s._v(" 即可。")]),a("br"),a("p",[s._v("我们可以发现，使用抽象工厂模式，我们可以轻松拓展新的素材，比如拓展一套新的汽车配件，拓展一套新的迷宫素材，拓展一套新的事件联动组件，"),a("strong",[s._v("这个过程只需要新建类即可，不需要修改任何类，符合开闭原则")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h3",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("任何设计模式都有其适用场景，反过来也说明了在某些场景下不适用。")]),a("br"),a("p",[s._v("还是上面的例子，如果我们的需求不是拓展一个新轮子、新墙壁、新折线图，而是：")]),a("ul",[a("li",[s._v("汽车工厂要给汽车加一个新部件：自动驾驶系统。")]),a("li",[s._v("迷宫游戏要新增一个功能素材：陷阱。")]),a("li",[s._v("事件联动要新增一个联动对象：明细趋势统计表格。")])]),a("p",[s._v("你看，这种情况不是为已有元素新增一套实现，而是实现一些新元素，就会非常复杂，因为我们不仅要为所有 "),a("code",[s._v("ConcreteFactory")]),s._v(" 新增每一个元素，还要修改抽象工厂，以将新元素与旧元素间建立联系，违背了开闭原则。")]),a("br"),a("p",[s._v("因此，对于已有元素固定的系统，适合使用抽象工厂，反之不然。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("抽象工厂对新增已有产品的实现适用，对新增一个产品种类不适用，可以参考结合了例子的下图加深理解：")]),a("img",{attrs:{width:"800",src:"https://img.alicdn.com/tfs/TB1Fbn7Vlr0gK0jSZFnXXbRRXXa-1416-852.png"}}),a("p",[s._v("拓展一个熔岩素材包是 "),a("strong",[s._v("增加一种产品风格")]),s._v("，适合使用抽象工厂设计模式；拓展一个陷阱是 "),a("strong",[s._v("增加一个产品种类")]),s._v("，不适合使用抽象工厂设计模式。为什么呢？看下图：")]),a("img",{attrs:{width:"800",src:"https://img.alicdn.com/tfs/TB12fL8VeL2gK0jSZFmXXc7iXXa-1696-640.png"}}),a("p",[s._v("创建迷宫这个抽象工厂做的事情，"),a("strong",[s._v("是把已有的房间、门、墙壁建立关联")]),s._v("，因为操作的是抽象类，所以拓展一套具体实现（熔岩素材包）对这个抽象工厂没有感知，这样做很容易。")]),a("br"),a("p",[s._v("但如果新增一个产品种类 - 陷阱，可以看到，抽象工厂必须将陷阱与前三者重新建立关联，这就要修改抽象工厂，不符合开闭原则。同时，如果我们已有素材包 1 ～素材包 999，就需要同时增加 999 个对应的陷阱实现（普通陷阱、魔法陷阱、熔岩陷阱），其工作量会非常大。")]),a("br"),a("p",[s._v("因此，只有产品种类稳定时，需要频繁拓展产品风格时才适合用抽象工厂设计模式。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},d7c5:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("数据之上·智慧之光 - 2018")])]),a("h2",{attrs:{id:"shu-ju-zhi-shang-zhi-hui-zhi-guang---2018"}},[s._v("数据之上·智慧之光 - 2018 "),a("a",{staticClass:"header-anchor",attrs:{href:"#shu-ju-zhi-shang-zhi-hui-zhi-guang---2018"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("本周精读内容是："),a("a",{attrs:{href:"http://www.fanruan.com/2018/databook2"}},[s._v("《数据之上 智慧之光》")]),s._v("，由帆软软件公司出品。")]),a("p",[s._v("帆软公司是国内一家做大数据 BI 和分析平台的提供商，主打产品是 "),a("a",{attrs:{href:"http://www.fanruan.com/finebi"}},[s._v("FineBI")]),s._v("。笔者所在阿里数据中台也处于数据分析应用的前沿，本次精读的文章就是帆软公司的 《数据之上 智慧之光 2018》，感谢提供这份国内数据市场研究报告，让我们更深入全面的了解国内数据市场的发展方向。")]),a("p",[s._v("随着 5G 的逐渐推行，网速比 4G 提高了 100 倍，将会为物联网打下通信基础，未来的世界将人与物、物与物进行互联。随着越来越多的设备接入网络，产生数据，而未来还有 6G、7G 将网速继续提高至 1 万倍、1 百万倍，利用卫星实现全球网络覆盖，将现实与虚拟融合等等，无不需要强大的数据处理分析技术才能掌握。")]),a("p",[s._v("数据的总量将呈几何倍数上升，如果不能提前对数据的存储、处理、挖掘和分析提出一套解决方案，那么 5G 时代的海量数据就是人类社会的累赘，如果有一套数据处理与分析的方案，我们就有可能掌握海量的数据为自己所用，利用数据进一步推动人类社会向前发展。")]),a("p",[s._v("上面是对未来的畅想，那么我国现阶段国内的数据市场的容量、需求是什么样呢？《数据之上 智慧之光》这本书给了我们答案。")]),a("p",[s._v("PS：本文使用 2018 年的数据。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("h2",{attrs:{id:"da-shu-ju-xing-ye-fa-zhan-qu-shi"}},[s._v("大数据行业发展趋势 "),a("a",{staticClass:"header-anchor",attrs:{href:"#da-shu-ju-xing-ye-fa-zhan-qu-shi"}},[s._v("§")])]),a("p",[s._v("2018 年中国大数据产业规模预计 329 亿元人民币，同比增长 39.4%。可以看到增长速度逐年增加，预计在 2020 年数据市场规模可达 586 亿元人民币。")]),a("p",[s._v("笔者查了一下，2018 年全国网上零售额为 90065 亿元，比数据市场规模多了一个数量级，所以我国的数据产业其实还在萌芽期，可能还需要 5 到 10 年才能完全成熟，这也意味着目前数据市场是一片蓝海，从后面的数据和国内数据应用使用情况也可以看出来。")]),a("p",[s._v("另外，各企业在大数据领域的投入资金与部门组织都同比 2017 年有所增加，其中接近四成的受访企业已经在应用大数据，较 2016 年提升了 4.5%，暂不考虑大数据的企业从 2016 年 7.8% 下降到 6.8%。")]),a("p",[s._v("从微观角度观察社会也能发现这样的趋势，近些年研究大数据的公司明显增多，许多公司都逐渐设立了 “数据分析” 岗位和部门，可视化大屏在 toB 与 toG 领域都越来越得到重视。")]),a("br"),a("h2",{attrs:{id:"qi-ye-shu-ju-ying-yong-qing-kuang"}},[s._v("企业数据应用情况 "),a("a",{staticClass:"header-anchor",attrs:{href:"#qi-ye-shu-ju-ying-yong-qing-kuang"}},[s._v("§")])]),a("p",[s._v("数据应用分为数据采集、数据治理、数据处理、数据分析这四大阶段，其中数据采集是获取数据的最重要方式，而数据治理是将分散在各种不同形态数据库的文件用统一方式管理起来，比如形成数据联邦，这是数据使用前最重要的一步治理。数据处理就是将数据按照业务需求进行计算，而不同量级的数据计算方式会不同，特别是大数据场景要分为离线计算与实时计算，只有极为重要、实时性要求强的指标才进行实时计算，现在正处于离线与实时计算混合的混合计算转型期。数据分析一般通过 BI 平台完成，也是分析数据最重要的一步，BI 也经历了漫长的版本迭代，第一阶段是数据报表阶段，第二阶段是具备分析能力与数据挖掘能力的分析阶段，第三阶段是机器自动识别用户意图的智能化分析阶段。")]),a("p",[s._v("从智慧之光的调查结果来看，只有 22.47% 的企业实用了 BI 系统，而使用 BI 系统的企业中，超过七成认为 BI 项目能较好的满足现在的需求。说明未来还会有更多企业使用 BI，BI 的市场还有 4 倍的增长空间。")]),a("p",[s._v("在数据应用成熟度方面，仅有 3.5% 的企业处于数据盈利阶段，也就是大部分企业对数据的治理还在投入阶段，但无需质疑，持续对数据进行投入一定能得到回报，但短期来看会拖累财务报表。")]),a("p",[s._v("再看目前企业的数据价值需求，看看业务方对 BI 工具的期望有哪些。")]),a("p",[s._v("期望从高到低分别是：")]),a("ul",[a("li",[s._v("(72.8%) 整合多系统数据，打通数据壁垒")]),a("li",[s._v("(69.1%) 提高报表数据效率，更快更准更省事")]),a("li",[s._v("(53.7%) 辅助管理预测，提高决策成功率")]),a("li",[s._v("(51.4%) 提高生产效率，降低人力成本")]),a("li",[s._v("(50.0%) 数据结合管理，优化管理方式")]),a("li",[s._v("(47.8%) 业务监管分析，促进业务增至")])]),a("p",[s._v("这个排列顺序基本上也是 BI 平台迭代的顺序。")]),a("p",[s._v("BI 刚起步时都要先做数据整合，对于大部分公司，数据孤岛的情况还是很普遍的，甚至有大量数据分散在各自工作人员电脑的 Excel 文件中，已存在的各业务平台见数据无法打通也很普遍，如果不能将多套系统间数据打通，你就没有对数据的掌控力。像阿里云的 "),a("a",{attrs:{href:"https://www.aliyun.com/product/dataphin"}},[s._v("Dataphin")]),s._v(" 就可以帮助企业建立数仓，建立一套数据资产管理体系，其中第一步就是帮助你打通数据壁垒。")]),a("p",[s._v("解决取数问题后，就可以建设 BI 平台了，BI 平台初期基本以构建报表为主，而构建报表的方式根据发展阶段也各有不同，下面是智慧之光中一张很经典的 BI 发展阶段：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1szfQb.CF3KVjSZJnXXbnHFXa-2432-1104.png"}}),a("p",[s._v("在 IT-完全主导型阶段，主要任务就是制作报表，而业务人员能配置的部分只有 BI 模版的 5%，剩余 95% 都需要 IT 人员参与开发，不仅浪费人力资源，而且对业务线的时间成本也很高。")]),a("p",[s._v("IT-强主导型阶段，BI 平台具有一定的配置能力，业务有 20% 的自主配置权，而 IT 仍需完成 80% 的工作。")]),a("p",[s._v("在业务强主导型阶段，BI 层 80% 的工作都可以由业务方完成，IT 人员只参与 20%，这 20% 可能包括复杂场景的定制，比如电子表格或者复杂的分析功能。这个阶段真正实现了更快更准更省事。")]),a("p",[s._v("业务完全主导型阶段，基本上 BI 层不需要 IT 人员参与，业务同学可以完全主导对 BI 平台的拓展，或者 BI 平台已经能满足业务线几乎所有的诉求，同时业务还能参与数据模型的控制，让业务能力下沉到数据层。到这个阶段的企业已经非常少了，也许只有少数互联网巨头可以达到这个阶段。")]),a("p",[s._v("智能自助型，这个阶段不需要 IT 人员参与，业务仅需参与 1%，原因是 99% 的需求都有人工智能自动分析出来，也就是将业务数据拿到后，计算机已经知道该怎么看这份数据了。智能自主型在国内还处于概念阶段，在国外 BI 工具比如 PowerBI 与 Tableau 已经在这个领域深耕多年了，然而门槛比较高，目前效果应该还不太理想，因为这个阶段一旦成熟，国内的 BI 企业将面临巨大冲击，之所以国内处于业务强主导阶段的 BI 平台依然存在，除了数据安全的理由之外，只能认为国外智能自助型 BI 平台依然 “不够智能”。")]),a("p",[s._v("通过上面的分析可以总结出，BI 平台不仅业务发展阶段迥异，对技术人才的要求在不同阶段也不一样，技术层面需要以 后端 -> 前端 -> ETL -> AI 人才 的递进态势演变，对技术人员来说，如何在 BI 技术演变的过程中不断自我学习，满足下个阶段的技术要求，是非常严峻的挑战。")]),a("p",[s._v("另一个值得关注的是企业数据来源，根据 2016 与 2017 年的对比，来自企业内部的数据正在逐渐增多，从外部购买的数据从 16.7% 降低到 15.1%，而从政府免费开放的数据比例从 13.5% 提升到了 14.6%。这表示企业正在逐渐摆脱对外部购买数据的依赖，转而产生更多自己业务的数据，而政府也在逐渐加强开放数据建设，努力减少各企业间数据资源的壁垒。")]),a("br"),a("h2",{attrs:{id:"qi-ye-shu-ju-shi-yong-fang-shi"}},[s._v("企业数据使用方式 "),a("a",{staticClass:"header-anchor",attrs:{href:"#qi-ye-shu-ju-shi-yong-fang-shi"}},[s._v("§")])]),a("p",[s._v("根据调查显示：")]),a("ul",[a("li",[s._v("（70.0%）使用传统的 SQL + Excel 分析数据")]),a("li",[s._v("（64.8%）使用业务系统自带的报表或分析功能")]),a("li",[s._v("（35.6%）使用 BI 工具")]),a("li",[s._v("（10.8%）手工写代码")])]),a("p",[s._v("首先频繁的手工写代码只有 10% 不到的比例，这是因为稍稍有点长远打算的企业，都会打造一支技术团队，而业务也会给技术团队打造一些生产效能提升的工具，只有 10% 左右的企业无法割舍短期利益，导致所有数据分析需求都要手工写代码。")]),a("p",[s._v("大部分企业依然采用 SQL + Excel 分析数据，这个结果在情理之中，因为 SQL + Excel 都是现成的工具，不需要研发成本，而 Excel 的强大分析能力也基本满足了业务需求。但这种模式无法共享分析结果，存在数据安全隐患，且无法进入分析与智能阶段。")]),a("p",[s._v("使用业务系统自带的报表或分析功能也占了 64.8% 的比例，笔者所了解到的中小型公司也的确属于这个阶段，公司内不同业务线都有自己的业务平台，每个业务平台内都有或多或少的数据分析和报表能力，这对大部分企业来说够用了，但对于要建立 "),a("strong",[s._v("数据中台")]),s._v(" 的企业来说，分散在各业务系统的数据与报表能力，反而是一种阻碍。PS：阿里数据中台已进入 2.0 阶段，但对大部分企业来说，是不可能越过数据中台 1.0，直接进入 2.0 的，就像不可能跳过 5G 做 6G 一样。")]),a("p",[s._v("只有 35.6% 的企业在使用 BI 工具，因为使用 BI 工具需要一定门槛，比如做数据治理等，当然也可以直接订购阿里云的 "),a("a",{attrs:{href:"https://www.aliyun.com/product/dataphin"}},[s._v("Dataphin")]),s._v(" 快速接入 QuickBI。")]),a("p",[s._v("在企业使用 BI 时，选型的考虑因素也很有意思：")]),a("ul",[a("li",[s._v("（69.1%）产品是否高效易用")]),a("li",[s._v("（59.2%）产品是否稳定性高，性能好")]),a("li",[s._v("（58.5%）产品是否拥有丰富强大的功能")]),a("li",[s._v("（51.4%）产品是否具备大数据分析能力")]),a("li",[s._v("（33.6%）采购成本")]),a("li",[s._v("（31.2%）生态与学习资源")]),a("li",[s._v("（24.4%）厂商本身的实力")])]),a("p",[s._v("可以看到，BI 工具靠自身实力吃饭的，而不依赖公司光环，因为业务方对实用性要求更大。")]),a("p",[s._v("69.1% 的企业看中是否高效易用，说明目前国内企业对 BI 培训能力较弱，希望有高投入产出比，同时也说明了 BI 自身的特性，它是面向非技术人员的产品，如果易用性不强，只是功能强大是没有用的。")]),a("p",[s._v("59.2% 的企业看中稳定性和性能，这是因为对数据分析来说，看报表是高频操作，业务方会使用 BI 查看 KPI 报表，发日报或月报，用户是无法忍受频繁使用的产品稳定性出现问题的。")]),a("p",[s._v("第三点就是功能是否强大，对一款面向用户的工具来说，如果功能有欠缺，就意味着无法满足业务需求。比如对折线图做归一化，如果 BI 平台的折线图自身不支持这个功能，使用者也没办法立马拉上一名前端同学拓展出这个功能，因为 BI 平台表面看上去易用，但底层设计复杂，一旦遇到功能不支持，除了等待更新外，没有更好的办法。")]),a("p",[s._v("最后一个超过 50% 的用户期待就是具备大数据分析能力，这是因为企业数据量级普遍都很大，而 BI 平台底层的多维建模一般采用 OLAP 查询，遇到海量数据可能要等上几十分钟，需要 BI 平台内置一些数据加速的功能。ROLAP 给予关系型数据库，特点是兼容性强、灵活性强，但查询速度慢，而 MOLAP 是实现将各维度数据计算好，查询时直接映射到多为数据库访问，性能好，但是对存储空间的依赖极高，需要付出大量的金钱才能支撑这种模式的查询。")]),a("p",[s._v("下面是企业对 BI 功能要求：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1itL4bW1s3KVjSZFAXXX_ZXXa-1676-1310.png"}}),a("p",[s._v("可以看到，对报表能力需求量最大，说明报表是 BI 工具基础的要求，也说明我国对数据的使用方式还停留在最初级的阶段。")]),a("p",[s._v("另一个就是移动 BI 需求，在移动端看报表，PC 端做报表已经非常普遍了。")]),a("p",[s._v("之所以数据填报排到了第三名，是因为不同公司并不是所有数据都统一管理，BI 支持数据填报，就可以将遗漏的数据录入进去。")]),a("p",[s._v("相信在未来，这个条形图最长边会逐渐移动到腰部。")]),a("p",[s._v("最后是企业面临的综合挑战：")]),a("ul",[a("li",[s._v("（64.8%）数据的整合与治理")]),a("li",[s._v("（58.1%）与管理层及业务部门的配合")]),a("li",[s._v("（51.8%）数据人才的培养")]),a("li",[s._v("（49.8%）数据分析工具的选择")]),a("li",[s._v("（42.4%）IT 部门自身的能力提升")]),a("li",[s._v("（38.1%）衡量数据分析的价值产出")]),a("li",[s._v("（27.6%）公司重视程度或预算投入")]),a("li",[s._v("（14.1%）项目风险的控制")])]),a("p",[s._v("数据整合与治理是最大问题再次反映了我国数据可视化处于较为初级阶段，第二名的 “与管理层及业务部门的配合”，也印证了这一点，如何将数据价值传达给管理层，让管理层认可前期投入在未来是可以得到回报的，是在企业里做数据分析比较头疼的问题，而其他业务部门如果不予配合，不将数据交给数据中台部门，又难以解决数据整合的问题，而这个往往又依赖管理层的决定，因此管理层与业务部门的配合问题是相辅相成的。")]),a("p",[s._v("第三名是数据人才培养的问题，这个问题笔者认为还好，前几年流行大数据人才，近几年流行 AI 人才，我国数据人才应该有不少的储备。")]),a("p",[s._v("后面几项最重要的就是 衡量数据分析的价值产出，任何做数据的部门，如果不能让数据为公司带来价值，这件事件就没有可持续性。笔者建议从数据整合后的管理提效，节省机器成本的角度计算出收益，从数据分析平台为其他业务部门提供的决策依据，计算出为业绩提高作出的贡献，再从对公司内部做报表、邮件的研发人力节省，管理层快速查看公司整体实时数据分析的角度计算出软贡献价值。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("尽管 BI 平台与数据分析可以为公司带来巨大的价值，但制作 BI 平台的成本是相当大的，而且 BI 平台具有马太效应，目前国际第一梯队的 Tableau、PowerBI 无论是吸引的人才，投入的资源，市场份额都远超追赶者的总和。")]),a("img",{attrs:{width:"800",src:"https://img.alicdn.com/tfs/TB1xd_1b2WG3KVjSZFPXXXaiXXa-1860-1027.png"}}),a("p",[s._v("从 17-18，18-19 的 BI 四维度对比可以看出，低端 BI 的角逐正在越来越激烈，行业龙头 PowerBI 与 Tableau 位置越来越稳，国内 BI 龙头 FineBI，以及正在逐渐发力的 QuickBI 希望能挤进国际梯队，在 BI 技术领域拉平与发达国家的差距。")]),a("blockquote",[a("p",[s._v("PS：目前国内市场的情况，反而不适应 PowerBI 与 Tableau 阶段的 BI 工具，给国产 BI 工具创造了发展机遇，我们要抓住这次机遇带领中国数据市场走向第三代增强分析型，并使国内 BI 工具在国际市场占有一席之地。")])])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},da2d:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("智能商业")])]),a("h2",{attrs:{id:"zhi-neng-shang-ye"}},[s._v("智能商业 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zhi-neng-shang-ye"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[a("a",{attrs:{href:"https://book.douban.com/subject/30357931/"}},[s._v("智能商业")]),s._v(" 是阿里巴巴前总参谋长曾鸣于 2018-11 出版的商业图书，对最近 20 年中国商业以及互联网发展有着深刻的总结，并描述了未来智能商业的蓝图。")]),a("p",[s._v("笔者之所以读这本书，是因为笔者所在阿里巴巴数据中台，需要更深刻的理解数据，而《智能商业》就提到了数据时代的变革，对笔者工作有所帮助。")]),a("p",[s._v("但读完这本书后，笔者发现不同人站在不同视角会有不同的理解：如果你是一名数据行业从业者，你可以理解数据在当今行业发展中如何起到作用；如果你是企业高管，你会领悟到商业平台发展的规则；如果你是一名创业者，你能体会到点线面体的存在，找到自己的定位；如果你是一名管理者，你能领域到管理模式正在发生的变化；如果你是一名传统行业从业者，你能体会到为什么互联网会对传统行业带来这么大的冲击；如果你是一名社会评论家，你会找到衡量智能时代对人类社会带来影响的标尺，等等。商业是推动人类社会发展的源动力，甚至也是文化与战争的源头，智能商业正因为将商业讲的通透，才摆脱了普通商业书籍枯燥的理论体系，从社会实践中总结理论，最终能上升到富有哲理的思考。")]),a("p",[s._v("智能商业一书中有许多关键词，比如 “三浪叠加” “网络协同” “数据智能” “C2B” “S2B2C” “点线面体” “创造力革命” “网红” “互联网 X” 等等，能将这些关键词串起来的，笔者认为是 “商业演化”，在近几十年范围内，商业模式存在一些不变底层逻辑（“三浪叠加” “网络协同” “数据智能”），而在大趋势下存在不断演变的商业模式（“C2B” “S2B2C” “点线面体” “创造力革命” “网红” “互联网 X”）。")]),a("p",[s._v("读完书后会发现，这么多的关键词，最终都为了实现 “C2B” 这个商业最终演化目标，即便是远在十八世纪的工业革命，也在为 C2B 模式打下让物质资源极大丰富的生产力基础，而网络协同和数据智能，都为了让商业规模更大，精准度更强，可以个性化识别每个用户的需求。新的组织模式也是为了更高效服务用户，整合社会 “点线面体” 的生态关系最终可以形成 “C2B” 的服务网络，而网红、互联网 X 都是 C2B 转型在不同阶段、不同行业的尝试。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("智能商业全书分为六个章节，分别是 “智能商业”、“商业模式变革”、“战略变革”、“组织变革”、“案例分析”、“关于未来”。")]),a("p",[s._v("笔者看过一些类似的书评，将书中的观点一一枚举出来，这样的解读笔者认为是难以抓到重点的。看似把重点一一提取了出来，但没有一条 “逻辑线” 将其贯穿，分散的理解任何一个知识点都不会有太大的帮助。而这条 “逻辑线” 其实就是作者的目录组织结构。")]),a("p",[s._v("任何一本书，写作的目的是作者为了全面阐述一个观点，书中的重点都是一个个割裂的小观点，作者会通过目录方式组织一条最合理的逻辑路线，将这些重点串联起来，最终引出作者想阐述的大观点（智能商业），因此请跟着笔者从这本书的章节结构开始，有一个连贯的理解。")]),a("br"),a("p",[a("strong",[s._v("前言")])]),a("p",[s._v("前言笔者认为是最精彩的部分，因为提到了一个核心概念 “三浪叠加”，中国人口众多，土地广袤，互联网发展程度不均衡，因此任何互联网模式都可能存在，再加上互联网自身演化很快，当第二浪盖过第一浪时，第三浪已经悄然形成了，只从规模上可能难以分辨处于尾声的第一浪与处于巅峰的第二浪，更难分辨出还没有起色的第三浪在哪。读完这本书如果能看清楚中国商业发展的前三浪，并预测出未来三浪，目的就达到了。")]),a("br"),a("p",[a("strong",[s._v("智能商业")])]),a("p",[s._v("第一章的名字和书名一样，表示我们现在正处于智能商业时代。通过对中国社会的分析，解释了为什么商业时代发展的这么快，而且为什么创业方向那么多，有些行业快速崛起，有些行业快速衰退，而想要抓住未来，就要把握住互联网机遇，利用"),a("strong",[s._v("网络协同")]),s._v("与"),a("strong",[s._v("数据智能")]),s._v("实现智能商业，然后为什么这样的智能商业模式可以胜出。")]),a("br"),a("p",[a("strong",[s._v("商业模式变革")])]),a("p",[s._v("第二章讲的是商业模式由传统的 B2C 逐渐演变到 C2B，而在 C2B 演变的过程中，一种过渡阶段 S2B2C 正在快速崛起，而这些名词并非人为创造，而是商业发展自然演化而来的，能理解到 S2B2C 是通向 C2B 的自然演化路径，自然就能理解现在一些企业模式（比如网红、大搜车）等，也能自然理解 S2B2C 的不足（毕竟是过渡阶段），未来的战略方向自然就清晰了。")]),a("br"),a("p",[a("strong",[s._v("战略变革")])]),a("p",[s._v("前两章分别介绍了什么是智能商业，为什么要做智能商业，以及商业模式的演变，那第三章就自然要介绍企业战略变革了。第三章介绍了企业战略如何转型才能应对智能商业的节奏，比如何制定战略计划，以及通过 点-线-面-体 理解企业在市场中的定位，理解了这一点，不仅能理解各企业在市场中定位，还能理解之间相互关系，以及 点-线-面-体 的定位是可以改变的，抓住机遇的企业会逐渐向上发展，失去机遇的企业会逐渐向下退化。")]),a("p",[s._v("理解了 点-线-面-体 的特性，可以更好的找准自己的定位，越往上资源越多，但排他性就越强，大部分时候，做一个深耕垂直行业的点，虽然同质化可能很多，但竞争不是排他性的，而且有线与面的平台支撑，特别是合理利用多个 “面” 后，可能爆发出强劲的商业价值，比如网红就是同时利用多个 “面” 的典型例子。")]),a("blockquote",[a("p",[s._v("从战略变革这一章可以看到，这本书虽然前两章站在 BAT 高级战略的视角俯瞰商业演化，看似与普通企业，普通个人没什么关系，但读到战略变革这一章时，可以明显体会到理解 “面” 与 “体” 角度下商业思维后，可以给 “点” 与 “线” 带来巨大的战略价值。")])]),a("br"),a("p",[a("strong",[s._v("组织变革")])]),a("p",[s._v("第四章是组织变革，因为当战略变革后，必须轮到组织变革了。工业革命带来了生产力的极大提高，那互联网则带来了创造力革命的浪潮，没有统一机器的约束，每个人都能充分发挥自己的创造力 - 前提是组织管理模式要支持。一个新的组织管理模式不是自上而下的分配任务，而是自下而上，充分发挥每个人创造力的 “赋能” 管理模式。都是互联网的管理模式是打平的，其实这是终极的理想情况，通过形成自组织协同网络，充分调动每一个人的创造力。")]),a("br"),a("p",[a("strong",[s._v("案例分析")])]),a("p",[s._v("读到第五章就没有多少新概念了，但第五章是真正把前四章理论映射到现实案例的实战环节，这一章我们能看懂许多企业战略背后的战略模式，都可以归纳到网络协同、数据智能的布局，商业模式都在向 C2B 转型，旧的面被新的面取代而下降为线，线抓住了机遇逐渐发展成面，多个面相互协同逐渐形成了 “体” 等多个维度的变化。")]),a("br"),a("p",[a("strong",[s._v("关于未来")])]),a("p",[s._v("第六章是对未来的判断，重点在互联网与传统产业如何碰撞，提出的 互联网 x 概念背后有着更深刻的含义。如果你今年听说了 “产业物联网” 这个名词，可以甄别一下相应的企业，是仅仅将互联网技术运用到了传统行业，还是将传统行业从底层的运作逻辑就互联网化了呢？互联网不仅是一种技术，更是一种思维，互联网思维可以将被传统行业束缚住的各个流程逐渐还原到最原始、高效的模样。")]),a("p",[s._v("比如说传统工程需要提前计算销量固化产能，但加入了互联网快速反馈的网络，就可以实时调整产能，当然这需要整个生产流程的互联网化，将整个环节都做到快速反馈。")]),a("br"),a("p",[a("strong",[s._v("结语 - 新文明：感受未来已来")])]),a("p",[s._v("印象最深的是引用了经济学家周其仁的一句话：“文明的一次次传承和复兴，就是一步步找回对人的尊重”。害怕机器取代人类的思想还是被局限在现有的世界观、价值观之中的，将工人固定在工厂流水线，或者程序员每天写着相似的业务逻辑，本身就是一种践踏人类尊严的行为，而计算机可以逐步取代这些低创造性的工作，可以理解为抢了那些人的饭碗，但站在历史长河的角度，何不是还给人类以尊严？")]),a("br"),a("h2",{attrs:{id:"zhi-neng-shang-ye-1"}},[s._v("智能商业 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zhi-neng-shang-ye-1"}},[s._v("§")])]),a("p",[s._v("首先是分析互联网巨头都至少做对了这三个方向中的两个："),a("strong",[s._v("在线化、智能化、网络化")]),s._v("。")]),a("p",[s._v("在线化是指将业务都搬到互联网上，这基本是必备的一条。智能化是利用算法打造竞争优势，比如谷歌搜索算法。网络化就是形成多方共赢的协作网络，比如广告主与网站主通过谷歌搜索形成网络化协作。")]),a("p",[s._v("简介提到的 "),a("strong",[s._v("网络协同")]),s._v("与"),a("strong",[s._v("数据智能")]),s._v(" 就是指后两者，它们之间要形成一种反馈闭环就形成了智能商业的双螺旋：")]),a("p",[a("strong",[s._v("网络协同")]),s._v(" 产生数据，通过 "),a("strong",[s._v("数据智能")]),s._v(" 进行学习，进一步优化 "),a("strong",[s._v("网络协同")]),s._v("。")]),a("p",[a("strong",[s._v("网络协同")]),s._v(" 需要建立起一张多角色之间的协同网，比如优步组织的司机与乘客的协同网。协同网络越复杂，经济效益越大、门槛越高，比如淘宝的协同网络非常复杂，体现在协同者多（买家，卖家，物流，客服，淘女郎）等等，他们之间也有相互关联，各角色对网络需求粘性强，网络的不可替代性就高。")]),a("p",[a("strong",[s._v("数据智能")]),s._v(" 现在所有企业都没有充分利用数据，数据的潜在价值是无穷的，理论上可以利用数据做任何战略决策、管理决策。")]),a("p",[s._v("而网络化与智能化叠加，会产生黑洞效应，也就是数据越多越吸附数据，网络协同越多就越容易扩张出新的协同。")]),a("p",[s._v("作者对 "),a("strong",[s._v("互")]),s._v(" "),a("strong",[s._v("联")]),s._v(" "),a("strong",[s._v("网")]),s._v(" 这三个字的拆字解读也更容易让我们理解互联网的本质：")]),a("p",[a("strong",[s._v("联：")]),s._v(" 联接，从 PC 互联网开始，到移动互联网，再到万物互联，联接内容越来越多。")]),a("p",[a("strong",[s._v("互：")]),s._v(" 交互，从一对多的门户时代，到通过关注方式的微博时代，再到社交朋友圈时代，交互越来越简单，越来越频繁，也越来越精准。")]),a("p",[a("strong",[s._v("网：")]),s._v(" 网络协同。")]),a("p",[s._v("看了这么多概念，不知道你是否能理解智能商业的概念呢？也许每个人都有自己的体会，也许智能商业概念难以被定义，但 "),a("strong",[s._v("网络协同")]),s._v("、"),a("strong",[s._v("数据智能")]),s._v(" 一定是核心，谁能充分利用这两股力量，将其充分发挥黑洞效应，形成一套更广泛的“互”，更多的“联”，更复杂的“网”络协同，谁就能更好利用互联网实现智能商业。")]),a("br"),a("h2",{attrs:{id:"shang-ye-mo-shi-bian-ge"}},[s._v("商业模式变革 "),a("a",{staticClass:"header-anchor",attrs:{href:"#shang-ye-mo-shi-bian-ge"}},[s._v("§")])]),a("p",[s._v("商业领域较为常见的模式有 B2B、B2C、C2C。")]),a("p",[s._v("B2B 代表企业是阿里巴巴、中化网，阿里巴巴是水平 B2B，是指企业与客户之间是平行关系；而中化网属于垂直 B2B，帮助企业寻找上下游合作伙伴。")]),a("p",[s._v("B2C 代表企业是亚马逊、天猫、京东，也就是直接把商品卖给消费者。")]),a("p",[s._v("C2C 代表企业是易贝、淘宝，即个人用户服务与个人，淘宝主要是个人用户开网店卖给个人。")]),a("p",[s._v("而商业模式的变革，是指这些模式最终都要演化为 C2B 模式，即个人提出需求，企业快速满足。按照笔者理解，C2B 是由客户驱动的模式，虽然只是简单的单词调整位置，但背后需要企业做巨大的转型，不仅组织结构需要调整，还需要企业具有第一章说的 “智能商业” 属性，因为只有将服务在线化，通过数据智能与网络协同，才能精准触达每一位消费者，了解每个人的需求，快速服务与消费者。")]),a("p",[s._v("然而快速服务消费者的需求还需要背后的供应链平台支持，所以 C2B 将以客户驱动的模式一直改造到背后的供应链逻辑。")]),a("p",[s._v("然而 C2B 模式跨度太大，最近还诞生了一种过渡模式，就是 S2B2C 的模式，S 指的是供应平台，通过对小 B 的赋能，让小 B 直接服务于 C。这种模式是看场景的，因为只有 S2B 的价值大于单纯的 B，这个模式才行得通，所以在比如汽车、医药行业，小 B 急需 S 赋的业务场景可以做起来，而在本身就有大 B 存在的行业，就算有 S 赋能，小 B 依然竞争不过大 B，就不适合 S2B2C 这种模式。")]),a("p",[s._v("另外 S2B2C 的模式也在升级，未来的产品可能会同时透出 S 于 B 的品牌，因为只透出 B 的品牌，可能导致 S 不能很好的掌握消费者需求，只透出 S 的品牌，就变成了传统加盟模式，而加盟模式最大的问题是无法发挥每个小 B 的积极性触达客户，加盟本质上还是 B2C，比如肯德基，一个大品牌对应每个消费者，就算加盟再多店铺也不会改变这一点，但是 S2B2C 比如网红模式，淘宝平台给网红赋能，网红通过自己的品牌吸引能力圈住一批客户，带来非常高的转化率，这就结合了两者优势。")]),a("p",[s._v("另外也提到了云集，笔者以前认为云集是一种传销模式，和微商差不多，但其实云集要做的事情就是 S2B2C，将供应链完全打通后，包括网络系统一并提供给小 B，云集的小 B 就是任何有微信的用户，用户的资源就是他的朋友（朋友圈），所以云集号称没有商品就能做卖家，因为它的 S 服务做得好，集成性高，给小 B 带来的便利性就高。但问题是 小 B 到 C 环节是云集的弱势环节，拥有朋友圈的普通人与网红有本质的区别，普通人随意转发消息也许会带来朋友的反感与屏蔽，而普通人也不能为客户带来更大的价值，反观网红，他们可以得到粉丝的认可，成为粉丝的榜样，但是你愿意认可朋友圈里随便一个人成为你的榜样吗？")]),a("p",[s._v("第二章总的来说解读了目前出现的网红现象，以及一些做的较好的独角兽（比如土巴兔、大搜车），其实他们都属于 S2B2C 的模式，而他们最终的目的地是 C2B。")]),a("br"),a("h2",{attrs:{id:"zhan-lue-bian-ge"}},[s._v("战略变革 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zhan-lue-bian-ge"}},[s._v("§")])]),a("p",[s._v("既然商业模式变革了，战略也要变革。之前也说过互联网处于三浪叠加状态，从 B2B 开始产生了很多新模式，从 C2B 到 S2B2C，比如 S2B2C 的模式也是在发展过程中逐渐发现的新模式，因此企业对战略的制定要采取一种高效反馈闭环，"),a("strong",[s._v("核心在于做战略实验")]),s._v("。")]),a("p",[s._v("首先确定几个未来可能的战略方向，各投入一些人力尝试，尝试一年后自然会发现正确的方向，此时再将其他方向合并到正确方向。比如 2011 年阿里巴巴独立了三个子公司 - 淘宝、天猫、一淘，是为了赌未来的局势到底是 B2C，还是 C2C，还是一个搜索引擎指向无数小 B2C。最终发现由于中国网络基础设施还不成熟，导致独立 B2C 成本太高，因此 一淘 就回到了阿里巴巴。")]),a("p",[s._v("因此当你发现公司在同时做几个相似的业务时，先不要急着觉得公司傻，这样做是在浪费资源，但你是否能看清楚这几个业务间微妙的差别？也许你不能猜到哪一个才是未来方向（能猜到你就当 CEO 吧），但至少能理解公司这样做的战略意图，而不是做什么都是淘宝。")]),a("p",[s._v("对于企业战略选择，作者给出的建议是 "),a("strong",[s._v("点-线-面-体")]),s._v("。也就是企业一定要在这其中找到自己的定位。")]),a("p",[s._v("根据笔者读后的理解，点就是各种各样服务的角色，比如卖家、模特、独立开发者都属于点。线就是连接点与面沟通桥梁，比如微商或微博大 V 都属于线，原因是他们联接了平台与点。面就是指平台，比如淘宝属于面，因为它撬动了整个行业的资源，对上面无数个点赋能，联接了无数个点，面也是竞争最激烈的一环，也就是所谓的生态竞争，如果面对点的赋能力度不够，点也许就被其他的面吸引过去了。体是最大的概念，由多个 "),a("strong",[s._v("相互协同的面")]),s._v(" 组成，比如物流平台、网购平台、支付平台这三个面之间相互协作，才能逐渐形成体。")]),a("p",[s._v("顺带一提，体不是一开始就形成，面也不是谁设计出来的，而是先有一个简单构想，根据市场需求逐步演化过来的，比如淘宝就是由 BBS 演化过来的，那 BBS 就是淘宝的基因，因此淘宝可以协同那么多点，可以快速反馈用户需求，可以演化出支付、物流、云业务并各自独立发展成新的面。")]),a("p",[s._v("点-线-面-体 定位越上升，拥有的资源就越多，但面对的变化挑战就越多，其中“面”的竞争最为激烈，比如传统媒体本来是面，但在门户网站出现有，就降维到了点，微博的出现又使门户网站降为成线，而微信的出现使微博降为成线。")]),a("p",[s._v("所以看似风光的 BAT 都选择了最为艰难的 “体” 的打造，而笔者认为，到了体这个级别，将撬动巨量的社会资源，带来巨大的回报，但排他性也是最强的。一个最完整的 “体” 本质上就是一个全面的协同网络 - 国家，国家与国家之间的排斥性大家可以想象，因此留给体的位置并不多，而新体的出现必然会与旧体展开生死决战。因此如果创业，将自己定位为“点”是比较靠谱的，因为有大量的“面”资源可用，只要能找到自己的亮点，就算有竞争，也不会收到太大的影响。")]),a("br"),a("h2",{attrs:{id:"zu-zhi-bian-ge"}},[s._v("组织变革 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zu-zhi-bian-ge"}},[s._v("§")])]),a("p",[s._v("战略变革后，就轮到组织变革了。组织变革的目的是最大程度激发员工的创造力，因此自上而下的结构是不适合了，需要一种新的组织形态与管理思路。")]),a("p",[s._v("这种新的管理思路就是 “赋能” 的思路，一方面，赋能的思路可以提升员工的自主程度，充分发挥其创造力，一方面，赋能可以转变管理者的管理方式，使一个经理能管理十几、二十几个下属。互联网行业的工资都很高，尤其是顶尖人才，对于金钱的渴望已经不是找工作的最大决定因素，“成就感” “使命感” 更容易受这些顶尖人才的青睐，因此 “赋能” 的管理思路也是招募到顶尖人才的方法。")]),a("p",[s._v("最后作者提到了 “自组织协同网”，这是一个非常超前的概念，也源于企业最大的痛点 - 如何衡量 KPI。")]),a("p",[s._v("随着商业环境复杂性提高，几个核心指标远不能反应一个企业真实情况。有句话说，如果你只看一个指标，那最后达成的方式一定是你最不愿意看到的，比如淘宝为了冲刺销量 KPI，出了全年免网购费用的年卡，也许一天就能完成全年 KPI，但未来一年内可能会亏空整个公司老本。因此利用数据，从多个维度衡量指标是唯一的解法，换个说法，就是用复杂性对抗复杂性。")]),a("p",[s._v("通过将公司所有业务数据化，训练出一个逐步优化的模型，是可能从所有维度逐渐趋向最真实反馈公司表现的多维度指标的，衡量员工工作绩效方式也同理。")]),a("p",[s._v("读完这一段，笔者感受到数据最终也会被用在员工身上这句话，简单来说就是晋升答辩不用写 PPT 了，年底通过上千、上万种维度对你进行综合测评，直接出结果。现在已经能感受到公司在这个方向发力了，第一步是将所有开发过程数据化，也许离这一天已经不远。")]),a("br"),a("h2",{attrs:{id:"an-li-fen-xi"}},[s._v("案例分析 "),a("a",{staticClass:"header-anchor",attrs:{href:"#an-li-fen-xi"}},[s._v("§")])]),a("p",[s._v("案例分析十分精彩，由于篇幅限制，笔者就不洋洋洒洒的转述了，如果感兴趣强烈推荐读"),a("a",{attrs:{href:"https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.1.5518639bdKutaT&id=587836001802&standard=1&user_id=832978172&cat_id=2&is_b=1&rn=ab05936e7d8ab2699ab0bbc07bb2cb3f"}},[s._v("原文")]),s._v("，笔者至少还会再读一遍。")]),a("p",[s._v("从案例分析中，有两个核心观点笔者在此处提一下。")]),a("p",[s._v("第一个是平台演化的自然性，作者以淘宝的发展历程作为案例，说明了淘宝并不是顶层设计的产物，而是根据市场反馈的产物，唯有如此才能在高速变化的时代搭建一个平台。")]),a("p",[s._v("第二个是网红案例，网红不仅完成了点到线的演化，而且是综合利用了多个“面”的案例，通过综合利用社交平台（微博），电商平台（淘宝），快速反应供应链平台（由网红推动产生的新型供应链），结合这三个平台，网红这个线被赋予前所未有的能量，带来了巨大收益。")]),a("br"),a("h2",{attrs:{id:"guan-yu-wei-lai"}},[s._v("关于未来 "),a("a",{staticClass:"header-anchor",attrs:{href:"#guan-yu-wei-lai"}},[s._v("§")])]),a("p",[s._v("读完本书的目的，不仅是了解当下的智能商业，更是为了思考未来。")]),a("p",[s._v("在这个大变革时代，未来战略是难以预测的，所以凭空去勾勒未来蓝图没有什么意义，我们要在通过战略实验快速试探出未来几年的方向，在第二浪即将到达巅峰时，找到第三浪并积极布局。")]),a("p",[s._v("其实本书只能给出寻找战略方向的方法论，而不能给出具体的未来发展方向是什么，因为这套方法论本身就是通过战略实验快速寻找方向的过程，唯有投入资源去做尝试，仔细观察身边发生的变化，才能逐渐找到未来的新商业模式。未来的商业模式也是在逐步演变的，受到的影响因素太多，因此大概处于一种 “不可观测” 的状态，但至少未来十年内 C2B 的模式，笔者认为是一个固定的大方向，而传统行业与互联网结合的产业互联网也是新的发展机遇，利用互联网优化传统行业的各个环节，是一个确定的方向标。")]),a("p",[s._v("无论未来商业怎么发展，都会为消费者带来越来越好的体验，这是一个消费为王的时代，根据消费者的需求，掀起从平台到供应链的全方位改造，目的是带来更好的消费体验。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("读完了智能商业，笔者留下一个思考题：尝试站在智能商业的角度，分析你熟悉的公司各处于什么发展阶段，走的是什么商业模式？")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},dbb4:function(s,t,a){var e=a("23e7"),n=a("83ab"),l=a("56ef"),i=a("fc6a"),r=a("06cf"),v=a("8418");e({target:"Object",stat:!0,sham:!n},{getOwnPropertyDescriptors:function(s){var t,a,e=i(s),n=r.f,_=l(e),c={},o=0;while(_.length>o)a=n(e,t=_[o++]),void 0!==a&&v(c,t,a);return c}})},e00a:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("DCI")])]),a("h2",{attrs:{id:"jia-gou-she-ji-zhi-dci"}},[s._v("架构设计之 DCI "),a("a",{staticClass:"header-anchor",attrs:{href:"#jia-gou-she-ji-zhi-dci"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读文章是："),a("a",{attrs:{href:"http://www.artima.com/articles/dci_vision.html"}},[s._v("The DCI Architecture")])])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("随着前端 ES6 ES7 的一路前行， 我们大前端借鉴和引进了各种其他编程语言中的概念、特性、模式; 我们可以使用函数式 Functional 编程设计，可以使用面向对象 OOP 的设计，可以使用面向接口的思想，也可以使用 AOP, 可以使用注解，代理、反射，各种设计模式； 在大前端辉煌发展、在数据时代的当下 我们一起阅读了一篇设计相关的老文： 《The DCI Architecture》 一起来再探索和复习一下 相关的设计和思想")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[s._v("DCI 是数据 Data 场景 Context 交互 Interactions 简称， 重点是关注 数据的不同场景的交互行为， 是面向对象系统 状态和行为的一种范式设计；")]),a("p",[s._v("DCI 在许多方面是许多过去范式的统一，多年来这些模式已经成为面向对象编程的辅助工具。")]),a("p",[s._v("尽管面向切面的编程（AOP）也有其他用途，但 DCI 满足了许多 AOP 的应用以及 Aspects 在解决问题方面的许多目标。根据 AOP 的基本原理，DCI 基于深层次的反射或元编程。")]),a("p",[s._v("与 Aspects 不同，角色聚合并组合得很好。Context 提供角色集之间的关联的范围关闭，而 Aspect 仅与应用它们的对象配对。")]),a("p",[s._v("在许多时候，虽然混合本身缺乏我们在 Context 语义中发现的动力 ，但 DCI 反映了混合风格策略。")]),a("p",[s._v("DCI 实现了多范式设计的许多简单目标，能够将过程逻辑与对象逻辑分开。然而，DCI 具有比多范式设计提供的更强大的技术更好的耦合和内聚效果")]),a("br"),a("p",[s._v("**结合 ATM 汇款场景案例，讲解了一下 DCI ** "),a("strong",[s._v("角色提供了和用户相关 自然的边界，以转账为例，我们实际谈论的是钱的转移，以及源账户和目标账户的角色，算法(用例 角色行为集合)应该是这样：")])]),a("ul",[a("li",[s._v("账户拥有人选择从一个账户到另外一个账户的钞票转移。")]),a("li",[s._v("系统显示有效账户")]),a("li",[s._v("用户选择源账户")]),a("li",[s._v("系统显示存在的有效账户")]),a("li",[s._v("账户拥有人选择目标账户。")]),a("li",[s._v("系统需要数额")]),a("li",[s._v("账户拥有人输入数额")]),a("li",[s._v("钞票转移 账户进行中(确认金额 修改账户等操作)")])]),a("br"),a("p",[a("strong",[s._v("设计者的工作就是把这个用例转化为类似交易的算法，如下：")])]),a("ul",[a("li",[s._v("源账户开始交易事务")]),a("li",[s._v("源账户确认余额可用")]),a("li",[s._v("源账户减少其帐目")]),a("li",[s._v("源账户请求目标账户增加其帐目")]),a("li",[s._v("源账户请求目标账户更新其日志 log")]),a("li",[s._v("源账户结束交易事务")]),a("li",[s._v("源账户显示给账户拥有人转账成功。")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("\ntemplate <"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("ConcreteAccountType")]),s._v(">\n"),a("span",{staticClass:"hljs-title"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("TransferMoneySourceAccount")]),s._v(": "),a("span",{staticClass:"hljs-title"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("MoneySource")]),s._v("\n")]),s._v("{\n"),a("span",{staticClass:"hljs-attr"},[s._v("private")]),s._v(":\n ConcreteDerived *"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("self")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" static_cast<ConcreteDerived*>("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(");\n }\n "),a("span",{staticClass:"hljs-keyword"},[s._v("void")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("transferTo")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("Currency amount")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// This code is reviewable and")]),s._v("\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// meaningfully testable with stubs!")]),s._v("\n    beginTransaction();\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (self()->availableBalance() < amount) {\n      endTransaction();\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" InsufficientFunds();\n    } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n      self()->decreaseBalance(amount);\n      recipient()->increaseBalance (amount);\n      self()->updateLog("),a("span",{staticClass:"hljs-string"},[s._v('"Transfer Out"')]),s._v(", DateTime(),\n                amount);\n      recipient()->updateLog("),a("span",{staticClass:"hljs-string"},[s._v('"Transfer In"')]),s._v(",\n             DateTime(), amount);\n    }\n    gui->displayScreen(SUCCESS_DEPOSIT_SCREEN);\n    endTransaction();\n }\n\n\n")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本次提出独到观点的同学有："),a("a",{attrs:{href:"https://github.com/ascoders"}},[s._v("@ascoders")]),s._v("、"),a("a",{attrs:{href:"https://github.com/TingGe"}},[s._v("@TingGe")]),s._v("、"),a("a",{attrs:{href:"https://github.com/zhaoyangsoft"}},[s._v("@zy")]),s._v("，精读由此归纳。")]),a("br"),a("p",[s._v("**尝试从人类思维角度出发 理解 **")]),a("p",[s._v("DCI 即 数据(data) 场景(context) 交互(interactive)。")]),a("p",[s._v("DCI 之所以被提出，是因为传统 mvc 代码，在越来越丰富的交互需求中"),a("strong",[s._v("变得越来越难读")]),s._v("。有人会觉得，复杂的需求 mvc 也可以 cover 住，诚然如此，但很少有人能只读一遍源码就能理解程序处理了哪些事情，这是因为人类思维与 mvc 的传统程序设计思想存在鸿沟，我们需要脑补内容很多，才会觉得难度。")]),a("p",[s._v("现在仍有大量程序"),a("strong",[s._v("使用面向对象的思想表达交互行为")]),s._v("，当我们把所有对象之间的关联记录在脑海中时，可能对象之间交互行为会比较清楚，但任无法轻松理解，因为对象的封装会导致内聚性不断增加，交互逻辑会在不同对象之间跳转，对象之间的嵌套关系在复杂系统中无疑是一个理解负担。")]),a("p",[s._v("DCI 尝试从人类思维角度出发，举一个例子：为什么在看电影时会轻轻松松的理解故事主线呢？回想一下我们看电影的过程，看到一个画面时，我们会思考三件事：")]),a("ul",[a("li",[s._v("画面里有什么人或物？")]),a("li",[s._v("人或物发生了什么行为、交互？")]),a("li",[s._v("现在在哪？厨房？太空舱？或者原始森林？")])]),a("p",[s._v("很快把这三件事弄清楚，我们就能快速理解当前场景的逻辑，并且"),a("strong",[s._v("轻松理解该场景继续发生的状况")]),s._v("，即便是盗梦空间这种烧脑的电影，当我们搞清楚这三个问题后，就算街道发生了 180 度扭曲，也不会存在理解障碍，反而可以吃着爆米花享受，直到切换到下一个场景为止。")]),a("p",[s._v("当我们把街道扭曲 180 度的能力放在街道对象上时，理解就变的复杂了：这个函数什么时候被调用？为什么不好好承载车辆而自己发生扭曲？这就像电影开始时，把电影里播放的所有关于街道的状态都走马灯过一遍：我们看到街道通过了车辆、又卷曲、又发生了爆炸，实在觉得莫名其妙。")]),a("p",[s._v("理解代码也是如此，当交互行为复杂时，把交互和场景分别抽象出来，以场景为切入点交互数据。")]),a("p",[s._v("举个例子，传统的 mvc 可能会这么组织代码：")]),a("br"),a("p",[a("code",[s._v("UserModel")]),s._v(":")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("My")]),s._v(" ")]),s._v("{\n  private name = "),a("span",{staticClass:"hljs-string"},[s._v('"ascoders"')]),s._v(" "),a("span",{staticClass:"hljs-comment"},[s._v("// 名字")]),s._v("\n  private skills = ["),a("span",{staticClass:"hljs-string"},[s._v('"javascript"')]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v('"nodejs"')]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v('"切图"')]),s._v("] "),a("span",{staticClass:"hljs-comment"},[s._v("// 技能")]),s._v("\n  private hp = "),a("span",{staticClass:"hljs-number"},[s._v("100")]),s._v(" "),a("span",{staticClass:"hljs-comment"},[s._v("// 生命值？？")]),s._v("\n  private account = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Account() "),a("span",{staticClass:"hljs-comment"},[s._v("// 账户相关")]),s._v("\n}\n")])]),a("br"),a("p",[a("code",[s._v("UserController")]),s._v(":")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Controller")]),s._v(" ")]),s._v("{\n  private my = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" My()\n  private account = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Account()\n  private accountController = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" AccountController()\n\n  public "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("cook")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 做饭")]),s._v("\n  }\n\n  public "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("coding")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 写代码")]),s._v("\n  }\n\n  public "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("fireball")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 搓火球术。。？")]),s._v("\n  }\n\n  public "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("underAttack")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 受到攻击？？")]),s._v("\n  }\n\n  public "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("pay")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 支付，用到了 account 与 accountController")]),s._v("\n  }\n}\n")])]),a("br"),a("p",[s._v("这只是我自己的行为，当我这个对象，与文章对象、付款行为发生联动时，就发生了各种各样的跳转。到目前为止我还不是非常排斥这种做法，毕竟这样是非常主流的，前端数据管理中，不论是 redux，还是 mobx，都类似 MVC。")]),a("p",[s._v("不论如何，尝试一下 DCI 的思路吧，看看是否会像看电影一样轻松的理解代码：")]),a("p",[s._v("以上面向对象思想主要表达了 4 个场景，家庭、工作、梦境、购物：")]),a("ul",[a("li",[s._v("home.scene.scala")]),a("li",[s._v("work.scene.scala")]),a("li",[s._v("dream.scene.scala")]),a("li",[s._v("buy.scene.scala")])]),a("p",[s._v("以程序员工作为例，在工作场景下，写代码可以填充我们的钱包，那么我们看到一个程序员的钱包：")]),a("br"),a("p",[a("code",[s._v("codingWallet.scala")]),s._v(":")]),a("pre",[a("code",{staticClass:"hljs language-scala"},[a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("CodingWallet")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("name: "),a("span",{staticClass:"hljs-type"},[s._v("String")]),s._v(", var balance: "),a("span",{staticClass:"hljs-type"},[s._v("Int")])]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("def")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("coding")])]),s._v("(line: "),a("span",{staticClass:"hljs-type"},[s._v("Int")]),s._v(") { balance += line * "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(" }\n}\n")])]),a("br"),a("p",[s._v("写一行代码可以赚 1 块钱，它不需要知道在哪个场景被使用，程序员的钱包只要关注把代码变成钱。")]),a("p",[s._v("交互是基于场景的，所以交互属于场景，写代码赚钱的交互，放在工作场景中：")]),a("br"),a("p",[a("code",[s._v("work.scene.scala")]),s._v("：")]),a("pre",[a("code",{staticClass:"hljs language-scala"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("MoneyTransferApp")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("App")]),s._v(" ")]),s._v("{\n\n  "),a("span",{staticClass:"hljs-meta"},[s._v("@context")]),s._v("\n  "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("MoneyTransfer")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("wallet: "),a("span",{staticClass:"hljs-type"},[s._v("CodingWallet")]),s._v(", time: int")]),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 在这个场景中，工作 1 小时，可以写 100 行代码")]),s._v("\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 开始工作！")]),s._v("\n    wallet.working\n\n    role wallet {                     \n      "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("def")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("working")])]),s._v("() {                 \n        wallet.coding(time)       \n      }\n    }\n  }\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 钱包默认有 3000 元")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("val")]),s._v(" wallet = "),a("span",{staticClass:"hljs-type"},[s._v("CodingWallet")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v('"wallet"')]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("3000")]),s._v(")\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 初始化工作场景，工作了 1 小时")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"hljs-type"},[s._v("MoneyTransfer")]),s._v("(wallet, "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(")\n\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 此时钱包一共拥有 3100 元")]),s._v("\n  println(wallet.balance)\n}\n")])]),a("br"),a("p",[a("code",[s._v("tips：")]),s._v("就是把数据与交互分开，额外增加了"),a("strong",[s._v("场景")]),s._v("，交互属于场景，获取数据进行交互。原文的这张图描述了 DCI 与 MVC 之间的关系：")]),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/7970947/27719998-294f4356-5d89-11e7-99af-8811a782cd50.png",alt:"image"}})]),a("br"),a("p",[a("strong",[s._v("发现并梳理现代前端模式和概念的蛛丝马迹")])]),a("p",[s._v("现代前端受益于低门槛和开放，伴随 OO 和各种 MV＊ 盛行，也出现了越来越多的概念、模式和实践。而 DCI 作为 MVC 的补充，试图通过引入函数式编程的一些概念，来平衡 OO 、数据结构和算法模型。值得我们津津乐道的如 Mixins、Multiple dispatch、 依赖注入（DI）、Multi-paradigm design、面向切面编程（AOP）都是不错的。如果对这些感兴趣，深挖下 AngularJS 在这方面的实践会有不少收获。 当然，也有另辟途径的，如 Flux 则采用了 DDD/CQRS 架构。")]),a("br"),a("p",[s._v("软件架构设计，是一个很大的话题，也是值得每位工程师长期实践和思考的内容。个人的几点体会：")]),a("ul",[a("li",[s._v("一个架构，往往强调职责分离，通过分层和依赖原则，来解决程序内、程序间的相互通讯问题；")]),a("li",[s._v("知道最好的几种可能的架构，可以轻松地创建一个适合的优化方案；")]),a("li",[s._v("最后，必须要记住，程序必须遵循的架构。")])]),a("p",[s._v("分享些架构相关的文章：")]),a("ul",[a("li",[a("a",{attrs:{href:"https://www.codeproject.com/Articles/66585/Comparison-of-Architecture-presentation-patterns-M"}},[s._v("Comparison of Architecture presentation patterns MVP(SC),MVP(PV),PM,MVVM and MVC")])]),a("li",[a("a",{attrs:{href:"http://www.artima.com/articles/dci_vision.html"}},[s._v("The DCI Architecture: A New Vision of Object-Oriented Programming")])]),a("li",[a("a",{attrs:{href:"https://www.bbsmax.com/A/pRdBWY3ezn/"}},[s._v("干净的架构 The Clean Architecture")])]),a("li",[a("a",{attrs:{href:"https://gxnotes.com/article/71237.html"}},[s._v("MVC 的替代方案")])]),a("li",[a("a",{attrs:{href:"http://blog.csdn.net/lihenair/article/details/51791915"}},[s._v("展示模式架构比较 MVP(SC)，MVP(PV)，PM，MVVM 和 MVC")])]),a("li",[a("a",{attrs:{href:"https://github.com/zenany/weekly/blob/master/resources/software_architecture.md"}},[s._v("Software Architecture Design")])]),a("li",[a("a",{attrs:{href:"https://blog.jimmylv.info/2016-07-07-what-the-flux-on-flux-ddd-and-cqrs/"}},[s._v("【译】什么是 Flux 架构？（兼谈 DDD 和 CQRS）")])])]),a("p",[a("strong",[s._v("结合 DCI 设想开发的过程中使用到一些设计方法和原则")])]),a("p",[s._v("我们在开发的过程中多多少少都会使用到一些设计方法和原则 DCI 重点是关注 数据的不同场景的交互行为， 是面向对象系统 状态和行为的一种范式设计；")]),a("br"),a("p",[s._v("它能够将过程逻辑与对象逻辑分开，是一种典型的行为模式设计； 很好的点是 它根据 AOP 的基本原理，DCI 提出基于 AOP 深层次的元编程(可以理解成面向接口编程)， 去促使系统的内聚效果和降低耦合度；")]),a("br"),a("p",[s._v("举个例子： 在一个 BI 系统中， 在业务的发展中， 这个系统使用到了多套的 底层图表库，比如： Echarts, G2，Recharts, FusionChart; 等等；")]),a("p",[s._v("那么问题来了，")]),a("ul",[a("li",[s._v("如何去同时支持 这些底层库， 并且达到很容易切换的一个效果？")]),a("li",[s._v("如何去面向未来的考虑 将来接入更多类型的图表？")]),a("li",[s._v("如何去考虑扩展业务 对图表的日益增强的业务功能(如: 行列转换、智能格式化 等等)")])]),a("br"),a("p",[s._v("带着这些问题， 我们再来看下 DCI 给我们的启示， 我们来试试看相应的解法:")]),a("ul",[a("li",[s._v("图表的模型数据就是 数据 Data , 我们可以把[日益增强的业务功能] 认为是各个场景交互 Interactions;")]),a("li",[s._v("接入更多类型的图表咋么搞？"),a("br"),s._v(" 不同类型的图表其实是图表数据模型的转换，我们也可以把这些转换的行为过程作为一个个的切片(Aspect)，每个切片都是独立的， 松耦合的 ;")])]),a("br"),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/1456421/27744526-67fd0e3e-5d85-11e7-9b48-e1934d9b15f3.png",alt:"image"}})]),a("ul",[a("li",[s._v("接入多套底层库怎么搞？ 每个图形库的 build 方法，render 方法 ， resize 方法，repaint 方法 都不一样 ，怎么搞 ? 我们可以使用 DCI 提到的元编程- 我们在这里理解为面向接口编程， 我们分装一层 统一的接口；")])]),a("br"),a("p",[s._v("利用面向接口的父类引用指向子类对象 我们就可以很方便的 接入更多的 implement 接入更多的图形库(当然，一个系统统一一套是最好的)；")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("DCI 是数据 Data 场景 Context 交互 Interactions 的简称，DCI 是一种特别关注行为的设计模式(行为模式)， DCI 关注数据不同场景的交互行为， 是面向对象 状态和行为的一种范式设计；DCI 尝试从人类思维，过程化设计一些行为； DCI 也会使用一些面向切面和接口编程的设计思想去达到高内聚低耦合的目标。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},e2e8:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("极客公园 IFX - 下")])]),a("h2",{attrs:{id:"ji-ke-gong-yuan-ifx---xia"}},[s._v("极客公园 IFX - 下 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ji-ke-gong-yuan-ifx---xia"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("这次是极客大会十周年，也正好告别了 2019 年，因此主题是总结互联网前 10 年的发展，并预测下一个 10 年的变化。")]),a("p",[s._v("这次是后半部分的大会感悟。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("h3",{attrs:{id:"yi-tou-zai-man-sai-dao-xia-ben-pao-de-da-xiang"}},[s._v("一头在慢赛道下奔跑的大象 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tou-zai-man-sai-dao-xia-ben-pao-de-da-xiang"}},[s._v("§")])]),a("p",[s._v("大象保险是一个互联网保险公司，可能在大家印象中保险公司是一个老而慢的行业，复杂的条款，繁琐的理赔流程，精心规划的商业套路等等。顺带一提，巴菲特就是利用收购的众多保险公司收集的保费进行杠杆投资，才取得了平均年化 20% 左右的神话。所以保险是一个比较难做，且在慢赛道的行业。")]),a("br"),a("p",[s._v("大象保险则利用科技的手段对保险流程进行优化，在初期尝试了几种有意思的互联网保险业务，比如上班下雨保险、堵车保险等，也取得过一些成果，现在尝试将自己平台化，将沉淀的互联网保险能力提供给其他互联网保险公司。")]),a("br"),a("p",[s._v("大象保险沉淀了一个业务中台，包括各种保险险种库、智能化投保决策、以及沉淀了大量数据，基于这个业务中台拓展出一个新品牌“象保保”，这是一个代理人数字化营销平台，集成险种库、出单管理、海报、计划书、课程、健康服务等一系列互联网保险基础能力，既服务于自己，又能服务于其他保险公司。")]),a("br"),a("p",[s._v("这种商业思路确实是很棒的，亚马逊的 AWS（亚马逊云）、FBA（第三方物流服务）、Amazon Go（即拿即走线下超市）都是前期研发投入高 + 固定成本很高的项目，这些项目诞生之初就服务于亚马逊自己这个大客户，等成熟后就拿到市场上检验，赋能其他行业。阿里内部服务成熟后上云也是一样的思维。")]),a("br"),a("h3",{attrs:{id:"bilibili-ceo-zhuan-fang"}},[s._v("bilibili CEO 专访 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bilibili-ceo-zhuan-fang"}},[s._v("§")])]),a("p",[s._v("从专访中了解到，bilibili CEO 陈睿不是 b 站最早的创始人，而是后面加入的，一开始他兼职管理 b 站业务，并承诺自己公司上市后就加入，结果所在公司猎豹真的上市了，而他也正式加入 b 站，追求他的爱好。")]),a("br"),a("p",[s._v("b 站独特魅力在于 UGC 内容持续的创作，这样公司不用花功夫进行内容创作，而用户的智慧聚集起庞大的创作力量影响力又非常之大，同时用户自己创作的内容会更容易得到用户自己的认可，所以 b 站用户付费的意愿都很高。")]),a("br"),a("p",[s._v("所以陈睿一直强调的是一种社区文化生态，这种生态可以带来很强的归属感与认同感。")]),a("br"),a("p",[s._v("b 站的品类很多，按照热度排序可能是：动画、番剧、游戏、娱乐、国创、数码、科技、音乐、生活、舞蹈、放映厅、时尚等等，而 b 站的收入来源游戏业务占了一半，2019 Q3 游戏收入达 9.3 亿元，其余收入来源分别是直播和增值服务业务、广告业务、电商以及其他业务。这种收入模型对社区类创业者来说比较有借鉴意义。")]),a("br"),a("h3",{attrs:{id:"ru-he-ba-du-shu-zhe-jian-xiao-shi-zuo-dao-ji-zhi"}},[s._v("如何把读书这件小事做到极致 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ru-he-ba-du-shu-zhe-jian-xiao-shi-zuo-dao-ji-zhi"}},[s._v("§")])]),a("p",[s._v("樊登读书的 CEO 樊登过来了，樊登是知识付费四天王之一，知识付费的四天王分别是：吴晓波、罗振宇、樊登和李善友。")]),a("br"),a("p",[s._v("樊登真的很有演讲功力，笔者觉得樊登是极客大会 3 天所有演讲中讲的最好的没有之一，与他同台演讲的都是各大独角兽 CEO 级别人物，也包括百度等大公司事业部总经理，但就演讲能力而言，距离樊登还是差得太远。")]),a("br"),a("p",[s._v("这次樊登演讲主题是复杂体系 vs 简单体系，总结后其实就是一句话：复杂体系是自然生长出来的，简单体系是规划出来的，现在创业环境不适合简单体系，只有复杂体系才能应对这个世界的复杂性。")]),a("br"),a("p",[s._v("其中提到一个有意思的点：所有 KPI 都是错的，因为 KPI 是预测未来的工具，所有对未来的预测都是不准确的。在 KPI 压力下人的动作会产生变形，比如只追求结果不追求过程， 最终导致饮鸩止渴，不利于长期发展。樊登解决问题的方法挺有意思的，他对线下门店指定的 KPI 长达 100 多条，非常非常细致，但想要一一检验是不可能的，每到发奖金的时候，就随机抽取三条进行检验，由于不知道最终会检验哪一条，这样门店想要拿到奖金就需要本本分分做好每一点细节，做真正产生价值的事情。")]),a("br"),a("p",[s._v("樊登读书这款 App 笔者也听了一个星期，里面讲的内容很有针对性，都是职场、心灵、生活相关的，与完善自我紧密相关，特别是一款《逆商》的解读，非常有意思，推荐大家读一读。")]),a("br"),a("h3",{attrs:{id:"da-zu-zhi-tu-rang-zhong-chuang-xin-ru-he-fa-ya-jie-guo"}},[s._v("大组织土壤中创新如何发芽结果 "),a("a",{staticClass:"header-anchor",attrs:{href:"#da-zu-zhi-tu-rang-zhong-chuang-xin-ru-he-fa-ya-jie-guo"}},[s._v("§")])]),a("p",[s._v("主讲人是阿里创新事业部总裁朱顺炎，大公司总是被诟病创新能力差，毕竟层级复杂体系庞大，看上去好像创新确实很困难。")]),a("br"),a("p",[s._v("阿里创新事业部有四个法宝：")]),a("ol",[a("li",[s._v("大家没有生存压力，不需要为了短期变现而产生动作的变形。")]),a("li",[s._v("CEO 深知创新是从小应用成长起来的，所以让创新项目从小开始独立孵化。之所以要独立孵化，也是认识到组合的产品创新能力是很脆弱的，真正成功的产品必须要独立撑起一片天。")]),a("li",[s._v("给更有创造力的年轻人机会。")]),a("li",[s._v("没有不变的业务，只有不变的文化，通过培养文化进行企业传承。")])]),a("p",[s._v("一起期待拥有长线计划的阿里创新事业部可以给市场带来更多有价值的产品吧！")]),a("h3",{attrs:{id:"mian-dui-bu-que-ding-de-wei-lai-wo-men-ying-gai-ru-he-jue-ce"}},[s._v("面对不确定的未来，我们应该如何决策 "),a("a",{staticClass:"header-anchor",attrs:{href:"#mian-dui-bu-que-ding-de-wei-lai-wo-men-ying-gai-ru-he-jue-ce"}},[s._v("§")])]),a("br"),a("p",[s._v("大众汽车中国的 CEO 介绍到，中国已经成为世界最大的汽车市场之一。")]),a("p",[s._v("PS1：其实中国不仅正在成为汽车最大的市场，中国其实在各个维度都在成为全球最大的消费市场。")]),a("p",[s._v("PS2：大众汽车的历史很有意思，尤其是保时捷和大众的收购大战以保时捷发起，最终却被大众反收购，这段历史非常有趣。")]),a("br"),a("p",[s._v("这次分享讨论了三个问题：")]),a("ol",[a("li",[s._v("电动汽车出行肯定会实现吗？")])]),a("p",[s._v("关于这个问题，大众汽车的答案是肯定的。这句话很有意思，我记得去年参加这个大会时，许多初创新能源汽车制造公司就自己与老牌车场相比有什么优势时提到，老牌车场虽然实力雄厚，但航空母舰转身非常困难，这些大厂其实难以很快投入电动汽车的研发。从现在阶段来看，行业又发生了变化，老牌大厂纷纷加入实现了“掉头”，进入电动车行业，并且针对自动驾驶领域开始做技术合作与整合。")]),a("br"),a("ol",{attrs:{start:"2"}},[a("li",[s._v("软件公司和汽车公司谁将引领汽车行业的未来？")])]),a("p",[s._v("大众中国 CEO 通过四个力：责任里、靠谱力、盈利力、可持续力四个方面对大众汽车进行了全面夸赞，总之想表达的观点就是，汽车公司实力雄厚，可以通过再造一个规模一万人的软件公司，对互联网造车公司进行降维打击。")]),a("br"),a("ol",{attrs:{start:"3"}},[a("li",[s._v("出行服务会颠覆传统汽车制造商吗？")])]),a("p",[s._v("自行车厂商倒可以有这种担心，但汽车厂商不必有，因为每个人其实都梦想有一辆属于自己的车。在之前共享出行行业里也提到了，交通分为公共交通与私人交通，对于两点一线比如上班场景，就非常适合私人交通，因为大家对时间和稳定性要求非常强烈，毕竟谁都不想上班迟到。对于临时的交通需求，大家对公共交通需求更大，毕竟公共交通便捷性更强，特别是人在国外时，总不能在国外给自己也买辆车吧。")]),a("br"),a("h3",{attrs:{id:"chan-ye-wu-lian-wang-zhong-de-ji-zhi-cheng-chang-cong-he-er-lai"}},[s._v("产业物联网中的机制成长从何而来 "),a("a",{staticClass:"header-anchor",attrs:{href:"#chan-ye-wu-lian-wang-zhong-de-ji-zhi-cheng-chang-cong-he-er-lai"}},[s._v("§")])]),a("p",[s._v("G7 去年成长了 5 倍，这是一家智能物流服务公司，提供货车智能服务。")]),a("br"),a("p",[s._v("去年的极客大会有介绍过 G7，几年就不再详细介绍了。G7 之所以有这么快速的成长，一方面是自己产品做的好，另一方面可能离不开整个中国产业互联网的腾飞，由于物流行业这几年快速发展，各个物流公司都在不断融资买货车提升自己的运力，对智能货车的服务需求才会不断增加，同时中国经济也进入了互联网广泛赋能各产业的阶段，这就是去年一直提的“产业互联网”，G7 作为一个平台，横向服务中国所有物流公司，享受到了中国发展的红利，得以快速发展。")]),a("br"),a("p",[s._v("也许未来 10 年还会迎来更加巨大的产业互联网机会，那些既做软件也做硬件的公司可以迟到这波趋势的红利。互联网将成为线下产业的钢铁侠外衣，对线下产业来说，得到互联网的加持可以大大提高运作效率，对互联网来说，线下产业发展的红利将带来极高的自然增速。")]),a("br"),a("h3",{attrs:{id:"vipkid-peng-you-shuo"}},[s._v("VIPKID 鹏友说 "),a("a",{staticClass:"header-anchor",attrs:{href:"#vipkid-peng-you-shuo"}},[s._v("§")])]),a("p",[s._v("VIPKID 创始人米雯娟谈了 VIPKID 最近的运营情况，比较有感触的是教育这块拉新的方式，一般教育领域花费都是比较高的，而且不仅仅是钱的问题，将孩子的成长托付给任何一家机构，家长都会特别谨慎，这是人之常情，所以大部分培训班很多新客都要通过老客推荐的方式获取。")]),a("br"),a("p",[s._v("VIPKID 起步是依靠朋友圈传播，但随着项目的起量，需要通过广告方式推广，最高的推广费用达到平均获客成本 8000 元，不过现在已经回归到正常水平，大概 4000 元左右，现在有 50% 的新客是通过老客推广的，无需费用。")]),a("br"),a("h3",{attrs:{id:"yi-jia-shou-ji"}},[s._v("一加手机 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-jia-shou-ji"}},[s._v("§")])]),a("p",[s._v("一加手机在国外销售非常火爆，最近一款 90 HZ 屏的产品使其又火了一把。之所以做 90 HZ 屏就是为了“更”流畅的使用体验，当被问及这么做性价比如何时，刘作虎回答的是：这就是高端品牌的极致追求，有的时候体验就提升那么一点，用户就会选择你。")]),a("br"),a("p",[s._v("一加手机做的是高端手机，操作系统主打的是简洁，不会有任何广告，盈利方式则是其较高的定价。而相比手机大厂，一加手机的突破点在于集中力量做旗舰手机，通过集中投入研发资源达到单点突破。")]),a("br"),a("p",[s._v("最近一加也在做电视了，目的是为了占领客厅市场，可能因为手机卖的比较火，资金链比较充裕所以做了更大的布局。")]),a("br"),a("h3",{attrs:{id:"jie-ti---she-qu-ling-shou-xin-wu-zhong-de-jin-hua-zhi-dao"}},[s._v("解题 - 社区零售新物种的进化之道 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-ti---she-qu-ling-shou-xin-wu-zhong-de-jin-hua-zhi-dao"}},[s._v("§")])]),a("p",[s._v("每日优鲜的 CFO 王珺带来的一场分享，介绍每日优鲜是如何利用新技术实现新零售突破的。")]),a("br"),a("p",[s._v("每日优鲜业务的难度有三点：")]),a("ol",[a("li",[s._v("社区零售中最难的业态：大规模分布式连锁。")]),a("li",[s._v("社区零售中最难的品类：生鲜非标品。")]),a("li",[s._v("社区零售的三大挑战：体验、成本、复制。")])]),a("p",[s._v("生鲜零售难度确实很大：生鲜对保存时间短，运输过程中易磨损，品质管理层次不齐，我们来看每日优鲜是如何解决这些问题的。")]),a("br"),a("p",[s._v("每日优鲜通过部署 "),a("strong",[s._v("“前置仓”")]),s._v(" 解决物流问题。几乎所有物流业务想要提效，比如推出次日达甚至当日达业务，几乎都必须用前置仓解决。每日优鲜的前置仓甚至可以实现平均送达时间 36 分钟，而且价格比线下超市便宜 10%，这是怎么做到的呢？")]),a("br"),a("p",[s._v("每日优鲜分别从租金、人工、损耗三个方案解决问题。")]),a("br"),a("p",[s._v("首先是租金，每日优鲜专门租一些高性价比的地段，租金便宜但距离配送地点也不远的地方。")]),a("br"),a("p",[s._v("其次是人工，通过智能化的调度中心，减少了店员数量，但能保持服务效率。")]),a("br"),a("p",[s._v("最后的损耗，比如仓储管理，也通过合理的计算提升货物周转率，在配送服务方面，通过聚合订单，本来一个骑手一天只能送 20 单，但每日优鲜的骑手一天可以送 70 单，这是因为平均出车一次可以覆盖 10 位客户，这都取决于平台派单算法的优化。")]),a("br"),a("p",[s._v("对于规模化扩张方式，每日优鲜也有自己的做法。1.0 信息化阶段，利用系统辅助人，达到现在的高效率。未来 2.0 是智能化时代，用系统取代人，将成本压缩到极致。")]),a("br"),a("h3",{attrs:{id:"zhi-neng-qi-che-de-bai-yin-shi-dai"}},[s._v("智能汽车的白银时代 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zhi-neng-qi-che-de-bai-yin-shi-dai"}},[s._v("§")])]),a("p",[s._v("小鹏汽车的 CEO 何小鹏认为 2020-2025 年是电动车的白银时代，即拥有高度辅助功能（L3），2025 年之后是黄金时代，即受限场景的无人驾驶时代（准 L4）。")]),a("br"),a("p",[s._v("值得注意的是，小鹏汽车去年累计交付 1.3 万辆，虽然和传统汽车厂不在一个数量级，但其智能化数据还是比较亮眼的。")]),a("br"),a("p",[s._v("小鹏汽车明年要发行的新款有两大特色。基础能力包括：超长续航 + 超快充电 + 安全。特色能力是：主打高端的超级轿跑，配合顶级音响设备，再加上支持 L3 级别的智能化，看上去还是有一定竞争力的。")]),a("br"),a("p",[s._v("之前大众中国区 CEO 的分享也提到，传统汽车公司也开始进入电动车、自动驾驶领域了，纷纷开始组建硬件、软件子公司与团队，在软件上能否快速赶超走在前面的互联网造车公司是关键，如果传统汽车公司像华为入局手机制造业一样，以碾压性的资源投入快速实现 L4，并拉拢一批生态厂商制定标准规范，创业公司就比较难了，现在这个阶段正是互联网创业公司打时间差的最后时机。")]),a("br"),a("h3",{attrs:{id:"zhi-neng-xin-wu-zhong-dai-lai-de-zhi-hui-sheng-tai-xin-ti-yan"}},[s._v("智能新物种带来的智慧生态新体验 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zhi-neng-xin-wu-zhong-dai-lai-de-zhi-hui-sheng-tai-xin-ti-yan"}},[s._v("§")])]),a("p",[s._v("这次分享的嘉宾是美的集团 IOT 事业部总经理余尚锋，讲了关于未来家电的畅想。简单来说，未来的家电会万物互联，手机将不再是唯一入口，任何屏幕都可以是入口，任何家电都拥有智能，都可以拥有所有计算能力。")]),a("br"),a("p",[s._v("这具有很强的启发意义，未来家庭中可能会存在一个计算中心，所有设备都只是屏幕，是这个计算中心人机交互的输出界面，正因为如此，你的手机才屏幕才可以被卫生间镜子自动替代，就连煤气灶的显示屏也可以刷微信、玩游戏。")]),a("br"),a("h3",{attrs:{id:"ai-luo-di-chan-ye-de-zhe-yi-nian"}},[s._v("AI 落地产业的这一年 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ai-luo-di-chan-ye-de-zhe-yi-nian"}},[s._v("§")])]),a("p",[s._v("分别由三角兽、杉树科技、文远知行三家公司的创始人谈一谈 AI 落地产业，这三家公司都是做的比较好的垂直领域公司，其中三角兽做的自然语言理解技术已经广泛运用于许多 Top 互联网公司，像百度语音助手也调用了其服务；杉树科技通过深度学习、机器学习、运筹学帮助滴滴、顺丰、京东等等公司做最优的决策；文远知行是一家做 L4 自动驾驶技术的公司，今年也在北京投放了十几辆限定区域的自动驾驶载客汽车试运行。")]),a("br"),a("p",[s._v("可以发现，这些公司都掌握核心 AI 技术，并成为互联网头部大公司坚实合作伙伴，通过对某个领域的极致钻研“坐在了大公司旁边”。")]),a("br"),a("h3",{attrs:{id:"shui-di-gong-si-peng-you-shuo"}},[s._v("水滴公司 鹏友说 "),a("a",{staticClass:"header-anchor",attrs:{href:"#shui-di-gong-si-peng-you-shuo"}},[s._v("§")])]),a("p",[s._v("水滴公司的 CEO 沈鹏之前曾在美团就职，担任美团外卖全国业务负责人，可谓年少有为。在美团担任高管期间经历了许多磨练，也曾降职到地区负责人锤炼自己业务能力与管理能力，但即便如此，创立水滴公司后依然遇到许多挫折，沈鹏的感悟是，管理创业团队的难度比在公司当高管要难多了。")]),a("br"),a("p",[s._v("水滴公司的业务是帮助有困难的人，业务板块分为水滴商城与水滴互助，水滴商城提供一些高性价比的事前保障，水滴互助则是帮助遭遇重大疾病或变故的人筹集资金，通过参加水滴互助也让更多人了解到事前保证的重要性，促进了水滴商城的业务量。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("互联网真真切切渗透到社会每一个角落，从纯线上到与产业结合，从提升社会效率到关注人类健康，涉及到生活的方方面面，每一位公司的 CEO 都非常聪明，让互联网技术最大程度在各自领域发挥着价值。")]),a("p",[s._v("商业领域如果有唯一不变的真理，那就是为人类带来价值的公司才能基业长青。你还了解哪些利用互联网给人类创造价值的公司吗？欢迎留言。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},e436:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("TC39 与 ECMAScript 提案")])]),a("h2",{attrs:{id:"tc39-yu-ecmascript-ti-an"}},[s._v("TC39 与 ECMAScript 提案 "),a("a",{staticClass:"header-anchor",attrs:{href:"#tc39-yu-ecmascript-ti-an"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读文章是："),a("a",{attrs:{href:"https://ponyfoo.com/articles/tc39-ecmascript-proposals-future-of-javascript"}},[s._v("TC39, ECMAScript, and the Future of JavaScript")])])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i3/O1CN01Z7A0st1Xx0Vu2Tnbv_!!6000000002989-2-tps-1000-820.png",alt:"logo",width:"500"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("觉得 es6 es7 动不动就加新特性很烦？提案的讨论已经放开了，每个人都可以做 js 的主人，赶快与我一起了解下有哪些特性在日程中！")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("TC39 是什么？包括哪些人？")])]),a("p",[s._v("一个推动 JavaScript 发展的委员会，由各个主流浏览器厂商的代表构成。")]),a("br"),a("p",[a("strong",[s._v("为什么会出现这样一个组织？")])]),a("p",[s._v("从标准到落地是一个漫长的过程，相信大家上次阅读 web components 就能体会到标准到浏览器支持是一个漫长的过程。")]),a("br"),a("p",[a("strong",[s._v("TC39 这群人主要的工作是什么？")])]),a("p",[s._v("制定 ECMAScript 标准，标准生成的流程，并实现。")]),a("br"),a("p",[a("strong",[s._v("标准的流程是什么样的？")])]),a("p",[s._v("包括五个步骤：")]),a("ul",[a("li",[s._v("stage0 "),a("code",[s._v("strawman")])])]),a("p",[s._v("任何讨论、想法、改变或者还没加到提案的特性都在这个阶段。只有 TC39 成员可以提交。")]),a("ul",[a("li",[s._v("stage1 "),a("code",[s._v("proposal")])])]),a("p",[s._v("（1）产出一个正式的提案。")]),a("p",[s._v("（2）发现潜在的问题，例如与其他特性的关系，实现难题。")]),a("p",[s._v("（3）提案包括详细的 API 描述，使用例子，以及关于相关的语义和算法。")]),a("ul",[a("li",[s._v("stage2 "),a("code",[s._v("draft")])])]),a("p",[s._v("（1）提供一个初始的草案规范，与最终标准中包含的特性不会有太大差别。草案之后，原则上只接受增量修改。")]),a("p",[s._v("（2）开始实验如何实现，实现形式包括 polyfill, 实现引擎（提供草案执行本地支持），或者编译转换（例如 babel）")]),a("ul",[a("li",[s._v("stage3 "),a("code",[s._v("candidate")])])]),a("p",[s._v("（1）候选阶段，获得具体实现和用户的反馈。此后，只有在实现和使用过程中出现了重大问题才会修改。")]),a("p",[s._v("（1）规范文档必须是完整的，评审人和 ECMAScript 的编辑要在规范上签字。")]),a("p",[s._v("（2）至少要在一个浏览器中实现，提供 polyfill 或者 babel 插件。")]),a("ul",[a("li",[s._v("stage4 "),a("code",[s._v("finished")])])]),a("p",[s._v("（1）已经准备就绪，该特性会出现在下个版本的 ECMAScript 规范之中。")]),a("p",[s._v("（2）需要通过有 2 个独立的实现并通过验收测试，以获取使用过程中的重要实践经验。")]),a("br"),a("p",[a("strong",[s._v("一般可以去哪里查看 TC39 标准的进程呢？")])]),a("p",[s._v("stage0 的提案 https://github.com/tc39/proposals/blob/master/stage-0-proposals.md")]),a("p",[s._v("stage1 - 4 的提案 https://github.com/tc39/proposals")]),a("br"),a("p",[a("strong",[s._v("我们怎么在程序中应用这些新特性呢？")])]),a("p",[s._v("babel 的插件："),a("code",[s._v("babel-presets-stage-0")]),s._v(" "),a("code",[s._v("babel-presets-stage-1")]),s._v(" "),a("code",[s._v("babel-presets-stage-2")]),s._v(" "),a("code",[s._v("babel-presets-stage-3")]),s._v(" "),a("code",[s._v("babel-presets-stage-4")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本次提出独到观点的同学有： "),a("a",{attrs:{href:"https://github.com/huxiaoyun"}},[s._v("@huxiaoyun")]),s._v(" "),a("a",{attrs:{href:"https://github.com/monkingxue"}},[s._v("@monkingxue")]),s._v(" "),a("a",{attrs:{href:"https://github.com/jasonslyvia"}},[s._v("@jasonslyvia")]),s._v(" "),a("a",{attrs:{href:"https://github.com/ascoders"}},[s._v("@ascoders")]),s._v("，精读由此归纳。")]),a("br"),a("p",[a("strong",[s._v("Stage 4 大家庭")])]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/Array.prototype.includes/"}},[s._v("Array.prototype.includes")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("assert(["),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("].includes("),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(") === "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(");\nassert(["),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("].includes("),a("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(") === "),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(");\n\nassert(["),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),a("span",{staticClass:"hljs-literal"},[s._v("NaN")]),s._v("].includes("),a("span",{staticClass:"hljs-literal"},[s._v("NaN")]),s._v(") === "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(");\n\nassert(["),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", -"),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("].includes(+"),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(") === "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(");\nassert(["),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", +"),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("].includes(-"),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(") === "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(");\n\nassert(["),a("span",{staticClass:"hljs-string"},[s._v('"a"')]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v('"b"')]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v('"c"')]),s._v("].includes("),a("span",{staticClass:"hljs-string"},[s._v('"a"')]),s._v(") === "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(");\nassert(["),a("span",{staticClass:"hljs-string"},[s._v('"a"')]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v('"b"')]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v('"c"')]),s._v("].includes("),a("span",{staticClass:"hljs-string"},[s._v('"a"')]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(") === "),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(");\n")])]),a("br"),a("p",[s._v("这个 api 很方便，没有悬念的进入了草案中。")]),a("p",[s._v("曾争议过是否使用 Array.prototype.contains，但由于 "),a("a",{attrs:{href:"https://esdiscuss.org/topic/having-a-non-enumerable-array-prototype-contains-may-not-be-web-compatible"}},[s._v("不兼容因素")]),s._v(" 而换成了 includes。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/rwaldron/exponentiation-operator"}},[s._v("Exponentiation operator")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-comment"},[s._v("// x ** y")]),s._v("\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" squared = "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(" ** "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(";\n"),a("span",{staticClass:"hljs-comment"},[s._v("// same as: 2 * 2")]),s._v("\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" cubed = "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(" ** "),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(";\n"),a("span",{staticClass:"hljs-comment"},[s._v("// same as: 2 * 2 * 2")]),s._v("\n")])]),a("br"),a("p",[s._v("列表中进入了 stage4，但其 git 仓库 readme 还停留在 stage3。。")]),a("p",[s._v("虽然已经有 "),a("code",[s._v("Math.pow")]),s._v(" 了，但由于其他语言都支持此方式，js 也就支持了。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-object-values-entries"}},[s._v("Object.values/Object.entries")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-built_in"},[s._v("Object")]),s._v(".values({\n\t"),a("span",{staticClass:"hljs-attr"},[s._v("a")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(",\n\t"),a("span",{staticClass:"hljs-attr"},[s._v("b")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(",\n\t"),a("span",{staticClass:"hljs-attr"},[s._v("c")]),s._v(": "),a("span",{staticClass:"hljs-built_in"},[s._v("Symbol")]),s._v("(),\n}) "),a("span",{staticClass:"hljs-comment"},[s._v("// [1, 2, Symbol()]")]),s._v("\n\n"),a("span",{staticClass:"hljs-built_in"},[s._v("Object")]),s._v(".entries({\n\t"),a("span",{staticClass:"hljs-attr"},[s._v("a")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(",\n\t"),a("span",{staticClass:"hljs-attr"},[s._v("b")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(",\n\t"),a("span",{staticClass:"hljs-attr"},[s._v("c")]),s._v(": "),a("span",{staticClass:"hljs-built_in"},[s._v("Symbol")]),s._v("(),\n}) "),a("span",{staticClass:"hljs-comment"},[s._v('// [["a", 1], ["b", 2], ["c", Symbol()]]')]),s._v("\n")])]),a("br"),a("p",[s._v("也没有什么争议，Object.keys 都有了，获取 values、entries 也是合理的。")]),a("p",[s._v("TC39 会议中有争辩过为何不返回迭代器，原因挺有意思，因为 Object.keys 返回的是数组，所以这两个 api 还是与老大哥统一吧。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-string-pad-start-end"}},[s._v("String.prototype.padStart / String.prototype.padEnd")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-string"},[s._v('"foo"')]),s._v(".padStart("),a("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v('"bar"')]),s._v(") "),a("span",{staticClass:"hljs-comment"},[s._v("// bafoo")]),s._v("\n"),a("span",{staticClass:"hljs-string"},[s._v('"foo"')]),s._v(".padEnd("),a("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v('"bar"')]),s._v(") "),a("span",{staticClass:"hljs-comment"},[s._v("// fooba")]),s._v("\n")])]),a("br"),a("p",[s._v("解决了字符串补齐需求，很棒！")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-object-getownpropertydescriptors"}},[s._v("Object.getOwnPropertyDescriptors")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-built_in"},[s._v("Object")]),s._v(".getOwnPropertyDescriptors({ "),a("span",{staticClass:"hljs-attr"},[s._v("a")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("})\n"),a("span",{staticClass:"hljs-comment"},[s._v("// { a: {")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// \t  configurable: true,")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// \t  enumberable: true,")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// \t  value: 1,")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("//\t  writable: true")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// } }")]),s._v("\n")])]),a("br"),a("p",[s._v("特别是 babel 与 typescript 处理 class property decorator 方式不同的时候（typescript 处理得更成熟一些），会导致 babel 处理装饰器时，成员变量不设置默认值时，configurable 默认为 false，通过这个函数检查变量的配置很方便。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-trailing-function-commas"}},[s._v("Trailing commas in function parameter lists and calls")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("clownPuppiesEverywhere")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("\n   param1,\n   param2, "),a("span",{staticClass:"hljs-comment"},[s._v("// Next parameter that's added only has to add a new line, not modify this line")]),s._v("\n ")]),s._v(") ")]),s._v("{ "),a("span",{staticClass:"hljs-comment"},[s._v("/* ... */")]),s._v(" }\n")])]),a("br"),a("p",[s._v("js 终于原生支持了，以前不支持的时候多加逗号还会报错，需要预编译工具删除最后一个逗号，现在终于名正言顺了。")]),a("br"),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/ecmascript-asyncawait"}},[s._v("Async functions")])])]),a("p",[s._v("这个不用多说了，都说好用。")]),a("br"),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/ecmascript_sharedmem"}},[s._v("Shared memory and atomics")])])]),a("p",[s._v("这是 ECMAScript 共享内存与 Atomics 的规范，涉及内容非常多，主要涉及到 asm.js。")]),a("p",[s._v("asm.js 是一种性能解决方案，比如可以定义一个精确的 64k 堆：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" heap = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("ArrayBuffer")]),s._v("( "),a("span",{staticClass:"hljs-number"},[s._v("0x10000")]),s._v(" )\n")])]),a("br"),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-template-literal-revision"}},[s._v("Lifting template literal restriction")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("styled.div"),a("span",{staticClass:"hljs-string"},[s._v("`\n  background-color: red;\n`")]),s._v("\n")])]),a("br"),a("p",[a("code",[s._v("styled.div = text => {}")]),s._v(" 就可以处理了，目前使用最多在 styled-components 库里，这种场景还是蛮方便的。")]),a("br"),a("p",[a("strong",[s._v("(Stage 3 大家庭)")])]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/Function-prototype-toString-revision"}},[s._v("Function.prototype.toString revision")])])]),a("p",[s._v("对函数的 toString 规则进行了修改：http://tc39.github.io/Function-prototype-toString-revision/#sec-function.prototype.tostring")]),a("p",[s._v("当调用内置函数或 "),a("code",[s._v(".bind")]),s._v(" 后函数，toString 方法会返回 "),a("a",{attrs:{href:"http://tc39.github.io/Function-prototype-toString-revision/#prod-NativeFunction"}},[s._v("NativeFunction")]),s._v("。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-global"}},[s._v("global")])])]),a("p",[s._v("为 ECMAScript 规范添加 "),a("code",[s._v("global")]),s._v(" 变量，同构代码再也不用这么写了：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" getGlobal = "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n\t"),a("span",{staticClass:"hljs-comment"},[s._v("// the only reliable means to get the global object is")]),s._v("\n\t"),a("span",{staticClass:"hljs-comment"},[s._v("// `Function('return this')()`")]),s._v("\n\t"),a("span",{staticClass:"hljs-comment"},[s._v("// However, this causes CSP violations in Chrome apps.")]),s._v("\n\t"),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),a("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" self !== "),a("span",{staticClass:"hljs-string"},[s._v("'undefined'")]),s._v(") { "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" self; }\n\t"),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),a("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(" !== "),a("span",{staticClass:"hljs-string"},[s._v("'undefined'")]),s._v(") { "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v("; }\n\t"),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),a("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("global")]),s._v(" !== "),a("span",{staticClass:"hljs-string"},[s._v("'undefined'")]),s._v(") { "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("global")]),s._v("; }\n\t"),a("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Error")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'unable to locate global object'")]),s._v(");\n};\n")])]),a("p",[s._v("虽然前端环境与 nodejs 区别很大，但既然提案进入了 stage3，说明大家非常关注 js 整体的生态，只要整体方向良性发展，相信不久将会进入 stage4。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-object-rest-spread"}},[s._v("Rest/Spread Properties")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" { x, y, ...z } = { "),a("span",{staticClass:"hljs-attr"},[s._v("x")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-attr"},[s._v("y")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),a("span",{staticClass:"hljs-attr"},[s._v("a")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),a("span",{staticClass:"hljs-attr"},[s._v("b")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(" };\nx; "),a("span",{staticClass:"hljs-comment"},[s._v("// 1")]),s._v("\ny; "),a("span",{staticClass:"hljs-comment"},[s._v("// 2")]),s._v("\nz; "),a("span",{staticClass:"hljs-comment"},[s._v("// { a: 3, b: 4 }")]),s._v("\n")])]),a("p",[s._v("不得不说，非常常用，而且 "),a("a",{attrs:{href:"https://babeljs.io/docs/plugins/transform-object-rest-spread/"}},[s._v("babel")]),s._v("，"),a("a",{attrs:{href:"https://github.com/facebookarchive/jstransform"}},[s._v("jsTransform")]),s._v("，"),a("a",{attrs:{href:"https://github.com/Microsoft/TypeScript"}},[s._v("typescript")]),s._v(" 均支持，感觉很快会进入 stage4.")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-async-iteration"}},[s._v("Asynchronous Iteration")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" { value, done } = syncIterator.next();\n\nasyncIterator.next().then("),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("{ value, done }")]),s._v(") =>")]),s._v(" "),a("span",{staticClass:"hljs-comment"},[s._v("/* ... */")]),s._v(");\n")])]),a("br"),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" ("),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" line "),a("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" readLines(filePath)) {\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(line);\n}\n")])]),a("br"),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("* "),a("span",{staticClass:"hljs-title"},[s._v("readLines")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("path")]),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" file = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" fileOpen(path);\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("try")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("while")]),s._v(" (!file.EOF) {\n      "),a("span",{staticClass:"hljs-keyword"},[s._v("yield")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" file.readLine();\n    }\n  } "),a("span",{staticClass:"hljs-keyword"},[s._v("finally")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" file.close();\n  }\n}\n")])]),a("br"),a("p",[s._v("异步迭代器实现了 async await 与 generator 的结合。 然而 async await 是使用 generator 的语法糖，generator 也可以通过 switch 等流程控制函数模拟。更重要的是异步在 generator 中本身就可以实现，我在"),a("a",{attrs:{href:"https://github.com/ascoders/blog/issues/14"}},[s._v("《Callback Promise Generator Async-Await 和异常处理的演进》")]),s._v(" 文章中提过。")]),a("br"),a("p",[s._v("语法的修改一定不能为了方便（在 ECMAScript 中可能出现），但这种混杂的方式容易让人混淆 await 与 generator 之间的关系，是否进入 stage4 还需仔细斟酌。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-dynamic-import"}},[s._v("import()")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("`./section-modules/"),a("span",{staticClass:"hljs-subst"},[s._v("${link.dataset.entryModule}")]),s._v(".js`")]),s._v(")\n    .then("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("module")]),s._v(" =>")]),s._v(" {\n      "),a("span",{staticClass:"hljs-built_in"},[s._v("module")]),s._v(".loadPageInto(main);\n    })\n    .catch("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("err")]),s._v(" =>")]),s._v(" {\n      main.textContent = err.message;\n    });\n")])]),a("br"),a("p",[s._v("这个提案主要增加了函数调用版的 import，而 webpack 等构建工具也在积极实现此规范，并作为动态加载的最佳范例。希望这种“官方 Amd”可以早日加入草案。")]),a("br"),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-regexp-lookbehind"}},[s._v("RegExp Lookbehind Assertions")])])]),a("p",[s._v("javascript 正则表达式一直不支持后行断言，不过现在已经进入 stage3，相信不久会进入 stage4.")]),a("p",[s._v("前向断言：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("/\\d+(?=%)/.exec("),a("span",{staticClass:"hljs-string"},[s._v('"100% of US presidents have been male"')]),s._v(") "),a("span",{staticClass:"hljs-comment"},[s._v('// ["100"]')]),s._v("\n/\\d+(?!%)/.exec("),a("span",{staticClass:"hljs-string"},[s._v('"that’s all 44 of them"')]),s._v(") "),a("span",{staticClass:"hljs-comment"},[s._v('// ["44"]')]),s._v("\n")])]),a("br"),a("p",[s._v("后向断言：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("/(?<=\\$)\\d+"),a("span",{staticClass:"hljs-regexp"},[s._v('/.exec("Benjamin Franklin is on the $100 bill")  /')]),a("span",{staticClass:"hljs-regexp"},[s._v('/ ["100"]\n/')]),s._v("(?<!\\$)\\d+"),a("span",{staticClass:"hljs-regexp"},[s._v('/.exec("it’s is worth about €90")                /')]),a("span",{staticClass:"hljs-regexp"},[s._v('/ ["90"]\n')])])]),a("br"),s._v(' 后向断言会获取某个字符后面跟的内容，在获取美刀等货币单位上有很大用途。chrome 可以使用 `chrome.exe --js-flags="--harmony-regexp-lookbehind"` 命令开启。 '),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-regexp-unicode-property-escapes"}},[s._v("RegExp Unicode Property Escapes")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" regexGreekSymbol = "),a("span",{staticClass:"hljs-regexp"},[s._v("/\\p{Script=Greek}/u")]),s._v(";\nregexGreekSymbol.test("),a("span",{staticClass:"hljs-string"},[s._v("'π'")]),s._v(");\n"),a("span",{staticClass:"hljs-comment"},[s._v("// → true")]),s._v("\n")])]),a("br"),a("p",[s._v("以上 "),a("code",[s._v("π")]),s._v(" 字符是一个希腊字符，通过指定 "),a("code",[s._v("\\p{Script=Greek}")]),s._v(" 就可以匹配这个字符了！")]),a("p",[s._v("虽然可以通过引用希腊字符（或者其他编码）表做正则处理，当每当更新表时，更新起来会非常麻烦，不如让浏览器原生支持 "),a("code",[s._v("\\p{UnicodePropertyName=UnicodePropertyValue}")]),s._v(" 的正则语法，帮助开发人员解决这个烦恼。")]),a("br"),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-regexp-named-groups"}},[s._v("RegExp named capture groups")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" re = "),a("span",{staticClass:"hljs-regexp"},[s._v("/(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/u")]),s._v(";\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" result = re.exec("),a("span",{staticClass:"hljs-string"},[s._v("'2015-01-02'")]),s._v(");\n"),a("span",{staticClass:"hljs-comment"},[s._v("// result.groups.year === '2015';")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// result.groups.month === '01';")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// result.groups.day === '02';")]),s._v("\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// result[0] === '2015-01-02';")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// result[1] === '2015';")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// result[2] === '01';")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// result[3] === '02';")]),s._v("\n")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" {"),a("span",{staticClass:"hljs-attr"},[s._v("groups")]),s._v(": {one, two}} = "),a("span",{staticClass:"hljs-regexp"},[s._v("/^(?<one>.*):(?<two>.*)$/u")]),s._v(".exec("),a("span",{staticClass:"hljs-string"},[s._v("'foo:bar'")]),s._v(");\n"),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v("`one: "),a("span",{staticClass:"hljs-subst"},[s._v("${one}")]),s._v(", two: "),a("span",{staticClass:"hljs-subst"},[s._v("${two}")]),s._v("`")]),s._v(");  "),a("span",{staticClass:"hljs-comment"},[s._v("// prints one: foo, two: bar")]),s._v("\n")])]),a("br"),a("p",[s._v("同时，还支持 "),a("strong",[s._v("反向引用能力")]),s._v("，可以通过 "),a("code",[s._v("\\k<name>")]),s._v(" 的语法，在正则中表示同一种匹配类型，这个和 ts 范型很像：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" duplicate = "),a("span",{staticClass:"hljs-regexp"},[s._v("/^(?<half>.*).\\k<half>$/u")]),s._v(";\nduplicate.test("),a("span",{staticClass:"hljs-string"},[s._v("'a*b'")]),s._v("); "),a("span",{staticClass:"hljs-comment"},[s._v("// false")]),s._v("\nduplicate.test("),a("span",{staticClass:"hljs-string"},[s._v("'a*a'")]),s._v("); "),a("span",{staticClass:"hljs-comment"},[s._v("// true")]),s._v("\n")])]),a("p",[s._v("总体来看非常给力，毫无意义的下标也是正则反人类的原因之一，这个提案通过的话，正则会变得更加可读。")]),a("br"),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposals"}},[s._v("s (dotAll) flag for regular expressions")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("/foo.bar/s.test("),a("span",{staticClass:"hljs-string"},[s._v("'foo\\nbar'")]),s._v(");\n"),a("span",{staticClass:"hljs-comment"},[s._v("// → true")]),s._v("\n")])]),a("br"),a("p",[s._v("通过添加了新的标识符 "),a("code",[s._v("/s")]),s._v("，表示 "),a("code",[s._v(".")]),s._v(" 这个标志可以匹配任何值。原因是觉得现在正则的做法比较反人类：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("/foo[^]bar/.test("),a("span",{staticClass:"hljs-string"},[s._v("'foo\\nbar'")]),s._v(");\n"),a("span",{staticClass:"hljs-comment"},[s._v("// → true")]),s._v("\n"),a("span",{staticClass:"hljs-regexp"},[s._v("/foo[\\s\\S]bar/")]),s._v(".test("),a("span",{staticClass:"hljs-string"},[s._v("'foo\\nbar'")]),s._v(");\n"),a("span",{staticClass:"hljs-comment"},[s._v("// → true")]),s._v("\n")])]),a("p",[s._v("从保守派角度来看，可能因为掌握了 "),a("code",[s._v("[^]")]),s._v(" "),a("code",[s._v("[\\s\\S]")]),s._v(" 这种奇技淫巧而沾沾自喜，借此提高正则的门槛，让初学者“看不懂”，而高级语言的第一要义是可读性，"),a("code",[s._v("RegExp Unicode Property Escapes")]),s._v(" 与 "),a("code",[s._v("RegExp named capture groups")]),s._v(" 进入草案就是表明了对正则语义化改进的决心，相信这个提案也会被采纳。")]),a("br"),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-regexp-legacy-features"}},[s._v("Legacy RegExp features in JavaScript")])])]),a("p",[s._v("该提案主要针对 RegExp 遗留的静态属性进行梳理。平时很少接触，希望了解的人解读一下。")]),a("br"),a("p",[a("strong",[s._v("Stage2 大家庭")])]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/allenwb/ESideas/blob/master/Generator%20metaproperty.md"}},[s._v("function.sent metaproperty")])])]),a("p",[s._v("generator 的第一个 "),a("code",[s._v(".next")]),s._v(" 参数会被抛弃，因为第一次 next 没有对应上任何 "),a("code",[s._v("yield")]),s._v("，如下代码就会产生疑惑：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" *"),a("span",{staticClass:"hljs-title"},[s._v("adder")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("total="),a("span",{staticClass:"hljs-number"},[s._v("0")])]),s._v(") ")]),s._v("{\n   "),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" increment="),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(";\n   "),a("span",{staticClass:"hljs-keyword"},[s._v("while")]),s._v(" ("),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(") {\n       "),a("span",{staticClass:"hljs-keyword"},[s._v("switch")]),s._v(" (request = "),a("span",{staticClass:"hljs-keyword"},[s._v("yield")]),s._v(" total += increment) {\n          "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" "),a("span",{staticClass:"hljs-literal"},[s._v("undefined")]),s._v(": "),a("span",{staticClass:"hljs-keyword"},[s._v("break")]),s._v(";\n          "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"done"')]),s._v(": "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" total;\n          "),a("span",{staticClass:"hljs-keyword"},[s._v("default")]),s._v(": increment = "),a("span",{staticClass:"hljs-built_in"},[s._v("Number")]),s._v("(request);\n       }\n   }\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" tally = adder();\ntally.next("),a("span",{staticClass:"hljs-number"},[s._v("0.1")]),s._v("); "),a("span",{staticClass:"hljs-comment"},[s._v("// argument will be ignored")]),s._v("\ntally.next("),a("span",{staticClass:"hljs-number"},[s._v("0.1")]),s._v(");\ntally.next("),a("span",{staticClass:"hljs-number"},[s._v("0.1")]),s._v(");\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" last=tally.next("),a("span",{staticClass:"hljs-string"},[s._v('"done"')]),s._v(");\n"),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(last.value);  "),a("span",{staticClass:"hljs-comment"},[s._v("//1.2 instead of 0.3")]),s._v("\n")])]),a("br"),a("p",[s._v("当引入 "),a("code",[s._v("function.sent")]),s._v(" 后，可以接收来自 next 的传值，"),a("strong",[s._v("包括初始传值")]),s._v("：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" *"),a("span",{staticClass:"hljs-title"},[s._v("adder")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("total="),a("span",{staticClass:"hljs-number"},[s._v("0")])]),s._v(") ")]),s._v("{\n   "),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" increment="),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(";\n   "),a("span",{staticClass:"hljs-keyword"},[s._v("do")]),s._v(" {\n       "),a("span",{staticClass:"hljs-keyword"},[s._v("switch")]),s._v(" (request = "),a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(".sent){\n          "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" "),a("span",{staticClass:"hljs-literal"},[s._v("undefined")]),s._v(": "),a("span",{staticClass:"hljs-keyword"},[s._v("break")]),s._v(";\n          "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"done"')]),s._v(": "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" total;\n          "),a("span",{staticClass:"hljs-keyword"},[s._v("default")]),s._v(": increment = "),a("span",{staticClass:"hljs-built_in"},[s._v("Number")]),s._v("(request);\n       }\n       "),a("span",{staticClass:"hljs-keyword"},[s._v("yield")]),s._v(" total += increment;\n   } "),a("span",{staticClass:"hljs-keyword"},[s._v("while")]),s._v(" ("),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(")\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" tally = adder();\ntally.next("),a("span",{staticClass:"hljs-number"},[s._v("0.1")]),s._v("); "),a("span",{staticClass:"hljs-comment"},[s._v("// argument no longer ignored")]),s._v("\ntally.next("),a("span",{staticClass:"hljs-number"},[s._v("0.1")]),s._v(");\ntally.next("),a("span",{staticClass:"hljs-number"},[s._v("0.1")]),s._v(");\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" last=tally.next("),a("span",{staticClass:"hljs-string"},[s._v('"done"')]),s._v(");\n"),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(last.value);  "),a("span",{staticClass:"hljs-comment"},[s._v("//0.3")]),s._v("\n")])]),a("br"),a("p",[s._v("这是个很棒的特性，也不存在语意兼容问题，但 api 还是比较怪，而且自此 yield 接收参数也变得没有意义，况且如今 async await 逐渐成为主流，这种修正没有强烈刚需。而且 yield 的语意本身没有错误，这个提案比较危险。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-string-left-right-trim"}},[s._v("String.prototype.{trimStart,trimEnd}")])])]),a("p",[s._v("既然 "),a("code",[s._v("padStart")]),s._v(" 与 "),a("code",[s._v("padEnd")]),s._v(" 都进入了 stage4，"),a("code",[s._v("trimStart")]),s._v(" "),a("code",[s._v("trimEnd")]),s._v(" 这两个 api 也非常常用，而且从 ES5 将 "),a("code",[s._v("String.prototype.trim")]),s._v(" 引入了标准来看，这两个非常有望晋升到 stage3。")]),a("br"),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-class-fields"}},[s._v("Class Fields")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Counter")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("HTMLElement")]),s._v(" ")]),s._v("{\n  x = "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n  #y = "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(";\n}\n")])]),a("br"),a("p",[s._v("类成员变量，有了它 js 就完整了。虽然觉得似有变量符号很难看，但成员变量绝对是非常有用的语法，在 react 中已经很常用了：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Todo")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("React")]),s._v("."),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n  state = { "),a("span",{staticClass:"hljs-comment"},[s._v("//.. }")]),s._v("\n}\n")])]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-promise-finally"}},[s._v("Promise.prototype.finally")])])]),a("p",[s._v("就像 "),a("code",[s._v("try/catch/finally")]),s._v(" 一样，try return 了都能执行 finally，是非常方便的，对 promise 来说也是如此，"),a("a",{attrs:{href:"https://github.com/petkaantonov/bluebird"}},[s._v("bluebird")]),s._v(" "),a("a",{attrs:{href:"https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback"}},[s._v("Q")]),s._v(" 等库已经实现了此功能。")]),a("br"),a("p",[s._v("但是库实现不足以使其纳入标准，只有当这些需求足够常用和通用时才会考虑。第三方库可能从竞争力角度考虑，多支持一种功能、少些一行代码就是多一份筹码，但语言规范是不能在乎这些的。")]),a("br"),a("ul",[a("li",[a("a",{attrs:{href:"http://tc39.github.io/proposal-decorators/"}},[s._v("Class and Property Decorators")])])]),a("p",[s._v("类级别的装饰器已经进入 stage2 了，但现代前端开发中已经非常常用，很可能会进一步进入 stage3.")]),a("p",[s._v("如果这个提案被废弃，那么大部分现代 js 代码将面临大量使用不存在语法的窘境。不过乐观的是，目前还找不到更好的装饰器替代方案，而在 python 中也存在装饰器模式可以参考。")]),a("br"),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-intl-segmenter"}},[s._v("Intl.Segmenter")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-comment"},[s._v("// Create a segmenter in your locale")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" segmenter = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Intl")]),s._v(".Segmenter("),a("span",{staticClass:"hljs-string"},[s._v('"fr"')]),s._v(", {"),a("span",{staticClass:"hljs-attr"},[s._v("granularity")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v('"word"')]),s._v("});\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// Get an iterator over a string")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" iterator = segmenter.segment("),a("span",{staticClass:"hljs-string"},[s._v('"Ceci n\'est pas une pipe"')]),s._v(");\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// Iterate over it!")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" ("),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" {segment, breakType} "),a("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" iterator) {\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v("`segment: "),a("span",{staticClass:"hljs-subst"},[s._v("${segment}")]),s._v(" breakType: "),a("span",{staticClass:"hljs-subst"},[s._v("${breakType}")]),s._v("`")]),s._v(");\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("break")]),s._v(";\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// logs the following to the console:")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// segment: Ceci breakType: letter")]),s._v("\n")])]),a("br"),a("p",[a("code",[s._v("Intl.Segmenter")]),s._v(" 可以帮助分析单词断句分析，可能在 nlp 领域比较有用，在文本编辑器自动选中功能中也很有用。")]),a("p",[s._v("虽然不是刚需，但 js 作为网页交互的语言，确实需要解决分析用户输入的问题。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-bigint"}},[s._v("Arbitrary-precision Integers")])])]),a("p",[s._v("新增了基本类型：整数类型，以及 Integer api 与字面语法 1234n。")]),a("p",[s._v("目前 js 使用 64 位浮点数处理所有计算，直接导致了运算效率低下，这个提案弥补了 js 的计算缺点，希望可以早日进入草案。")]),a("p",[s._v("提案名称由 Integer 改为 BigInt。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposals"}},[s._v("import.meta")])])]),a("p",[s._v("提出了使用 "),a("code",[s._v("import.meta")]),s._v(" 获取当前模块的域信息。类比 nodejs 存在 "),a("code",[s._v("__dirname")]),s._v(" 等信息标志当前脚本信息，通过浏览器加载的模块也应当拥有这种能力。")]),a("p",[s._v("目前 js 可以通过如下方式获取脚本信息：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" theOption = "),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".currentScript.dataset.option;\n")])]),a("br"),a("p",[s._v("这样污染了全局变量，脚本信息应当存储在脚本作用域中，因此提案希望将脚本信息存储在脚本的 "),a("code",[s._v("import.meta")]),s._v(" 变量中，因此可以这么使用：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("("),a("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" () => {\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" response = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" fetch("),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" URL("),a("span",{staticClass:"hljs-string"},[s._v('"../hamsters.jpg"')]),s._v(", "),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(".meta.url));\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" blob = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" response.blob();\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" size = "),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(".meta.scriptElement.dataset.size || "),a("span",{staticClass:"hljs-number"},[s._v("300")]),s._v(";\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" image = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Image();\n  image.src = URL.createObjectURL(blob);\n  image.width = image.height = size;\n\n  "),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".body.appendChild(image);\n})();\n")])]),a("br"),a("p",[a("strong",[s._v("Stage1 大家庭")])]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/FaustDeGoethe/proposal-date-time-string-format"}},[s._v("Date.parse fallback semantics")])])]),a("p",[s._v("通过字符串格式化日期一直是跨浏览器的痛点，本提案希望通过新增 "),a("code",[s._v("Date.parse")]),s._v(" 标准完成这个功能。")]),a("blockquote",[a("p",[s._v('"The function first attempts to parse the format of the String according to the rules (including extended years) called out in Date Time String Format (20.3.1.16). If the String does not conform to that format the function may fall back to any implementation-specific heuristics or implementation-specific date formats."')])]),a("p",[s._v("正如提案所说，“如果字符串不满足 ISO 8601 格式，可以返回你想返回的任何值” 这样迷惑开发者是没有任何意义的，这样只会让开发者越来越不相信 js 是跨平台的语言。")]),a("p",[s._v("这么重要的规范居然才 stage1，必须要顶上去。")]),a("h3",{attrs:{id:"export-as-ns-from-mod-statements"}},[a("a",{attrs:{href:"https://github.com/tc39/proposal-export-ns-from"}},[s._v('export * as ns from "mod"; statements')]),s._v(" "),a("a",{staticClass:"header-anchor",attrs:{href:"#export-as-ns-from-mod-statements"}},[s._v("§")])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" * "),a("span",{staticClass:"hljs-keyword"},[s._v("as")]),s._v(" someIdentifier "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"someModule"')]),s._v(";\n")])]),a("br"),a("p",[s._v("很方便的 api，很多时候希望导出某个模块的全部接口，又不希望命名冲突，可以少写一行 import。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-export-default-from"}},[s._v('export v from "mod"; statements')])])]),a("p",[s._v("这个提案与 "),a("a",{attrs:{href:"https://github.com/tc39/proposal-export-ns-from"}},[s._v('export * as ns from "mod"; statements')]),s._v(" 冲突了，感觉 "),a("a",{attrs:{href:"https://github.com/tc39/proposal-export-ns-from"}},[s._v('export * as ns from "mod"; statements')]),s._v(" 提案更清晰一些。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-observable"}},[s._v("Observable")])])]),a("p",[s._v("可观察类型可以从 dom 事件、轮询等触发事件中创建监听并订阅：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("listen")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("element, eventName")]),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Observable("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("observer")]),s._v(" =>")]),s._v(" {\n        "),a("span",{staticClass:"hljs-comment"},[s._v("// Create an event handler which sends data to the sink")]),s._v("\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" handler = "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("event")]),s._v(" =>")]),s._v(" observer.next(event);\n\n        "),a("span",{staticClass:"hljs-comment"},[s._v("// Attach the event handler")]),s._v("\n        element.addEventListener(eventName, handler, "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(");\n\n        "),a("span",{staticClass:"hljs-comment"},[s._v("// Return a cleanup function which will cancel the event stream")]),s._v("\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {\n            "),a("span",{staticClass:"hljs-comment"},[s._v("// Detach the event handler from the element")]),s._v("\n            element.removeEventListener(eventName, handler, "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(");\n        };\n    });\n}\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// Return an observable of special key down commands")]),s._v("\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("commandKeys")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("element")]),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" keyCommands = { "),a("span",{staticClass:"hljs-string"},[s._v('"38"')]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v('"up"')]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v('"40"')]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v('"down"')]),s._v(" };\n\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" listen(element, "),a("span",{staticClass:"hljs-string"},[s._v('"keydown"')]),s._v(")\n        .filter("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("event")]),s._v(" =>")]),s._v(" event.keyCode "),a("span",{staticClass:"hljs-keyword"},[s._v("in")]),s._v(" keyCommands)\n        .map("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("event")]),s._v(" =>")]),s._v(" keyCommands[event.keyCode])\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" subscription = commandKeys(inputElement).subscribe({\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("next")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("val")]),s._v(")")]),s._v(" { "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v('"Received key command: "')]),s._v(" + val) },\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("error")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("err")]),s._v(")")]),s._v(" { "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v('"Received an error: "')]),s._v(" + err) },\n    "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("complete")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" { "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v('"Stream complete"')]),s._v(") },\n});\n")])]),a("br"),a("p",[s._v("这个名字和 Object.observe 很像，不过没什么关系。该功能已经被 "),a("a",{attrs:{href:"https://github.com/ReactiveX/RxJS"}},[s._v("RxJS")]),s._v("、"),a("a",{attrs:{href:"https://github.com/staltz/xstream"}},[s._v("XStream")]),s._v(" 等库实现。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/String.prototype.matchAll"}},[s._v("String#matchAll")])])]),a("p",[s._v("目前正则表达式想要匹配全部的语法不够语义化，提案希望通过 "),a("code",[s._v("matchAll")]),s._v(" 返回迭代器来遍历匹配结果，很赞！")]),a("p",[s._v("现在匹配全部只能使用 "),a("code",[s._v("while ((result = patt.exec(str)) != null)")]),s._v(" 这种方式遍历，不优雅。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-weakrefs"}},[s._v("WeakRefs")])])]),a("p",[s._v("弱引用，提案地址文档：https://github.com/tc39/proposal-weakrefs/blob/master/specs/Weak%20References%20for%20EcmaScript.pdf")]),a("p",[s._v("有点像 OC 的弱引用，当对象被释放时，当前持有弱引用的对象也会被 GC 回收，但似乎还没有开始讨论，js 越来越底层了？")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/FUDCo/frozen-realms"}},[s._v("Frozen Realms")])])]),a("p",[s._v("增强了 "),a("a",{attrs:{href:"https://github.com/tc39/proposal-realms"}},[s._v("Realms")]),s._v(" 提案，利用不可变结构，实现结构共享。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/rwaldron/proposal-math-extensions"}},[s._v("Math Extensions")])])]),a("p",[s._v("Math 函数的拓展包含的函数：https://rwaldron.github.io/proposal-math-extensions/")]),a("p",[s._v("这个函数拓展很给力，特别是设计游戏，计算角度的时候：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-built_in"},[s._v("Math")]),s._v(".DEG_PER_RAD "),a("span",{staticClass:"hljs-comment"},[s._v("// Math.PI / 180")]),s._v("\n")])]),a("br"),a("p",[a("code",[s._v("Math.DEG_PER_RAD")]),s._v(" 是一种单位，让角度可以用 0～360 为周期的数字表示，比如射击子弹时的角度、或者做可视化时都非常有用，类比 css 中的："),a("code",[s._v("transform: rotate(180deg);")]),s._v("。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-setmap-offrom"}},[s._v("of and from on collection constructors")])])]),a("p",[s._v("该提案设计了 Set、Map 类型的 "),a("code",[s._v("of")]),s._v(" "),a("code",[s._v("from")]),s._v(" 方法，具体见此：https://tc39.github.io/proposal-setmap-offrom/")]),a("p",[s._v("问题由于:")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-built_in"},[s._v("Reflect")]),s._v(".construct("),a("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(", ["),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("]) "),a("span",{staticClass:"hljs-comment"},[s._v("// [1,2,3]")]),s._v("\n"),a("span",{staticClass:"hljs-built_in"},[s._v("Reflect")]),s._v(".construct("),a("span",{staticClass:"hljs-built_in"},[s._v("Set")]),s._v(", ["),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("]) "),a("span",{staticClass:"hljs-comment"},[s._v("// Uncaught TypeError: undefined is not a function")]),s._v("\n")])]),a("br"),a("p",[s._v("因为 Set 接收的参数是数组，而 construct 会调用 "),a("code",[s._v("CreateListFromArrayLike")]),s._v(" 将参数打平，变成了 "),a("code",[s._v("new Set(1, 2, 3)")]),s._v(" 传入，实际上是语法错误的，因此作者提议新增下 Set、Map 的 "),a("code",[s._v("of")]),s._v(" "),a("code",[s._v("from")]),s._v(" 方法。")]),a("p",[s._v("Set、Map 在国内环境用的比较少，也很少有人计较这个问题，不过从技术角度来看，确实需要修复。。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://esdiscuss.org/topic/generator-arrow-functions"}},[s._v("Generator arrow functions (=>*)")])])]),a("p",[s._v("还是挺有必要的，毕竟都出箭头函数了，也要支持一下箭头函数的 generator 语法。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-promise-try"}},[s._v("Promise.try")])])]),a("p",[s._v("同理，各大库都有实现，好处是所有错误都可以通过 "),a("code",[s._v(".catch")]),s._v(" 捕获，而不用担心同步、异步错误的抛出。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://docs.google.com/presentation/d/11O_wIBBbZgE1bMVRJI8kGnmC6dWCBOwutbN9SWOK0fU/view#slide=id.p"}},[s._v("Null Propagation")])])]),a("p",[s._v("超级有用，看代码就知道了：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" firstName = message.body?.user?.firstName || "),a("span",{staticClass:"hljs-string"},[s._v("'default'")]),s._v("\n")])]),a("br"),a("p",[s._v("该功能完全等同：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" firstName = \n\t(message && \n\tmessage.body && \n\tmessage.body.user &&\n\tmessage.body.user.firstName) || "),a("span",{staticClass:"hljs-string"},[s._v("'default'")]),s._v("\n")])]),a("br"),a("p",[s._v("希望立刻进入 stage4.")]),a("ul",[a("li",[a("a",{attrs:{href:"http://jfbastien.github.io/papers/Math.signbit.html"}},[s._v("Math.signbit: IEEE-754 sign bit")])])]),a("p",[s._v("当值为 负数 或 -0 时返回 "),a("code",[s._v("true")]),s._v("。由于 "),a("code",[s._v("Math.sign")]),s._v(" 不区分 +0 与 -0，因此提案建议增加此函数，而且此函数在 c、c++、go 语言都有实现。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-error-stacks"}},[s._v("Error stacks")])])]),a("p",[s._v("提案建议将 "),a("code",[s._v("Error.prototype.stack")]),s._v(" 作为标准，这对错误上报与分析特别有用，强烈支持。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://gist.github.com/dherman/1c97dfb25179fa34a41b5fff040f9879"}},[s._v("do expressions")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" (\n  "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("nav")]),s._v(">")]),s._v("\n    "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("Home")]),s._v(" />")]),s._v("\n    {\n      do {\n        if (loggedIn) {\n          "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("LogoutButton")]),s._v(" />")]),s._v("\n        } else {\n          "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("LoginButton")]),s._v(" />")]),s._v("\n        }\n      }\n    }\n  "),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("nav")]),s._v(">")])]),s._v("\n)\n")])]),a("br"),a("p",[a("code",[s._v("jsx")]),s._v(" 再也不用写得超长了，"),a("code",[s._v("styled-components")]),s._v(" 中被诟病的分支判断难以阅读的问题也会烟消云散，因为我们有 "),a("code",[s._v("do")]),s._v("!")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-realms"}},[s._v("Realms")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" realm = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Realm();\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" outerGlobal = "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(";\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" innerGlobal = realm.global;\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" f = realm.evalScript("),a("span",{staticClass:"hljs-string"},[s._v('"(function() { return 17 })"')]),s._v(");\n\nf() === "),a("span",{staticClass:"hljs-number"},[s._v("17")]),s._v(" "),a("span",{staticClass:"hljs-comment"},[s._v("// true")]),s._v("\n\n"),a("span",{staticClass:"hljs-built_in"},[s._v("Reflect")]),s._v(".getPrototypeOf(f) === outerGlobal.Function.prototype "),a("span",{staticClass:"hljs-comment"},[s._v("// false")]),s._v("\n"),a("span",{staticClass:"hljs-built_in"},[s._v("Reflect")]),s._v(".getPrototypeOf(f) === innerGlobal.Function.prototype "),a("span",{staticClass:"hljs-comment"},[s._v("// true")]),s._v("\n")])]),a("br"),a("p",[a("code",[s._v("Realms")]),s._v(" 提供了 global 环境的隔离，eval 执行代码时不再会污染全局，简直是测试的福利，脑洞很大。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/maggiepint/proposal-temporal"}},[s._v("Temporal")])])]),a("p",[s._v("与 "),a("code",[s._v("Date")]),s._v(" 类似，但功能更强：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" ldt = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" temporal.LocalDateTime("),a("span",{staticClass:"hljs-number"},[s._v("2017")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("12")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("31")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("23")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(");\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" ldt = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" temporal.LocalDateTime("),a("span",{staticClass:"hljs-number"},[s._v("2017")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("12")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("31")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("23")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", options);\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" ldt = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" temporal.LocalDateTime("),a("span",{staticClass:"hljs-number"},[s._v("2017")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("12")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("31")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("23")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(");\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" ldt = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" temporal.LocalDateTime("),a("span",{staticClass:"hljs-number"},[s._v("2017")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("12")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("31")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("23")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", options);\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" ldt = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" temporal.LocalDateTime("),a("span",{staticClass:"hljs-number"},[s._v("2017")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("12")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("31")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("23")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("123")]),s._v(");\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" ldt = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" temporal.LocalDateTime("),a("span",{staticClass:"hljs-number"},[s._v("2017")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("12")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("31")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("23")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("123")]),s._v(", options);\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" ldt = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" temporal.LocalDateTime("),a("span",{staticClass:"hljs-number"},[s._v("2017")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("12")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("31")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("23")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("123")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("456789")]),s._v(");\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" ldt = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" temporal.LocalDateTime("),a("span",{staticClass:"hljs-number"},[s._v("2017")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("12")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("31")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("23")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("59")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("123")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("456789")]),s._v(", options);\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// add/subtract time  (Dec 31 2017 23:00 + 2h = Jan 1 2018 01:00)")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" addHours = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" temporal.LocalDateTime("),a("span",{staticClass:"hljs-number"},[s._v("2017")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("12")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("31")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("23")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("00")]),s._v(").add("),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v("'hours'")]),s._v(");\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// add/subtract months  (Mar 31 - 1M = Feb 28)")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" addMonths = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" temporal.LocalDateTime("),a("span",{staticClass:"hljs-number"},[s._v("2017")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("03")]),s._v(","),a("span",{staticClass:"hljs-number"},[s._v("31")]),s._v(").subtract("),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v("'months'")]),s._v("); \n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// add/subtract years  (Feb 29 2020 - 1Y = Feb 28 2019)")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" subtractYears = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" temporal.LocalDateTime("),a("span",{staticClass:"hljs-number"},[s._v("2020")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("02")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("29")]),s._v(").subtract("),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v("'years'")]),s._v(");\n")])]),a("p",[s._v("还自带时区转换 api 等等，如果进入草案，可以放弃 moment 这个重量级库了。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://docs.google.com/presentation/d/1Ta_IbravBUOvu7LUhlN49SvLU-8G8bIQnsS08P3Z4vY/edit?usp=sharing"}},[s._v("Float16 on TypedArrays, DataView, Math.hfround")])])]),a("p",[s._v("由于大多数 WebGL 纹理需要半精度以上的浮点数计算，推荐了 4 个 api：")]),a("ul",[a("li",[a("p",[s._v("Float16Array")])]),a("li",[a("p",[s._v("DataView.prototype.getFloat16")])]),a("li",[a("p",[s._v("DataView.prototype.setFloat16")])]),a("li",[a("p",[s._v("Math.hfround(x)")])]),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/lars-t-hansen/moz-sandbox/blob/master/sab/waitNonblocking.md"}},[s._v("Atomics.waitNonblocking")])])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" sab = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" SharedArrayBuffer("),a("span",{staticClass:"hljs-number"},[s._v("4096")]),s._v(");\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" ia = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Int32Array")]),s._v("(sab);\nia["),a("span",{staticClass:"hljs-number"},[s._v("37")]),s._v("] = "),a("span",{staticClass:"hljs-number"},[s._v("0x1337")]),s._v(";\ntest1();\n\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("test1")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  Atomics.waitNonblocking(ia, "),a("span",{staticClass:"hljs-number"},[s._v("37")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("0x1337")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("1000")]),s._v(").then("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("r")]),s._v(") ")]),s._v("{ "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v('"Resolved: "')]),s._v(" + r); test2(); });\n}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" code = "),a("span",{staticClass:"hljs-string"},[s._v('`\nvar ia = null;\nonmessage = function (ev) {\n  if (!ia) {\n    console.log("Aux worker is running");\n    ia = new Int32Array(ev.data);\n  }\n  console.log("Aux worker is sleeping for a little bit");\n  setTimeout(function () { console.log("Aux worker is waking"); Atomics.wake(ia, 37); }, 1000);\n}`')]),s._v(";\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("test2")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" w = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Worker("),a("span",{staticClass:"hljs-string"},[s._v('"data:application/javascript,"')]),s._v(" + "),a("span",{staticClass:"hljs-built_in"},[s._v("encodeURIComponent")]),s._v("(code));\n  w.postMessage(sab);\n  Atomics.waitNonblocking(ia, "),a("span",{staticClass:"hljs-number"},[s._v("37")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("0x1337")]),s._v(").then("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("r")]),s._v(") ")]),s._v("{ "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v('"Resolved: "')]),s._v(" + r); test3(w); });\n}\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("test3")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("w")]),s._v(") ")]),s._v("{\n  w.postMessage("),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(");\n  Atomics.waitNonblocking(ia, "),a("span",{staticClass:"hljs-number"},[s._v("37")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("0x1337")]),s._v(").then("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("r")]),s._v(") ")]),s._v("{ "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v('"Resolved 1: "')]),s._v(" + r); });\n  Atomics.waitNonblocking(ia, "),a("span",{staticClass:"hljs-number"},[s._v("37")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("0x1337")]),s._v(").then("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("r")]),s._v(") ")]),s._v("{ "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v('"Resolved 2: "')]),s._v(" + r); });\n  Atomics.waitNonblocking(ia, "),a("span",{staticClass:"hljs-number"},[s._v("37")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("0x1337")]),s._v(").then("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),a("span",{staticClass:"hljs-params"},[s._v("r")]),s._v(") ")]),s._v("{ "),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),a("span",{staticClass:"hljs-string"},[s._v('"Resolved 3: "')]),s._v(" + r); });\n  \n}\n")])]),a("br"),a("p",[s._v("该 api 可以在多线程操作中，有顺序的操作同一个内存地址，如上代码变量 "),a("code",[s._v("ia")]),s._v(" 虽然在多线程中执行，但每个线程都会等资源释放后再继续执行。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-numeric-separator"}},[s._v("Numeric separators")])])]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-number"},[s._v("1_000_000_000")]),s._v("           "),a("span",{staticClass:"hljs-comment"},[s._v("// Ah, so a billion")]),s._v("\n"),a("span",{staticClass:"hljs-number"},[s._v("101_475_938.38")]),s._v("          "),a("span",{staticClass:"hljs-comment"},[s._v("// And this is hundreds of millions")]),s._v("\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" fee = "),a("span",{staticClass:"hljs-number"},[s._v("123_00")]),s._v(";       "),a("span",{staticClass:"hljs-comment"},[s._v("// $123 (12300 cents, apparently)")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" fee = "),a("span",{staticClass:"hljs-number"},[s._v("12_300")]),s._v(";       "),a("span",{staticClass:"hljs-comment"},[s._v("// $12,300 (woah, that fee!)")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" amount = "),a("span",{staticClass:"hljs-number"},[s._v("12345_00")]),s._v(";  "),a("span",{staticClass:"hljs-comment"},[s._v("// 12,345 (1234500 cents, apparently)")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" amount = "),a("span",{staticClass:"hljs-number"},[s._v("123_4500")]),s._v(";  "),a("span",{staticClass:"hljs-comment"},[s._v("// 123.45 (4-fixed financial)")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" amount = "),a("span",{staticClass:"hljs-number"},[s._v("1_234_500")]),s._v("; "),a("span",{staticClass:"hljs-comment"},[s._v("// 1,234,500")]),s._v("\n")])]),a("br"),a("p",[s._v("提案希望 js 支持分隔符使大数字阅读性更好（不影响计算），很多语言都有实现，很人性化。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("每个草案都觉得很靠谱，涉及语义化、无障碍、性能、拓展语法、连接 nodejs 等方面，虽然部分提案"),a("a",{attrs:{href:"http://www.yinwang.org/blog-cn/2013/04/18/language-design-mistake2"}},[s._v("从语言设计角度是错误的")]),s._v("，但 js 运行在网页端，涉及到人机交互、网络加载等问题，遇到的问题自然比任何语言都要复杂，每个提案都是从实践中出发，相信这种道路是正确的。")]),a("br"),a("p",[s._v("由于篇幅与时间限制，stage0 的提案等下次再讨论。特别提一点，stage0 的 "),a("a",{attrs:{href:"https://github.com/tc39/proposal-cancellation"}},[s._v("Cancellation API")]),s._v(" 很值得大家关注，取消异步操作是人心所向，大势所趋啊。")]),a("br"),a("p",[s._v("感谢所有参与讨论的同学，你们的支持会转化为我们的动力，每周更新，风雨无阻。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},e439:function(s,t,a){var e=a("23e7"),n=a("d039"),l=a("fc6a"),i=a("06cf").f,r=a("83ab"),v=n((function(){i(1)})),_=!r||v;e({target:"Object",stat:!0,forced:_,sham:!r},{getOwnPropertyDescriptor:function(s,t){return i(l(s),t)}})},e46d:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("模态框的最佳实践")])]),a("h2",{attrs:{id:"mo-tai-kuang-de-zui-jia-shi-jian"}},[s._v("模态框的最佳实践 "),a("a",{staticClass:"header-anchor",attrs:{href:"#mo-tai-kuang-de-zui-jia-shi-jian"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读的文章是："),a("a",{attrs:{href:"https://uxplanet.org/best-practices-for-modals-overlays-dialog-windows-c00c66cddd8c"}},[s._v("best practices for modals overlays dialog windows")]),s._v("。")])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i1/O1CN01DnoLTI1Yz7xqiVKKW_!!6000000003129-2-tps-1280-679.png",alt:"logo",width:"500"}}),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("我为什么要选这篇文章呢？")]),a("ol",[a("li",[s._v("前端工程师今天在外界是怎么定位的。很多人以为前端都应该讨论架构层面的问题，其实不仅仅在此，我们不应该忽视交互体验这件事。")]),a("li",[s._v("对于用户体验的追求前端工程师从来没有停止过，而模态框在产品中的出现出现过很多争议，我想知道我们是怎么思考这件事的。")])])],2)],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[s._v("来自 Wikipedia 的定义：模态框是一个定位于应用视窗顶层的元素。它创造了一种模式让自身保持在一个最外层的子视察下显示，并让主视窗失效。用户必须在回到主视窗前在它上面做交互动作。")]),a("p",[a("strong",[s._v("模态框用处")])]),a("ul",[a("li",[s._v("抓住用户的吸引力")]),a("li",[s._v("需要用户输入")]),a("li",[s._v("在上下文下显示额外的信息")]),a("li",[s._v("不在上下文下显示额外的信息")])]),a("p",[s._v("不要用模态框显示错误、成功或警告的信息。保持它们在页面上。")]),a("br"),a("p",[a("strong",[s._v("模态框的组成")])]),a("ul",[a("li",[s._v("退出的方式。可以是模态框上的一个按钮，可以是键盘上的一个按键，也可以是模态框外的区域。")]),a("li",[s._v("描述性的标题。标题其实给了用户一个上下文信息。让用户知道他现在在哪个位置作操作。")]),a("li",[s._v("按钮的内容。它一定要是可行动的，可以理解的。不要试图让按钮的内容让用户迷惑，如果你尝试做一个取消动作，但框内有一个取消的按钮，那么我是要取消一个取消呢，还是继续我的取消。")]),a("li",[s._v("大小与位置。模态框的大小不要太大或太小，不应该。模态框的位置建议在视窗中间偏上的位置，因为在移动端如果太低的话会失去很多信息。")]),a("li",[s._v("焦点。模态框的出现一定要吸引你的注意力，建议键盘的焦点也切换到框内。")]),a("li",[s._v("用户发起。不要对用户造成惊吓。用用户的动作，比如一个按钮的点击来触发模态框的出现。")])]),a("br"),a("p",[a("strong",[s._v("模态框在移动端")])]),a("p",[s._v("模态框在移动端总是不是玩转得很好。其中一个原因是一般来说模态框都太大了，占用了太多空间。建议增加设备的按键或内置的滚动条来操作，用户可以左移或放大缩小来抓住模态框。")]),a("br"),a("p",[a("strong",[s._v("无障碍访问")])]),a("ol",[a("li",[s._v("快捷键。我们应该考虑在打开，移动，管理焦点和关闭时增加对模态框的快捷键。")]),a("li",[s._v("ARIA。在前端代码层面加上 aria 的标识，如 Role = “dialog” , aria-hidden, aria-label")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("ul",[a("li",[a("h3",{attrs:{id:"mo-tai-kuang-ding-wei"}},[s._v("模态框定位 "),a("a",{staticClass:"header-anchor",attrs:{href:"#mo-tai-kuang-ding-wei"}},[s._v("§")])])])]),a("p",[s._v("首先，Modal 与 Toast、Notification、Message 以及 Popover 都会在某个时间点被触发弹出一个浮层，但与 Modal（模态框）还是有所不同的。定义上看，上述组件都不属于模态框，因为模态框有一个重要的特性，即阻塞原来主视窗下的操作，只能在框内作后续动作。也就是说模态框从界面上彻底打断了用户心流。")]),a("br"),a("p",[s._v("当然，这也是我们需要讨论的问题，如果只是一般的消息提醒，可以用信息条、小红点等交互形式，至少是不阻塞用户操作的。在原文末引用的 10 Guidelines to Consider when using Overlays 一文中，第 8 条强调了模态框不到万不得以不应该使用。这时我们应该思考什么情况下你非常希望他不要离开页面，来读框内的信息或作操作呢？")]),a("br"),a("p",[s._v("反过来说，模态框有什么优点呢？要知道比起页面跳转来说，模态框的体验还是要轻量的多。例如，用户在淘宝上看中了一款商品，想登陆购买，此时弹出登陆模态框的体验就要远远好于跳转到登陆页面，因为用户在模态框中登陆后，就可以直接购买了。其次，模态框的内容对于当前页面来说是一种衍生或补充，可以让用户更为专注去阅读或者填写一些内容。")]),a("br"),a("p",[s._v("也就是说，当我们设计好模态框出现的时机，流畅的弹出体验，必要的上下文信息，以及友好的退出反馈，还是完全可以提升体验的。模态框的目的在于吸引注意，但一定需要提供额外的信息，或是一个重要的用户操作，或是一份重要的协议确认。在本页面即可完成流程或信息告知。")]),a("br"),a("ul",[a("li",[a("h3",{attrs:{id:"he-li-de-shi-yong-mo-tai-kuang"}},[s._v("合理的使用模态框 "),a("a",{staticClass:"header-anchor",attrs:{href:"#he-li-de-shi-yong-mo-tai-kuang"}},[s._v("§")])])])]),a("p",[s._v("我们也总结了一些经验，更好地使用模态框。")]),a("br"),a("ul",[a("li",[s._v("内容是否相关。模态框是作为当前页面的一种衍生或补充，如果其内容与当前内容毫不相干，那么可以使用其他操作（如新页面跳转）来替代模态框；")]),a("li",[s._v("模态框内部应该避免有过多的操作。模态框应该给用户一种看完即走，而且走的流畅潇洒的感觉，而不是利用繁杂的交互留住或牵制住用户；")]),a("li",[s._v("避免出现一个以上的模态框。出现多个模态框会加深了产品的垂直深度，提高了视觉复杂度，而且会让用户烦躁起来；")]),a("li",[s._v("不要突然打开或自动打开模态框，这个操作应该是用户主动触发的；")])]),a("br"),a("p",[s._v("还有两种根据实际情况来定义：")]),a("br"),a("ul",[a("li",[s._v("大小。对于模态框的大小应该要有相对严格的限制，如果内容过多导致模态框或页面出现滚动条，一般来说这种体验很糟糕，但如果用于展示一些明细内容，我们可能还是会考虑使用滚动条来做；")]),a("li",[s._v("开启或关闭动画。现在有非常多的设计倾向于用动画完成流畅的过渡，让 Modal 变得不再突兀，"),a("a",{attrs:{href:"https://dribbble.com/shots/3206370-Coverage-Modal-Motion-Study"}},[s._v("dribble 上有很多相关例子")]),s._v("。但在一些围绕数据来做复杂处理的应用中，如 ERP、CRM 产品中用户通常关注点都在一个表单和围绕表单做的一系列操作，页面来回切换或复杂的看似酷炫的动画可能都会影响效率。用户需要的是直截了当的完成操作，这时候可能就不需要动画，用户想要的就是快捷的响应。")])]),a("br"),a("p",[s._v("举两个例子，Facebook 在这方面给我们很好的 demo，它的分享模态框与主视窗是在同一个位置，给人非常流畅的体验。还看到一个细节，从主视窗到模态框焦点上的字体会变大。对比微博，它就把照片等分享形式直接展示出来，焦点在输入框上时也没有变化。")]),a("br"),a("p",[s._v("第二个例子是 Quora，Quora 主页呈现的是 Feed 流，点击标题就会打开一个模态框展示它回答的具体内容，内容里面是带有滚动条的，按 ESC 键就可以关闭。非常流畅的体验。相比较之下知乎首页想要快速看内容得来回切换。")]),a("ul",[a("li",[a("h3",{attrs:{id:"ke-fang-wen-xing-de-fan-si"}},[s._v("可访问性的反思 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ke-fang-wen-xing-de-fan-si"}},[s._v("§")])])])]),a("p",[s._v("Accessibility 翻译过来是『无障碍访问』，是对不同终端用户的体验完善。每一个模态框，都要有通过键盘关闭的功能，通常使用 ESC 键。似乎我们程序员多少总会把我们自我的惯性思维带进实现的产品，尤其是当我们敲着外置的键盘，用着 PC 的时候。")]),a("br"),a("p",[s._v("下面的这些问题都是对可访问性的反思：")]),a("br"),a("ul",[a("li",[s._v("用户可能没有鼠标，或者没有键盘，甚至可能既没有鼠标也没有键盘，只使用的是语音控制？你让这些用户如何退出")]),a("li",[s._v("很多的 Windows PC 都已经获得了很好的触屏支持，而你的网页依旧只支持了键盘跟鼠标？")]),a("li",[s._v("在没有苹果触摸板的地方，横向滚动条是不是一个逆天的设计？")]),a("li",[s._v("在网页里，使用 Command(Ctrl) and +/- 和使用触摸板的缩放事件是两个不同的表现？")]),a("li",[s._v("如果你的终端用户没有好用的触摸板，但是他的确看不清你的网页上的内容。如果他用了前者，你能不能保证你的网页依然能够正常展示内容？")])]),a("br"),a("p",[s._v("可访问性一直都是产品极其忽视的，在文章的最佳实践最后特别强调了它是怎么做的，对我们这些开发者是很好的督促。")]),a("ul",[a("li",[a("h3",{attrs:{id:"mo-tai-kuang-dai-ma-shi-xian-ceng-mian"}},[s._v("模态框代码实现层面 "),a("a",{staticClass:"header-anchor",attrs:{href:"#mo-tai-kuang-dai-ma-shi-xian-ceng-mian"}},[s._v("§")])])])]),a("p",[s._v("前端开发还是少不了代码层面的实现，"),a("strong",[s._v("业务代码对于有状态或无状态模态框的使用方式存在普遍问题")]),s._v("。")]),a("br"),a("p",[s._v("对有状态模态框来说，很多库会支持 "),a("code",[s._v(".show")]),s._v(" 直接调用的方式，那么模态框内部渲染逻辑，会在此方法执行时执行，没有什么问题。不过现在流行无状态模态框(Stateless Modal)，模态框的显示与否交由父级组件控制，我们只要将模态框代码预先写好，由外部控制是否显示。")]),a("br"),a("p",[s._v("这种无状态模态框的方式，在模态框需要显示复杂逻辑的场景中，会自然将初始化逻辑写在父级，当模态框出现在循环列表中，往往会引发首屏触发 2-30 次模态框初始化运算，而这些运算最佳状态是模态框显示时执行一次，由于模态框同一时间只会出现一个，最次也是首屏初始化一次，但下面看似没问题的代码往往会引发性能危机：")]),a("br"),a("pre",[a("code",{staticClass:"hljs language-js"},[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" TdElement = data.map("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("item")]),s._v(" =>")]),s._v(" {\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" (\n    "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("Td")]),s._v(">")]),s._v("\n      "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("Button")]),s._v(">")]),s._v("详情"),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("Button")]),s._v(">")]),s._v("\n      "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("Modal")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("show")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("{item.show}")]),s._v(" />")]),s._v("\n    "),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("Td")]),s._v(">")])]),s._v("\n  )\n});\n")])]),a("br"),a("p",[s._v("上面代码初始化执行了 N 个模态框初始化代码，显然不合适。对于 table 操作列中触发的模态框，所有行都复用同一个模态框，通过父级中一个状态变量来控制展示的内容：")]),a("br"),a("pre",[a("code",{staticClass:"hljs language-js"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Table")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("static")]),s._v(" state = {\n    "),a("span",{staticClass:"hljs-attr"},[s._v("activeItem")]),s._v(": "),a("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(", \n  };\n\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("render")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" { activeItem } = "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".state;\n\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" (\n      "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(">")]),s._v("\n        "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("Modal")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("show")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("{!!activeItem}")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("{activeItem}")]),s._v(" />")]),s._v("\n      "),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(">")])]),s._v("\n    );\n  }\n}\n")])]),a("br"),a("p",[s._v("这种方案减少了节点数，但是可能会带来的问题是，每次模态框被展示的时候，触发是会是模态框的更新 (componentDidUpdate) 而不是新增。当然结合 table 中操作的特点，我们可以这样优化：")]),a("br"),a("pre",[a("code",{staticClass:"hljs language-js"},[s._v("{activeItem ? "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("Modal")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("show")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("{true}")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("{activeItem}")]),s._v(" />")])]),s._v(" : "),a("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v("}\n")])]),a("br"),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("这篇讲的是最佳实践，而且是 UX 层面的。但我们还是看到一些同学提出了相反的意见，我总结下就是不同的产品或不同的用户带给我们不同的认识。这时候是不是要死守着『最佳实践』呢？这时候，对于产品而言，我们可以采集用户研究的方法去判断，用数据结论代替感官上的结论。")]),a("p",[s._v("另外，可访问性在这两年时不时会在一些文章中看到，但非常少。这是典型的长尾需求，很多研发在做产品只考虑 90% 的用户，不清楚我们放弃的一部分用户的需求。这是从产品到研发整体的思考的缺失。")])],2)],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},e538:function(s,t,a){var e=a("b622");t.f=e},e8fd:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("AsyncAwait")])]),a("h2",{attrs:{id:"asyncawait-you-yue-zhi-chu"}},[s._v("AsyncAwait 优越之处 "),a("a",{staticClass:"header-anchor",attrs:{href:"#asyncawait-you-yue-zhi-chu"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读的文章是："),a("a",{attrs:{href:"https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9"}},[s._v("6 Reasons Why JavaScript’s Async/Await Blows Promises Away")])])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i4/O1CN01HcU2pR1XbTts6EZS5_!!6000000002942-2-tps-594-288.png",alt:"logo",width:"500"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("我为什么要选这篇文章呢？")]),a("p",[s._v("前端异步问题处理一直是一个老大难的问题，前有 Callback Hell 的绝望，后有 Promise/Deferred 的规范混战，从 Generator 配合 co 所向披靡，到如今 Async/Await 改变世界。为什么异步问题如此难处理，Async/Await 又能在多大程度上解决我们开发和调试过程中遇到的难点呢？希望这篇文章能给我们带来一些启发。")]),a("p",[s._v("当然，本文不是一篇针对前端异步问题综合概要性的文章，更多的是从 Async/Await 的优越性谈起。但这并不妨碍我们从 Async/Await 的特点出发，结合自己在工作、开发过程中的经验教训，认真的思考和总结如何更优雅、更高效的处理异步问题。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("Async/Await 的优点：")])]),a("ul",[a("li",[s._v("语法简洁清晰，节省了很多不必要的匿名函数")]),a("li",[s._v("直接使用 try...catch... 进行异常处理")]),a("li",[s._v("添加条件判断更符合直觉")]),a("li",[s._v("减少不必要的中间变量")]),a("li",[s._v("更清晰明确的错误堆栈")]),a("li",[s._v("调试时可以轻松给每个异步调用加断点")])]),a("p",[a("strong",[s._v("Async/Await 的局限：")])]),a("ul",[a("li",[s._v("降低了我们阅读理解代码的速度，此前看到 "),a("code",[s._v(".then()")]),s._v(" 就知道是异步，现在需要识别 "),a("code",[s._v("async")]),s._v(" 和 "),a("code",[s._v("await")]),s._v(" 关键字")]),a("li",[s._v("目前支持 Async/Await 的 Node.js 版本（Node 7）并非 LTS 版本，但是下一个 LTS 版本很快将会发布")])]),a("p",[s._v("可以看出，文中提到 Async/Await 的优势大部分都是从开发调试效率提升层面来讲的，提到的问题或者说局限也只有不痛不痒的两点。")]),a("br"),a("p",[s._v("让我们来看看参与精读的同学都提出了哪些深度观点：")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本次提出独到观点的同学有："),a("a",{attrs:{href:"http://link.zhihu.com/?target=https%3A//github.com/javie007"}},[s._v("@javie007")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/6c772f9726a914ed4a4b90c88010461c"}},[s._v("@流形")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/078cc0fb15845759ad8295b0f0e50099"}},[s._v("@camsong")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/turbe-xue"}},[s._v("@Turbe Xue")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/5ac53c9c0484e83672e1c1716bdf0ff9"}},[s._v("@淡苍")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/38c3c75795824de1bc5d99cff904a832"}},[s._v("@留影")]),s._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/people/3ec85a04bc9eaa35b1830874cc463a52"}},[s._v("@黄子毅")]),s._v(" 精读由此归纳。")]),a("ul",[a("li",[a("h3",{attrs:{id:"async-await-bing-bu-shi-shi-me-xin-xian-gai-nian"}},[s._v("Async/Await 并不是什么新鲜概念 "),a("a",{staticClass:"header-anchor",attrs:{href:"#async-await-bing-bu-shi-shi-me-xin-xian-gai-nian"}},[s._v("§")])])])]),a("p",[s._v("参与精读的很多同学都提出来，Async/Await 并不是什么新鲜的概念，事实的确如此。")]),a("br"),a("p",[s._v("早在 2012 年微软的 C# 语言发布 5.0 版本时，就正式推出了 Async/Await 的概念，随后在 Python 和 Scala 中也相继出现了 Async/Await 的身影。再之后，才是我们今天讨论的主角，ES 2016 中正式提出了 Async/Await 规范。")]),a("br"),a("p",[s._v("以下是一个在 C# 中使用 Async/Await 的示例代码：")]),a("pre",[a("code",{staticClass:"hljs language-C#"},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" Task<"),a("span",{staticClass:"hljs-built_in"},[s._v("int")]),s._v("> "),a("span",{staticClass:"hljs-title"},[s._v("SumPageSizesAsync")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("IList<Uri> uris")]),s._v(")")]),s._v("\n{\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("int")]),s._v(" total = "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("foreach")]),s._v(" ("),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" uri "),a("span",{staticClass:"hljs-keyword"},[s._v("in")]),s._v(" uris) {\n        statusText.Text = "),a("span",{staticClass:"hljs-built_in"},[s._v("string")]),s._v(".Format("),a("span",{staticClass:"hljs-string"},[s._v('"Found {0} bytes ..."')]),s._v(", total);\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" data = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" WebClient().DownloadDataTaskAsync(uri);\n        total += data.Length;\n    }\n    statusText.Text = "),a("span",{staticClass:"hljs-built_in"},[s._v("string")]),s._v(".Format("),a("span",{staticClass:"hljs-string"},[s._v('"Found {0} bytes total"')]),s._v(", total);\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" total;\n}\n")])]),a("br"),a("p",[s._v("再看看在 JavaScript 中的使用方法：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("createNewDoc")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" response = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" db.post({}); "),a("span",{staticClass:"hljs-comment"},[s._v("// post a new doc")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" db.get(response.id); "),a("span",{staticClass:"hljs-comment"},[s._v("// find by id")]),s._v("\n}\n")])]),a("br"),a("p",[s._v("不难看出两者单纯在异步语法上，并没有太多的差异。这也是为什么 Async/Await 推出后，获得不少赞许和亲切感的原因之一吧。")]),a("br"),a("p",[s._v("其实在前端领域，也有不少类 Async/Await 的实现，其中不得不提到的就是知名网红之一的老赵写的 "),a("a",{attrs:{href:"https://github.com/JeffreyZhao/wind"}},[s._v("wind.js")]),s._v("，站在今天的角度看，windjs 的设计和实现不可谓不超前。")]),a("ul",[a("li",[a("h3",{attrs:{id:"async-await-shi-ru-he-shi-xian-de"}},[s._v("Async/Await 是如何实现的 "),a("a",{staticClass:"header-anchor",attrs:{href:"#async-await-shi-ru-he-shi-xian-de"}},[s._v("§")])])])]),a("p",[s._v("根据 "),a("a",{attrs:{href:"https://tc39.github.io/ecmascript-asyncawait/"}},[s._v("Async/Await 的规范")]),s._v(" 中的描述 —— 一个 Async 函数总是会返回一个 Promise —— 不难看出 Async/Await 和 Promise 存在千丝万缕的联系。这也是为什么不少参与精读的同学都说，Async/Await 不过是一个语法糖。")]),a("br"),a("p",[s._v("单谈规范太枯燥，我们还是看看实际的代码。下面是一个最基础的 Async/Await 例子：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("test")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" img = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" fetch("),a("span",{staticClass:"hljs-string"},[s._v("'tiger.jpg'")]),s._v(");\n}\n")])]),a("br"),a("p",[s._v("使用 Babel 转换后：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-meta"},[s._v("'use strict'")]),s._v(";\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" test = "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" _ref = _asyncToGenerator(regeneratorRuntime.mark("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("_callee")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" img;\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" regeneratorRuntime.wrap("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("_callee$")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("_context")]),s._v(") ")]),s._v("{\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("while")]),s._v(" ("),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(") {\n                "),a("span",{staticClass:"hljs-keyword"},[s._v("switch")]),s._v(" (_context.prev = _context.next) {\n                    "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(":\n                        _context.next = "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(";\n                        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" fetch("),a("span",{staticClass:"hljs-string"},[s._v("'tiger.jpg'")]),s._v(");\n\n                    "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(":\n                        img = _context.sent;\n\n                    "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" "),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(":\n                    "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'end'")]),s._v(":\n                        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" _context.stop();\n                }\n            }\n        }, _callee, "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(");\n    }));\n\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("test")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" _ref.apply("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(", "),a("span",{staticClass:"hljs-built_in"},[s._v("arguments")]),s._v(");\n    };\n}();\n\n"),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("_asyncToGenerator")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("fn")]),s._v(") ")]),s._v("{\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" gen = fn.apply("),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(", "),a("span",{staticClass:"hljs-built_in"},[s._v("arguments")]),s._v(");\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Promise")]),s._v("("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("resolve, reject")]),s._v(") ")]),s._v("{\n            "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("step")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("key, arg")]),s._v(") ")]),s._v("{\n                "),a("span",{staticClass:"hljs-keyword"},[s._v("try")]),s._v(" {\n                    "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" info = gen[key](arg);\n                    "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" value = info.value;\n                } "),a("span",{staticClass:"hljs-keyword"},[s._v("catch")]),s._v(" (error) {\n                    reject(error);\n                    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(";\n                }\n                "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (info.done) {\n                    resolve(value);\n                } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n                    "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Promise")]),s._v(".resolve(value).then("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("value")]),s._v(") ")]),s._v("{\n                        step("),a("span",{staticClass:"hljs-string"},[s._v('"next"')]),s._v(", value);\n                    }, "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("err")]),s._v(") ")]),s._v("{\n                        step("),a("span",{staticClass:"hljs-string"},[s._v('"throw"')]),s._v(", err);\n                    });\n                }\n            }\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" step("),a("span",{staticClass:"hljs-string"},[s._v('"next"')]),s._v(");\n        });\n    };\n}\n")])]),a("br"),a("p",[s._v("不难看出，Async/Await 的实现被转换成了基于 Promise 的调用。值得注意的是，原来只需 3 行代码即可解决的问题，居然被转换成了 52 行代码，这还是基于执行环境中已经存在 regenerator 的前提之一。如果要在兼容性尚不是非常理想的 Web 环境下使用，代码 overhead 的成本不得不纳入考虑。")]),a("ul",[a("li",[a("h3",{attrs:{id:"async-await-zhen-de-shi-geng-you-xiu-de-ti-dai-fang-an-ma"}},[s._v("Async/Await 真的是更优秀的替代方案吗 "),a("a",{staticClass:"header-anchor",attrs:{href:"#async-await-zhen-de-shi-geng-you-xiu-de-ti-dai-fang-an-ma"}},[s._v("§")])])])]),a("p",[s._v("不知道是个人观察偏差，还是大家普遍都有这样的看法。在国内前端圈子里，并没有对 Async/Await 的出现表现出多么大的兴趣，几种常见的观点是：「还不是基于 Promise 的语法糖，没什么意思」、「现在使用 co 已经能完美解决异步问题，不需要再引入什么新的概念」、「浏览器兼容性这么差，用 Babel 编译又需要引入不少依赖，使用成本太高」等等。")]),a("br"),a("p",[s._v("在本次精读中，也有不少同学指出了使用 Async/Await 的局限性。")]),a("br"),a("p",[s._v("比如，使用 Async/Await 并不能很好的支持异步并发。考虑下面这种情况，一个模块需要发送 3 个请求并在获得结果后才能进行渲染，3 个请求之间没有依赖关系。如果使用 Async/Await，写法如下：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("mount")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" result1 = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" fetch("),a("span",{staticClass:"hljs-string"},[s._v("'a.json'")]),s._v(");\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" result2 = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" fetch("),a("span",{staticClass:"hljs-string"},[s._v("'b.json'")]),s._v(");\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" result3 = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" fetch("),a("span",{staticClass:"hljs-string"},[s._v("'c.json'")]),s._v(");\n\n  render(result1, result2, result3);\n}\n")])]),a("br"),a("p",[s._v("这样的写法在异步上确实简洁不少，但是 3 个异步请求是顺序执行的，并没有充分利用到异步的优势。要想实现真正的异步，还是需要依赖 "),a("code",[s._v("Promise.all")]),s._v(" 封装一层：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[a("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v(" "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("mount")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" result = "),a("span",{staticClass:"hljs-keyword"},[s._v("await")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Promise")]),s._v(".all([\n    fetch("),a("span",{staticClass:"hljs-string"},[s._v("'a.json'")]),s._v("),\n    fetch("),a("span",{staticClass:"hljs-string"},[s._v("'b.json'")]),s._v("),\n    fetch("),a("span",{staticClass:"hljs-string"},[s._v("'c.json'")]),s._v(")\n  ]);\n\n  render(...result);\n}\n")])]),a("br"),a("p",[s._v("此外，正如在上文中提到的，async 函数默认会返回一个 Promise，这也意味着 Promise 中存在的问题 async 函数也会遇到，那就是 —— 默认会静默的吞掉异常。")]),a("br"),a("p",[s._v("所以，虽然 Async/Await 能够使用 try...catch... 这种符合同步习惯的方式进行异常捕获，你依然不得不手动给每个 await 调用添加 try...catch... 语句，否则，async 函数返回的只是一个 reject 掉的 Promise 而已。")]),a("ul",[a("li",[a("h3",{attrs:{id:"yi-bu-huan-you-na-xie-wen-ti-xu-yao-jie-jue"}},[s._v("异步还有哪些问题需要解决 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-bu-huan-you-na-xie-wen-ti-xu-yao-jie-jue"}},[s._v("§")])])])]),a("p",[s._v("虽然处理异步问题的技术一直在进步，但是在实际工程实践中，我们对异步操作的需求也在不断扩展加深，这也是为什么各种 flow control 的库一直兴盛不衰的原因之一。")]),a("br"),a("p",[s._v("在本次精读中，大家肯定了 Async/Await 在处理异步问题的优越性，但也提到了其在异步问题处理上的一些不足：")]),a("ul",[a("li",[s._v("缺少复杂的控制流程，如 always、progress、pause、resume 等")]),a("li",[s._v("缺少中断的方法，无法 abort")])]),a("p",[s._v("当然，站在 EMCA 规范的角度来看，有些需求可能比较少见，但是如果纳入规范中，也可以减少前端程序员在挑选异步流程控制库时的纠结了。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("Async/Await 的确是更优越的异步处理方案，但我们相信这一定不是终极处理方案。随着前端工程化的深入，一定有更多、更复杂、更精细的异步问题出现，同时也会有迎合这些问题的解决方案出现，比如精读中很多同学提到的 RxJS 和 js-csp。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},f27d:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("极客公园 2019")])]),a("h2",{attrs:{id:"ji-ke-gong-yuan-2019"}},[s._v("极客公园 2019 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ji-ke-gong-yuan-2019"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("极客公园 2019 充满了科技前沿的思考，而且给 “互联网寒冬” 带来了未来的期望中，可以看到前端将发挥越来越重要的作用。")]),a("p",[s._v("这篇文章将以前端的视角解读这次极客公园。")]),a("p",[s._v("本次极客公园的主题是 WHY NOT：")]),a("blockquote",[a("p",[s._v("一些人看到世界现在的样子， 会选择「就这样吧」 而另一些人看到世界可能的样子， 会思考「为什么不能更好一些？」")])]),a("p",[s._v("多问问 WHY NOT，少说多做，不妥协，去改变，将会帮你、创业者、甚至中国渡过这次互联网寒冬。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("极客公园持续三天，每天有十几场来自互联网一线企业的嘉宾演讲。本文按照顺序介绍笔者在现场得到的感悟。")]),a("br"),a("h2",{attrs:{id:"day1-kan-kan-shi-jie-de-gai-bian"}},[s._v("DAY1 看看世界的改变 "),a("a",{staticClass:"header-anchor",attrs:{href:"#day1-kan-kan-shi-jie-de-gai-bian"}},[s._v("§")])]),a("br"),a("p",[s._v("第一天围绕着 2018 年互联网与社会的改变，介绍了许多优秀的项目。通过几个公司的案例，让我们了解现在互联网的发展阶段。")]),a("p",[s._v("最大的感触是：最近几年热炒的概念与口号，真的有不少踏踏实实的人做到了。")]),a("br"),a("h3",{attrs:{id:"why-not"}},[s._v("WHY NOT？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#why-not"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("Louis Rossetto - WIRED《连线》杂志创始人")])]),a("p",[s._v("Louis Rossetto 介绍了它创办《连线》杂志的回忆。")]),a("p",[s._v("《连线》杂志的创办过程就是一个 WHY NOT 的过程：在最早创业时，没有场地，没有员工，也没有钱，仅凭借一腔热情从零打造了团队，并且利用热情与理想拉到了风投。")]),a("p",[s._v("也许这个故事在当下已经不再适用，但 Louis Rossetto 的创业历程确实体现了 WHY NOT 精神，想让世界变得更好，你会感染周围的人，最后成就事业。")]),a("h3",{attrs:{id:"wei-lai-cheng-shi-shu-ju-de-xin-yang-yu-ai-de-she-hui-ze-ren"}},[s._v("未来城市：数据的信仰与 AI 的社会责任 "),a("a",{staticClass:"header-anchor",attrs:{href:"#wei-lai-cheng-shi-shu-ju-de-xin-yang-yu-ai-de-she-hui-ze-ren"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("郑 宇 京东副总裁 - 京东数字科技首席数据科学家")])]),a("p",[s._v("郑宇 介绍了京东数字科技在智能城市做的努力。")]),a("p",[s._v("京东抓住了数据、算法的机遇，将原有的京东金融、京东城市等组合成为 京东数字科技 的子品牌，这次重点介绍了京东城市操作系统。")]),a("p",[s._v("随着云技术的普及，云计算已经成为基础设施，京东智能城市做的是基于任意云的“城市操作系统”，并可承载许多业务“软件”：")]),a("p",[s._v("任意云服务 > 城市操作系统 > 城市服务")]),a("p",[s._v("城市操作系统提供了一系列数据处理算法与人工智能技术，创业者或者合作企业可以利用这些技术实现城市业务，比如预测城市交通、空气指数、人流量等。人工智能技术的结合，让这些业务更为智能，不仅仅是数据检测与统计，更能预测未来变化，以及更精准的划区预测。")]),a("p",[s._v("同时 郑宇 还对人才提出了新的期待，他们需要同时懂算法、人工智能与城市规划的人才，而现有的教育几乎不会产生这种跨学科，跨专业的人才。最大的感触就是，随着互联网科技与现实的紧密结合，对复合型人才的要求会越来越高，这对人才教育，与我们自身学习都带来了巨大挑战。")]),a("br"),a("h3",{attrs:{id:"cong-wo-er-ma-kan-ling-shou-de-chuang-xin-yu-jin-hua"}},[s._v("从沃尔玛看零售的创新与进化 "),a("a",{staticClass:"header-anchor",attrs:{href:"#cong-wo-er-ma-kan-ling-shou-de-chuang-xin-yu-jin-hua"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("Ben Hassing 沃尔玛中国 - 电子商务及科技高级副总裁")])]),a("p",[s._v("沃尔玛包括其子品牌 山姆会员店 都在寻求与中外企业的合作，以建立互惠互利的生态，目的就是帮助自己实现互联网转型，或者说电商转型。")]),a("p",[s._v("基本上可以看作 一个传统行业大佬如何机智面对互联网转型挑战，但就从支付合作风波事件来看，国外巨头可能也在奉行借力打力的原则，这有点像中国巨头在印度、东南亚市场搞的那一套，扶持一个，打一群。")]),a("br"),a("h3",{attrs:{id:"hou-liu-liang-shi-dai-fen-bu-shi-ai-yu-ling-shou-xin-zeng-chang"}},[s._v("后流量时代：分布式 AI 与零售新增长 "),a("a",{staticClass:"header-anchor",attrs:{href:"#hou-liu-liang-shi-dai-fen-bu-shi-ai-yu-ling-shou-xin-zeng-chang"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("陈 磊 - 拼多多 CTO")])]),a("p",[s._v("核心概念是分布式云计算。现在云计算基本是集中化云计算，你的数据存在云端，但不属于你，你不仅无权查看云服务商采集了哪些数据，也无权查看他们存储了哪些数据，更无权查看他们如何将这些数据结合到算法，并怎样服务于你。")]),a("p",[s._v("这确实戳到了当代人的一个痛点。无论你是用百度、头条、还是其他软件刷信息流的时候，如果出来一条你很感兴趣，但只想看一次的信息，你也许不敢点开，因为你猜点开后下次会给你推荐更多。这就体现了用户对于无权修改云服务商算法时的自卑。")]),a("p",[s._v("陈磊 希望未来云计算可以是分布式的，算法开源出来，并且各大服务商允许用户自行上传自己的算法。这可以理解为用户有权自定义对作用于自己的数据的处理方式，并且根据自己的意愿随时调整算法，比如什么时候点击意图算是 “我感兴趣”，什么时候 “只看一下而已，不需要给我打标签”。")]),a("br"),a("h3",{attrs:{id:"shu-zi-jing-ji-xia-ban-chang-wo-men-xu-yao-shi-me-yang-de-zu-zhi"}},[s._v("数字经济下半场，我们需要什么样的「组织」？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#shu-zi-jing-ji-xia-ban-chang-wo-men-xu-yao-shi-me-yang-de-zu-zhi"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("王慧文 - 美团联合创始人 & 高级副总裁")])]),a("p",[s._v("王慧文是个段子手，但同时思想像刀一样锐利，考虑问题像程序员一样有逻辑。")]),a("p",[s._v("这次印象最深的是 “愚昧之巅” 与 “绝望之谷” 的概念。")]),a("p",[s._v("人的成长可能有一段转折，也就是在达到愚昧巅峰时，需要跌入绝望之谷，才能爬向真正的智慧之巅。")]),a("p",[s._v("但人的成长往往卡在 “愚昧之巅”，自以为达到了智慧之巅，而如果没有人推他一把，可能十几年都走不到 “绝望之谷”。")]),a("p",[s._v("王慧文 提到了公司领导的担当之一，就是将处在愚昧之巅的下属推下去。但由于大家都不希望被泼冷水，领导可能担心伤了和气而选择不作为，长期来看对下属的成长是没有用的，但领导也没有义务推你，所以这需要有担当的领导去做。")]),a("p",[s._v("同时在推别人时，还要当心因你处在愚昧之巅，别人处在智慧之巅，而闹出笑话来。")]),a("br"),a("h3",{attrs:{id:"bi-ran"}},[s._v("必然 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-ran"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("张 鹏 极客公园 - 创始人 & 总裁")])]),a("p",[s._v("创新来自于灵感，而这个时代机会又只留给创新者，那么人为成功仅靠运气肯定是消极的。")]),a("p",[s._v("为了让我们看到在随机的创新中，潜藏的必然，极客公园在第一天下午的论坛展示了那些 “不靠运气” 的创业者的经历，希望我们可以学到他们洞察必然的经验。")]),a("br"),a("h3",{attrs:{id:"di-yi-zhang-wei-he-ni-jue-de-ji-hui-zai-jian-shao-ta-men-que-zhua-de-zhu-shi-dai"}},[s._v("第一章：为何你觉得机会在减少，他们却抓得住时代？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#di-yi-zhang-wei-he-ni-jue-de-ji-hui-zai-jian-shao-ta-men-que-zhua-de-zhu-shi-dai"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("刘梦媛 - 衣二三创始人 & CEO")])]),a("p",[s._v("衣二三的商业模式非常有趣，每月缴纳固定金额，就可以免费试穿任何衣服，甚至可以一天换一件。如今服装行业快消大行其道，就是因为快消收益高。她抓住机会，将快消转成慢消，提高消费者体验的同时，提升商家利润。")]),a("p",[s._v("衣二三是会员制，对会员：")]),a("ul",[a("li",[s._v("每月缴纳几百元就可以享受无数衣服的使用权，如果发现喜欢的衣服，也可以以低价折扣买回来。")]),a("li",[s._v("每件衣服都是千元以上的高端服饰，但作为普通白领，也可以一天换一件穿。")]),a("li",[s._v("不合适可以自然退回，生活就是试衣间。")])]),a("p",[s._v("对品牌商：")]),a("ul",[a("li",[s._v("高端衣服收取不小的租金。")]),a("li",[s._v("大概 4 个月左右衣服就可卖出。")]),a("li",[s._v("通过试穿频率预测爆款。")]),a("li",[s._v("总收入大幅提升。")])]),a("p",[s._v("而衣二三也可以通过自动化流水线自动清洗衣物，等于做了一个共享衣橱。")]),a("p",[s._v("她成功的 "),a("strong",[s._v("必然")]),s._v(" 在于抓住了用户和品牌商的痛点。用户的痛点是：“穷”，但永远想低价穿高价衣服，还想天天换。品牌商的痛点是：不卖出去无法预测爆款，用户购买价格高导致顾虑心强，且难以体验真正穿在日常生活中的感受，只能降价降品做快消。")]),a("p",[s._v("她通过将衣服的 “所有权” 转换为 “使用权” 巧妙的解决了这个问题。")]),a("br"),a("blockquote",[a("p",[s._v("黄 峥 - 拼多多创始人 & CEO")])]),a("br"),a("p",[s._v("笔者不止一次在思考，拼多多到底是如何快速从青铜变成王者的，这次大会给了我一点启发。")]),a("p",[s._v("首先黄峥的团队已经创建十年了，期间不断试水许多创业项目，拼多多只是我们看到的最后一个，所以并不能说他的成功来的突然。")]),a("p",[s._v("其次黄峥的普通家庭背景，让他对基层人民拥有更强的同理心，他知道消费降级与消费升级并不是一个矛盾的事情，事实上这个矛盾经常同时发生在一个人身上：比如你在花几百万买个学区房的同时，在吃完火锅会选择团购省几十块钱的零头。")]),a("p",[s._v("所以他抓住了人们在日常消费品上追求 “省” 的刚需，将团购提升到战略层次。")]),a("p",[s._v("另外团购也不是简单的砸钱补贴，而是通过量与供应商直接谈价，将品牌商抬高的价格挤压掉。")]),a("p",[s._v("作为一个前端，移动互联网对我来说，不过就是 PC 网页变成了移动页面，如果不看 APP，移动的 HTML5 本质上还是 PC 那一套技术。"),a("strong",[s._v("移动互联网对我来说和 PC 在技术上没有区别")]),s._v("。")]),a("p",[s._v("但 黄峥 看到的移动互联网则不同，他看到的是三四线城市，原本没有网线的地方，可以通过 4G 网络联网，移动互联网拉平了城市通信，电商又拉平了城市物流，这是一个新的时代，旧的事情也许可以重新做一遍。")]),a("p",[s._v("在旧时代，品牌商与工厂建立关系，通过广告将工厂制作的产品投放给消费者。而移动互联网时代消费者已经有机会通过移动网络直接触达工厂，通过 “团购” 建立起的熟人信任链的坚固程度可能会超过对 “品牌” 的信任程度，那么就可以在部分领域将品牌商挤出市场，让消费者与工厂直连，将品牌商榨取的利润重新返还给消费者，从而让我们看到不可思议的团购价。")]),a("p",[s._v("虽然补贴、假货可能是确实存在的情况，但 黄峥 能从移动互联网看到的这些 "),a("strong",[s._v("必然")]),s._v(" 让我非常敬佩。")]),a("br"),a("h3",{attrs:{id:"di-er-zhang-dang-wo-men-zai-tan-chan-ye-hu-lian-wang-shi-wo-men-zai-tan-shi-me"}},[s._v("第二章：当我们在谈产业互联网时，我们在谈什么？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#di-er-zhang-dang-wo-men-zai-tan-chan-ye-hu-lian-wang-shi-wo-men-zai-tan-shi-me"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("翟学魂 - G7 创始人 & CEO")])]),a("p",[s._v("G7 是货车智能兼容系统，目前它的体量可能足以整合中国的货车智能体系。")]),a("p",[s._v("货车司机是比较危险的职业，首先货车在高速上一旦发生事故基本上都是很严重的，其次货车运途长，人难免会困或者分神，加上高速公路环境，更容易产生事故。另外高速公路上长时间开车非常单调，有些货车司机会忍不住一边看电影一边开车，这后果不用说了，但让一个人长期精神紧绷的盯着高速路也确实挺痛苦的。")]),a("p",[s._v("G7 最新的进展，是通过在货车上安装智能硬件，解决一系列自动化问题。最重要的是通过人脸识别自动监控司机是否有危险行为，这样就可以实时监控到可能发生的异常，转而让人工监督员打电话去提醒。在最近的几年内，接入这个平台的货车没有发生一次车毁人亡的事件。")]),a("p",[s._v("G7 抓住的 "),a("strong",[s._v("必然")]),s._v(" 就是将互联网结合到货车这个垂直的产业，不仅提升了效率，还挽救了许多货车司机的生命。")]),a("h3",{attrs:{id:"di-san-zhang-da-jia-du-zai-shuo-de-shu-ju-dao-di-you-shi-me-jie-zhi"}},[s._v("第三章：大家都在说的数据，到底有什么价值？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#di-san-zhang-da-jia-du-zai-shuo-de-shu-ju-dao-di-you-shi-me-jie-zhi"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("张 鹏 - 极客公园创始人 & 总裁")])]),a("p",[s._v("简单来说，数据就是能源，阿里也在说数据是 “新能源”。")]),a("p",[s._v("张鹏打了一个很形象的比方。")]),a("p",[s._v("在石油开采的初期，人类不知道如何有效利用石油，只能作为燃料销售。但现在我们的基本化工原料就是石油，石油转化为肥料，肥料产生玉米，玉米转化为我们生活中 90% 以上的糖制品等等，这种产业链将石油的价值指数放大。")]),a("p",[s._v("数据也是一样，数据在初期就是流量，甚至可以打包出售（比如卖身份证信息等黑产）。但随着我们对数据挖掘能力的提高，是不是也可以像石油一样，将数据结合算法与 AI，转化为决策依据，转化为自动价值，转化为健康预测等等呢？数据的挖掘方式还有许多等待我们去发现。")]),a("p",[s._v("“大数据时代” 反而是数据挖掘的初级阶段，因为我们的数据处理方式有限，就像挤海绵一样，一大块海绵只能挤出几滴水。在未来的高级数据挖掘时代，可能是 “小数据时代”，通过少量数据就能提取许多有效信息。")]),a("br"),a("h3",{attrs:{id:"di-si-zhang-ke-ji-cong-ye-zhe-men-jiang-mian-lin-zen-yang-de-kong-qian-tiao-zhan"}},[s._v("第四章：科技从业者们将面临怎样的空前挑战？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#di-si-zhang-ke-ji-cong-ye-zhe-men-jiang-mian-lin-zen-yang-de-kong-qian-tiao-zhan"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("周 航 - 顺为资本投资合伙人")])]),a("p",[s._v("周航 基本上是站在投资者的角度看待 2019 的互联网寒冬。笔者最近也很困惑，为什么互联网会突然进入寒冬，周航 的话回答了我的困惑。")]),a("p",[s._v("ofo 可以说是互联网寒冬的导火索。三级火箭是互联网企业利用资本运作的基本模式，小米就是很经典的例子。互联网公司通过免费产品吸引用户，这是第一级火箭，之后通过互动产品留住用户，这是第二级火箭，最后通过将用户分发到游戏、商品等内容，榨取利润。")]),a("p",[s._v("所以之前很多互联网公司都在不计后果的烧钱，给投资人讲的就是自己的三级火箭。因为只要吸引了流量，未来就可以通过第三级火拿到回报，那么投资人投入越多，未来的收益也就越大，所以投资人会疯狂投资，公司也会疯狂融资，抢占市场，而且希望能垄断用户。")]),a("p",[s._v("但微信的活跃用户已达到 10 亿意味着中国有能力使用互联网的人群都接入了互联网，也就意味着互联网流量红利消失了，直接导致了第三级火箭赚取的收益已经抵不上拉新流量的成本了，那这种利用资本滚雪球的商业模式也就玩不转了，因此这个商业模式就宣告破产，同时投资人手里的钱也损失了不少，创业者暂时找不到其他短期高回报的项目，两者夹击导致了互联网寒冬的到来。")]),a("p",[s._v("知道了寒冬的原因，解决方案就不难想了。")]),a("p",[s._v("最近比较热的产业互联网就是一条路，摒弃资本的炒作，回归到价值上，将互联网技术应用到各个垂直产业，带来实实在在的效率提升，是走出互联网寒冬的基本方法。")]),a("p",[s._v("最后一个观点就是顺势而为。所有成功的创业公司都是在国家发展路线中踩对了点，通过观察环境，让自身跟着大趋势走，才能得到成功。这个点在后面的 小鱼在家、大疆无人机里都有提到。")]),a("br"),a("h2",{attrs:{id:"day2-liao-liao-chuang-xin-de-ben-zhi"}},[s._v("DAY2 聊聊创新的本质 "),a("a",{staticClass:"header-anchor",attrs:{href:"#day2-liao-liao-chuang-xin-de-ben-zhi"}},[s._v("§")])]),a("br"),a("p",[s._v("这个时代比的是创新速度，只有快速创新才可能取得成功，那么第二天就围绕着如何创新，介绍了大量理论知识与实践经验。")]),a("br"),a("h3",{attrs:{id:"chuang-xin-xiang-dui-lun"}},[s._v("创新相对论 "),a("a",{staticClass:"header-anchor",attrs:{href:"#chuang-xin-xiang-dui-lun"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("王小川 - 搜狗 CEO")])]),a("p",[s._v("主要从 “感性” 与 “理性” 理解创新。主要讲的是，现在互联网不要过于注重理性的功能堆积，而要用感性去优化用户体验。")]),a("p",[s._v("感性的是主观的，而理性是客观的，但人们需要的感动与创新，恰恰只有主观能做到。")]),a("p",[s._v("因为看到所以相信，说明你是客观的人；因为相信所以看到，说明你是主观的人，主观的人更可能改变世界。")]),a("p",[s._v("另外搜狗去年发布的 AI 合成主播是比较惊艳的，只需要录入话语，就可以自动生成主播视频，这可以进一步解放人类，让人类时间投入更有价值的创造性活动中去，这个在后面的嘉宾中也有提到。")]),a("br"),a("h3",{attrs:{id:"ai-ke-ji-chuang-xin-de-ben-zhi-shi-shi-me"}},[s._v("AI 科技创新的本质是什么？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#ai-ke-ji-chuang-xin-de-ben-zhi-shi-shi-me"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("李志飞 - 出门问问创始人 & CEO")])]),a("p",[s._v("李志飞 从三个层次说明了创新与产品的关系：")]),a("ol",[a("li",[s._v("产品需求 -> 创新")]),a("li",[s._v("技术创新 -> 新产品")]),a("li",[s._v("多产品抽象需求 -> 平台级创新")])]),a("p",[s._v("第一点是最自然的，也是中小企业最适合做的，因为业务驱动创新是最务实的做法。")]),a("p",[s._v("第二点最难做，因为技术驱动的创新需要前期投入很多，比如最早做无人车的公司，投入了几十亿美金，走了许多弯路，最后还不一定能拿到结果，转化为商品。")]),a("p",[s._v("第三点适合大公司，由多条业务线产品需求做整合与抽象，整理出了平台级的创新。比如上面说的 “京东城市操作系统”，就是在多条城市业务线需求上层做的抽象创新，可以赋能更多业务。")]),a("p",[s._v("另外劝解了创业公司不要拿来主义，因为拿来主义可以低成本弯道超车，久而久之，就没有人愿意做创新的领头羊。")]),a("h3",{attrs:{id:"ji-qi-ren-cheng-wei-ren-lei-huo-ban-zhi-qian-de-bi-xiu-ke"}},[s._v("机器人成为人类伙伴之前的「必修课」 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ji-qi-ren-cheng-wei-ren-lei-huo-ban-zhi-qian-de-bi-xiu-ke"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("熊友军 - 优必选 CTO")])]),a("p",[s._v("最大感触就是说到了 人形机器人 是未来最有价值的机器人形态。")]),a("p",[s._v("人形机器人首先对人类友好，其次可以复用现有社会为人类建造的各种设施，比如楼梯，门 等基础设施。现代社会的环境接口都是以人为交互对象设计的，所以人形机器人可以天然利用这些环境接口。")]),a("p",[s._v("现在优必选的人形机器人已经可以画画、端茶送水了，其核心控制系统不仅要保证功能的实现，还要保证动作的 “柔韧性”，防止误伤了人类。")]),a("p",[s._v("一个明显的突破是，当机器人手臂在做动作时，如果人的手碰上去，机器人的手会以你按压的角度进行动作倾斜。如果继续保持原有动作，可能与人的触碰产生直接碰撞，导致伤到人，但优必选的柔韧性设计让机器人运动路径考虑到了外界触碰，并作出反馈，这个在我看来是很大的进步。")]),a("br"),a("h3",{attrs:{id:"ru-he-rang-wu-ren-jia-shi-bian-cheng-lao-si-ji"}},[s._v("如何让无人驾驶变成「老司机」？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#ru-he-rang-wu-ren-jia-shi-bian-cheng-lao-si-ji"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("王京傲 百度执行总监 - Apollo 平台研发总经理")])]),a("p",[s._v("百度的 Apollo 已经踏踏实实做了两年，从最初我们的怀疑，到现在稳定版本迭代，量产，百度如果继续保持这个节奏，确实可能在无人驾驶领域合作生态中独树一帜。")]),a("p",[s._v("Apollo 1.0 实现封闭场地循迹自动驾驶，这个版本比较 low，一是封闭场地，一是根据路线来跑。")]),a("p",[s._v("Apollo 1.5 安装了雷达，可以自动躲避障碍物。")]),a("p",[s._v("Apollo 2.0 可以在简单路况下自动驾驶，可以识别信号灯。")]),a("p",[s._v("Apollo 2.5 实现限定区域高速自动驾驶。")]),a("p",[s._v("Apollo 3.0 主要是量产了，以班车作为业务场景去突破，班车是很好的固定路线试验田。")]),a("p",[s._v("Apollo 3.5 支持城市路况自动驾驶，支持了复杂路况，而且是拥有量产能力的。")]),a("p",[s._v("可以看到，百度的无人车确实在摸着石头过河，一步一个脚印，从跑 Demo 到灰度，再批量发布。相信未来 Apollo 还会发布 4.0 5.0 等重量级版本，百度无人车开源是一个杀手锏，只要功能做的好，帮助到未来智能造车的中小企业，将是一个巨大的市场。")]),a("p",[s._v("我们平时都聚焦在大车厂的智能车计划，但就像阿里巴巴的理念，帮助中小企业一样，中小企业才是市场的中坚力量，未来无人驾驶行业一定会涌入大量中小企业玩家，谁服务好他们，谁就是下一个平台。")]),a("br"),a("h3",{attrs:{id:"automl-rang-ji-qi-xue-xi-ke-yi-wei-ren-ren-suo-yong"}},[s._v("AutoML：让机器学习可以为人人所用 "),a("a",{staticClass:"header-anchor",attrs:{href:"#automl-rang-ji-qi-xue-xi-ke-yi-wei-ren-ren-suo-yong"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("卢一峰 - Google 资深工程师")])]),a("p",[s._v("AutoML 可以自动完成 AI 算法和模型训练。")]),a("p",[s._v("AutoML 分为算法机器人与执行机器人，算法机器人负责写出算法，然后交给执行机器人执行，执行结果反馈到算法机器人那用来改进算法，由此完成一个训练闭环，通过不断训练，得到一个相对较好的算法。")]),a("p",[s._v("卢一峰 提到的关键点是，未来数据不会缺，算力不会算，缺的是算法专家，所以现在尝试通过 AutoML 解决算法专家的瓶颈，并且获得了比人类编写的算法更高效的算法。")]),a("p",[s._v("未来让每个人都理解算法原理是不可能的，至少几十年内不太可能，但十几年内，算法就可能成为整个社会的基础设施，其实我们只要学会利用算法解决问题就行了。")]),a("p",[s._v("AutoML 已经帮助各个行业自动识别图像、文字和意图，做到了将 AI 赋能给普通大众，降低了 AI 的使用门槛。")]),a("p",[s._v("另外也引发了我的思考，为什么门槛最高的算法专家是第一个被证明可以取代的呢？或者说顶尖算法专家不会被取代，但至少入门或中级的算法工程师将极有可能不再需要。")]),a("p",[s._v("也许是因为深度学习比较模式化，或者说过于理性化，不需要感性的人或者业务参与，这样就导致了无论算法还是训练都可以被完整抽象出来。而普通的技术工种其实是在和业务，在和人打交道，人是最大的变量，能被完全抽象的领域其实很少。")]),a("br"),a("h3",{attrs:{id:"zhong-guo-shi-jing-ji-mo-fang-zhong-qian-cang-de-chuang-xin-ji-hui"}},[s._v("中国式经济魔方中潜藏的创新机会 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zhong-guo-shi-jing-ji-mo-fang-zhong-qian-cang-de-chuang-xin-ji-hui"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("汪 华 创新工场 - 联合创始人 & 管理合伙人")])]),a("p",[s._v("中国经济之所以比喻为魔方，是为了说明中国市场有多个维度，中国是多元经济，有个多个层次的机会。")]),a("p",[s._v("这个话题非常大，更详细内容推荐查看 "),a("a",{attrs:{href:"http://www.sohu.com/a/290141861_413980"}},[s._v("文字记录")]),s._v("。")]),a("p",[s._v("主要分为四个维度说，分别是 人口地域、前端后端、发展阶段、行业分化，这四个维度在中国是不均匀的。")]),a("p",[s._v("在西方国家，发展进程是线性的，比如从个人纺织发展到品牌经济，再发展到去品牌化。而中国等发展中国家由于领土过大，且受到外来经济、文化影响，各个层次发展都不均匀，这也带来了中国式的潜力，比如为什么有了淘宝和京东，还可以创造出 “拼多多”。")]),a("p",[s._v("前端后端的差距：移动互联网是中国互联网的前端，移动支付普及率中国已经远超其他发达国家，但在物流、自动化的后端领域，中国还是远远落后于发达国家。所以上面说的 G7 等产业互联网就有机会加入改造中国的大后端。")]),a("p",[s._v("行业分化的差距：交通、教育、文化娱乐、医疗这些行业在加速发展，而食品，服装等行业整体来看处于下降阶段，因此如果你进入了一个上升的行业，将有更广阔的发展空间。")]),a("p",[s._v("发展阶段的差距：国内外、发展中国家和发达国家的发展阶段差距很大，同为发展中国家的中国、东南亚也有很大区别，所以将眼光投入海外市场也是新的机会。")]),a("p",[s._v("所以整体看来下，中国可能是目前地球上最有创新、创业机会的国家，我们都是幸运的。")]),a("br"),a("h3",{attrs:{id:"ren-lei-liang-hua-zi-wo-hou-ke-chuan-dai-de-xia-yi-bu-zai-na-li"}},[s._v("人类量化自我后，可穿戴的下一步在哪里? "),a("a",{staticClass:"header-anchor",attrs:{href:"#ren-lei-liang-hua-zi-wo-hou-ke-chuan-dai-de-xia-yi-bu-zai-na-li"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("黄 汪 华米科技 - 创始人、董事长 & CEO")])]),a("p",[s._v("华米是一家硬件制造公司，给众多智能硬件制造企业做设备，其中小米品牌生产线的小米手环出货总量达到 5000 万台。")]),a("p",[s._v("但这家公司没有止步于此，他看到了智能硬件收集数据背后的巨大值，通过数据采集整理出了 《运动白皮书》、《睡眠白皮书》等大数据报告，得出的数据可以用于医疗健康等有价值的领域。")]),a("p",[s._v("一个核心观点是：从数据量化世界，但量化自我。华米等企业都逐渐将数据使用的重点，从城市数字化转化到我们 “人” 的身上，无论是现在取得的各种数据分析报告，还是未来的潜力都很巨大，果然 “人” 才是最重要的服务对象。")]),a("p",[s._v("后面讲到的 Magic Leap 公司所做的事情，也同样体现了将科技力量运用于人的例子。")]),a("br"),a("h3",{attrs:{id:"chuan-tong-qi-ye-zai-xiao-wang-chuan-tong-xing-ye-zai-jue-qi"}},[s._v("传统企业在消亡，传统行业在崛起 "),a("a",{staticClass:"header-anchor",attrs:{href:"#chuan-tong-qi-ye-zai-xiao-wang-chuan-tong-xing-ye-zai-jue-qi"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("徐 琨 - Testin 云测总裁")])]),a("p",[s._v("Testin 是一家云测试公司，拥有很多机房和几乎所有移动设备机型，通过自动跑任务的方式完成测试，有许多政府企业客户。")]),a("p",[s._v("不过徐琨分享的主题，则与他公司天然线上线下结合的属性有关。")]),a("p",[s._v("他提出的重要观点是：互联网+ 几乎等于烧钱，现在已经不适用了，而真正有机会的是传统企业通过 传统行业 x 互联网 取得更大的价值。")]),a("p",[s._v("互联网企业在资本与流量红利的推动下快速发展，但现在已到了尾声，传统企业的路还要重新走一遍，比如经验、管理理念。但在互联网企业走进线下时，我们发现传统企业走进互联网的速度更快。")]),a("p",[s._v("他举了一个 传统行业 x 互联网 的例子：现在各电商巨头都在布局新零售，在线下开店，似乎规模很大。但其实传统线下零售巨头也在更快速的接入互联网，现在一个简单的线下超市基本已经用上和新零售体验店一样的技术，更不要说上文提到的沃尔玛等巨头，他们都在积极与互联网公司合作，快速实现自我转型。")]),a("p",[s._v("作为一个最大电商公司的员工，我有感受到来自传统企业快速转型带来的压力。传统企业并不是双手举过头顶，缴械投降地等待接受互联网公司的改造，而是已经从内部驱动开始互联网化，这就形成了 线下 -> 线上 vs 线上 -> 线下 的两股强大力量，现在正处在转型过渡阶段，偶尔有摩擦，但合作与相互赋能是主旋律，但当转型进入尾声，传统企业是否愿意与互联网公司一起瓜分线下市场的蛋糕？除非这种合作带来了共赢，否则如果是一个零和博弈，最后一定会打起来。")]),a("p",[s._v("不过笔者还是相信，线上线下整合后，可以进一步促进消费，扩大市场，产生的额外利润应该足以稳固传统企业与互联网企业的合作。")]),a("br"),a("h3",{attrs:{id:"keep-evolving"}},[s._v("Keep Evolving "),a("a",{staticClass:"header-anchor",attrs:{href:"#keep-evolving"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("王 宁 Keep - 创始人 & CEO")])]),a("p",[s._v("Keep 的创始人王宁口才非常好，现在 Keep 已经从我脑海中一个健身视频公司，变身为一家推动全新生活方式的富有活力的公司。")]),a("p",[s._v("Keep 应该是从做健身视频开始的，健身视频包含了一些互动特性，提高了很多人健身频率，但 Keep 远不止于此。")]),a("p",[s._v("王宁 一直在强调健身数据、社交互动带来的改变。大家通过健身的方式可以相互认识，相互督促，相互 PK，而 Keep 也在致力让其 App 走出手机，收集用户更多的数据，因此推出了三个生活场景：")]),a("p",[s._v("面向家庭的 Keepkit，面向城市的 Keepland，面向生活的 Keepup。")]),a("ul",[a("li",[s._v("面向家庭的 Keepkit：Keep 终于制造了诸如跑步机、手环、体脂智能称秤等硬件设备，拓展业务边界的同时，带来了更好健身体验，也利于收集更多用户数据。")]),a("li",[s._v("面向城市的 Keepland：有点像公共 KTV 空间之类的理念，通过包下一大块布置了大量 Keepkit 设备的场地，用户就像去健身房一样按时计费，而不需要买下设备或寻找空间，同时这种线下多人强互动的场景让 Keep 走出了 App，走向了生活。")]),a("li",[s._v("面向生活的 Keepup：没有详细展开，大致是一种科技运动设备。")])]),a("p",[s._v("就这么自然的，Keep 与智能硬件结合了起来，也完成了与线下的打通，这是 Keep 最正确的发展路线。")]),a("br"),a("h3",{attrs:{id:"bai-shou-qi-jia-chuang-ye-zhi-nan-wang-diao-da-qu-shi-chen-mi-xiao-chuang-zao"}},[s._v("白手起家创业指南：忘掉大趋势，沉迷小创造 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bai-shou-qi-jia-chuang-ye-zhi-nan-wang-diao-da-qu-shi-chen-mi-xiao-chuang-zao"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("猫 助 多抓鱼 - 创始人")])]),a("p",[s._v("多抓鱼是一个微信起家的二手书交易工具。和拼多多一样，猫助 抓住了现在 4G 与物流 基础设施的能力，把以前做不了的事情重新做了一遍，并取得了成功。")]),a("p",[s._v("很神奇的是，多抓鱼二手书是全上门收取的，而且卖书的人不需要付快递费，毕竟书本身就不贵。但让我吃惊的是，现在上门收书的成本竟然只有 2 块多。")]),a("p",[s._v("十年前的许多不靠谱想法，现在是可以重新审视一遍了，同时未来 5G 时代的来临也必将带来新的机会。")]),a("br"),a("h3",{attrs:{id:"gong-ju-de-jie-zhi-yan-jin"}},[s._v("工具的价值演进 "),a("a",{staticClass:"header-anchor",attrs:{href:"#gong-ju-de-jie-zhi-yan-jin"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("张海龙 CODING - 创始人 & CEO")])]),a("p",[s._v("Coding 最早的印象是做代码托管服务的，由此产生了一些周边的尝试，比如项目买卖平台等。但今年可以看到，Coding 已经有了自己的核心价值定位：云开发。")]),a("p",[s._v("从项目管理、持续集成、测试管理、部署管理都全部在云端，Coding 还提供了云代码编辑器，可以直接在云环境下写代码，共享云端的环境，从一定程度上是提高了开发效率。")]),a("p",[s._v("其中触动比较大的一点是：有些大公司的产品经理还在用 Excel 管理项目计划，这一点还是蛮戳中痛点的。开发的环节很多，从需求到项目管理，再到研发，每一步的自动化程度都完全不同，有的团队也许在用最先进的协同编辑与云构建，但 PM 还在用电子表格缓慢的统计项目进展。")]),a("p",[s._v("将项目生命周期整体来看，自动化每个环节，并且搬到云上，是未来一个大趋势。")]),a("p",[s._v("顺带一提，运维工程师在很多大型公司已经高度自动化了，部署流程正在下沉到开发工程师人群。")]),a("br"),a("h3",{attrs:{id:"dong-cha-chan-ye-shen-chu-xu-yao-shi-me-yang-de-ji-suan-ji-shi-jue"}},[s._v("洞察：产业深处需要什么样的计算机视觉？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#dong-cha-chan-ye-shen-chu-xu-yao-shi-me-yang-de-ji-suan-ji-shi-jue"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("柯 严 扩博智能 - CTO")])]),a("p",[s._v("扩博智能在机器视觉领域有所建树，利用这些技术解决新零售行业与风电行业的问题。")]),a("p",[s._v("主要说到利用无人机 + 视觉识别，完成风机叶片的自动巡检，提高了大约 20 倍的巡检效率。")]),a("p",[s._v("可以看到，机器学习、智能硬件、图形处理这几个随机组合，可以造就许多创业机会。现在流行说产业互联网，互联网技术为产业赋能，通过智能硬件 + 图形处理的 扩博智能 就是一个典型例子。")]),a("br"),a("h3",{attrs:{id:"xin-zao-che-dao-di-you-mei-you-zai-ren-zhen-zao-che"}},[s._v("新造车到底有没有在认真造车？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#xin-zao-che-dao-di-you-mei-you-zai-ren-zhen-zao-che"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("戴 雷 拜腾 - 联合创始人 & 总裁")])]),a("p",[s._v("智能造车也是这几年很热的话题，也许在未来 5 ～ 10 年，智能造车可以有突破性进展。")]),a("p",[s._v("智能造车的最大局限，在于生产流水线的改进速度远低于软件的改进速度，也许 5 年内都难以修改造车流程的某个磨具，所以智能造车是一个需要时间的行业，也是一个传统工程与互联网软件结合与碰撞的行业。")]),a("p",[s._v("戴雷 将智能造车分为三大流派：互联网造车派，传统造车转型派，传统造车“叛逃”派。他就是一个从德国造车巨头企业出来的创业者，因为传统车厂体系太庞大，想要转型非常困难。所以他选择了到中国创业，同时拥有传统车厂的造车经验与互联网团队的他，在 19 年将会造出一些可以投放到市场的智能汽车。")]),a("p",[s._v("现在到了互联网与传统行业深度融合的时代，可喜的是，看到了双方都在积极的拥抱对方，从整体上看，线上线下结合的速度正在越来越快。")]),a("br"),a("h3",{attrs:{id:"liao-liao-xr-de-xin-shi-jie"}},[s._v("聊聊 XR 的新世界 "),a("a",{staticClass:"header-anchor",attrs:{href:"#liao-liao-xr-de-xin-shi-jie"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("John Gaeta Magic Leap - 创意策略 SVP")])]),a("p",[s._v("这又是一个烧脑的话题。Magic Leap 是一家做增强现实的前沿科技公司，之前网上热传的一个虚拟现实技术 - 一个篮球场的鲸鱼 动画，就出自这家公司。")]),a("p",[s._v("Magic Leap 公司技术很前沿，所以说起来有一种很魔幻的感觉。这次演讲的主题 XR 就表示了，这家公司会利用 VR、AR、MR、CR 等技术（篇幅限制，不介绍这些概念，此处可以自行查阅资料），将数字与现实更好的结合，并服务于个人。")]),a("p",[s._v("这场主要有四个重要概念：空间计算、感知场、生活流、个人 AI。")]),a("p",[s._v("空间计算指的是下一代计算机计算对象是空间，也就是为我们人类感知的空间做计算。比如你戴上了一个可穿戴设备，那计算机算法就会对针对你在这个空间中的方位，你的目光，你的动作，与周围进行的交互进行计算，利用 MR 技术增强显示世界的显示内容，辅助你更便捷的生活在现实世界。")]),a("p",[s._v("感知场指我们解读现实世界的能力，通过计算机可以增强虚拟与现实的互动，比如你通过 MR 眼镜在桌子上放了一个球，当你用手把它弹开时，球会飞走，而你的手也有触感。")]),a("p",[s._v("生活流指的是你生活产生的全部信息，就像流计算一样实时上传与计算，最后更好的服务于你。")]),a("p",[s._v("个人 AI 便是字面意思，为个人服务的 AI，或者说仅为你服务的 AI。这个 AI 将会像机器猫一样全方位照顾你，帮助你更好的生活。但这方面还在探索中，所能想想到的一切未来机器助力人类的场景都包含在 个人 AI 含义中。")]),a("p",[s._v("最直观的震撼是，现在 Magic Leap 的 MR 眼镜，已经可以比较真实的模拟 “篮球场的鲸鱼” 画面了，而几年前的宣传视频还是后期合成的。他们很早就想象到了未来，并以后期处理的效果展示出来。现在，他们完成了部分承诺，我们可以用 MR 眼镜看电影，而电影的主人公与场景会直接出现在你的客厅或卧室，看起来几乎没有违和感。")]),a("p",[s._v("至少在看电影场景下，就非常令人激动。从 2D 电子版上看到的电影就足以令人激动了，现在我们可以身处电影的环境中，而且改造的场景就在你的客厅！")]),a("br"),a("h2",{attrs:{id:"day3-tan-tan-ren-he-qi-ye-chi-xu-cheng-chang-de-fang-fa-lun"}},[s._v("DAY3 谈谈人和企业持续成长的方法论 "),a("a",{staticClass:"header-anchor",attrs:{href:"#day3-tan-tan-ren-he-qi-ye-chi-xu-cheng-chang-de-fang-fa-lun"}},[s._v("§")])]),a("br"),a("p",[s._v("互联网企业已经发展到一个瓶颈，ofo 事件后，大家都知道烧钱没有用了，因为流量红利消失后，流量成本已经超过收益，同时互联网企业与传统企业的摩擦加剧，资本和风口难以再使互联网企业披荆斩棘。")]),a("br"),a("p",[s._v("想要继续增长，可能视角要回到人与管理上面。")]),a("br"),a("h3",{attrs:{id:"da-zao-ji-qi-ren-shi-dai-de-os"}},[s._v("打造机器人时代的 OS "),a("a",{staticClass:"header-anchor",attrs:{href:"#da-zao-ji-qi-ren-shi-dai-de-os"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("傅 盛 - 猎豹移动董事长 & CEO")])]),a("p",[s._v("傅盛 的核心观点是，利用 AI 帮助更多人脱离生产力工作，转向创造性工作。")]),a("p",[s._v("猎豹做了 AI 主播，提高了主播服务效率，但可能却替代许多主播的职业，因此他才会谈到这个观点。这个观点笔者也在《刷新》一书中看到类似的描述。")]),a("p",[s._v("每次工业革命，或者机器人革命，都有大量人类工作岗位被替代，但放在长期来看，最终其实会导致人类岗位的增加。因为机器肯定都在解放重复性的岗位，或者聪明一点的机器人也是从比较没有创造性的岗位开始替代人类，随着生产力的提高，人们拥有更多的时间做更有意义的事情，就会自然催生难度更高的岗位，需要的人才也会更多。")]),a("p",[s._v("比如在农业时代，人们需要大量劳作才能吃饱，那人才只要满足农田这个市场即可。但工业革命后，农业不需要那么多人了，人类才有机会创造出计算机市场，把人才投向计算机市场。而计算机市场的工作难读大于农业市场，所以需要更多的人才，更高的要求，最终创造的就业比农业时代多得多。")]),a("br"),a("h3",{attrs:{id:"yin-du-shi-chang-de-cheng-chang-guan-cha"}},[s._v("印度市场的成长观察 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-du-shi-chang-de-cheng-chang-guan-cha"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("许达来 - 顺为资本创始合伙人 & CEO")])]),a("p",[s._v("印度内部出于相对割裂状态，有 20 多种语言，这是它与中国最大的区别。因此印度的本土化很重要，同一个区域可能就有数个讲着不同语言的印度人，他们彼此之间可能还无法交流。")]),a("p",[s._v("不同的语言也导致了不同的文化差异，所以去印度创办企业，必须找印度本地人合伙，才有可能作出符合印度文化的产品。而去印度投资，也最好投资本土企业，因为印度的环境复杂，本土企业成功的概率相对较大。")]),a("p",[s._v("比较有感触的是，提到了最近两年印度的飞速发展，印度从网线安装率很低的时代，一下跨越到移动互联网 4G 时代，开车的司机都可以看在车上看视频了。这说明相对落后的国家与地区，已经实现跨越式发展，可能直接跳过 PC 时代直接进入移动互联网时代。")]),a("p",[s._v("如果对印度市场布局，一定要意识到印度是个割裂的市场，与本地企业合作，同时做好拥抱变化的准备，印度的发展肯定比十年前的中国快。")]),a("br"),a("h3",{attrs:{id:"ke-ji-x-chuang-yi-xin-yu-le-shi-dai-de-cheng-chang-fa-ze"}},[s._v("科技 × 创意 新娱乐时代的成长法则 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ke-ji-x-chuang-yi-xin-yu-le-shi-dai-de-cheng-chang-fa-ze"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("刘文峰 爱奇艺 - CTO")])]),a("p",[s._v("爱奇艺运用 AI 的方式非常有趣，在人工智能领域，他们主打两个战略：zoomAI 与 homeAI。")]),a("p",[s._v("zoomAI 主要是利用机器学习进行画质修复，将比较老的 480p 电影转成 720p，画质上得到了大幅提升（让我想到了 魔兽争霸 3 重制版，现在如果是视频领域，为了高清分辨率已经不需要重新开发了）。")]),a("p",[s._v("homeAI 核心是读懂视频。它可以读懂视频中的人物、场景、情节，并结合语音交互，快速跳转到某个情节，或者查找演员信息，或只看某个人，这个确实大幅提升了看电视剧的体验。")]),a("p",[s._v("就在几年前，视频技术的核心还在前端的视频解码与后端的负载均衡，如今已经将战场蔓延到 画质修复与读懂情节，视频领域的门槛实现了跨越式提高，我希望这些 AI 技术可以开放出来，赋能每一家视频提供商，因为这些新技术背后的研发成本太过巨大，以后若成为每一家视频网站公司的功能标配，则这项技术必须实现平台化赋能，或者服务化。")]),a("br"),a("h3",{attrs:{id:"think-de-chang-qi-zhu-yi"}},[s._v("Think 的长期主义 "),a("a",{staticClass:"header-anchor",attrs:{href:"#think-de-chang-qi-zhu-yi"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("赵 泓 ThinkPad - 联想集团副总裁，中国区中小企业事业部总经理")])]),a("p",[s._v("核心话题就是 “以不变应万变”，主要在说 ThinkPad 系列在不断变化的市场中，一直坚持以自己的节奏打磨产品，最后用户很买单。")]),a("p",[s._v("值得提炼的是，ThinkPad 根据用户需求去做产品，根据不同的用户场景，制造了不同系列的电脑，比如适合商务旅行的 X 系列，或者工程师专用的 T 系列。其中提到了为什么不把 ThinkPad 边框做小，原因是要考虑防摔。")]),a("p",[s._v("其实可以看出来，我们每个人都要具有接受两种相反价值观的能力。像 ThinkPad 推崇的长期主义，我们可以看到好的地方，因为这个给 ThinkPad 带来了 26 年不衰的竞争力。但同时也要知道企业的 S 型生命成长曲线，许多公司没有跨国这个曲线就彻底没落了。也许在未来人机交互迁移到 MR 时，坚守智能电脑的坚持就要被打破，但如果长期来看你的赛道是安全的，那就坚持下去。")]),a("h3",{attrs:{id:"ji-jin-huan-shi-bao-shou-kan-tou-chuang-ye-de-kuai-yu-man"}},[s._v("激进还是保守？看透创业的「快与慢」 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ji-jin-huan-shi-bao-shou-kan-tou-chuang-ye-de-kuai-yu-man"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("方三文 雪球 - 创始人 & 董事长")])]),a("br"),a("p",[s._v("雪球是一个投资交流社区。因为这个节目是座谈，所以聊的内容比较琐碎。")]),a("p",[s._v("一个有意思的点是，方三文提到了雪球社区会经常冒出一些出自 “不知名” 用户的专业评论文章，进而提到了一个概念：社区资源重组。也就是在大家能平等交流的互联网环境下，非头部流量因为有发声的机会，因此会获得自己的机会。")]),a("br"),a("h3",{attrs:{id:"zai-shi-dai-qie-huan-zhong-chong-xin-li-jie-ji-shu-de-li-liang"}},[s._v("在时代切换中，重新理解技术的力量 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zai-shi-dai-qie-huan-zhong-chong-xin-li-jie-ji-shu-de-li-liang"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("沈向洋 微软 - 全球执行副总裁")])]),a("p",[s._v("沈向洋作为微软全球执行副总裁，是非常重量级嘉宾，他讲到了微软的转型，收购 Github，以及微软的文化，以及几年前对人工智能的准确预测，内容非常有价值。")]),a("p",[s._v("结合他推荐的《刷新》一书，我得以更好得理解他所说的微软。")]),a("p",[s._v("微软是一家老牌巨头，几乎在九十年代的互联网企业中，微软是活到最后的。由于没有赶上移动互联网浪潮，中间一度掉队，但现在又迎头赶上了，这中间做了不少努力。")]),a("p",[s._v("微软以前是一个领地意识很强的公司，产权的官司没有少打，但在更换新的 CEO 后，为了弥补错过的移动互联网带来的损失，微软变得更加开放了。")]),a("p",[s._v("微软通过与竞争伙伴建立长期合作关系，在赋能生产效率领域又重新回到了巅峰。收购领英有助于微软开拓职场关系的边疆，这与服务开发者是密不可分的，同时微软也在想办法提高对女性雇员的平等待遇，领英的数据也有助于这项分析。收购 Github 就更体现了微软赋能开发者的意图，虽然网上有许多逃离 Github 的负面言论，但实际上在微软收购 Github 后，Github 用户增加了 800 万，这比过去 6 年的总和还要多。")]),a("p",[s._v("现在微软期待的未来蓝图是，让世界变成计算机，让计算无处不在。其实这些与其他科技巨头的愿景差不多，最打动我的是微软关注的人文情怀。")]),a("p",[s._v("微软现在确实越来越关注科技造福人类的方向，不仅是帮助普通人提高办公效率，还要帮助患有先天疾病，或残障人士无障碍的使用技术。微软最近技术公平性，平等为人类赋能的领域做了很多，这可能与微软 CEO 萨提亚的出身有关，他知道自己是赶上了美国对印度人才敞开大门的黄金时期才获得了就业机会，它对家乡，对世界都拥有平等获取知识与成就的同理心，大公司的 CEO 都拥有这种担当。")]),a("br"),a("h3",{attrs:{id:"ji-shu-xing-gong-si-de-cheng-chang-qi-shi-lu"}},[s._v("技术型公司的成长启示录 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ji-shu-xing-gong-si-de-cheng-chang-qi-shi-lu"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("高欣欣 将门 - 创始合伙人 & CEO 赵 勇 格灵深瞳 - 创始人 & CEO 宋晨枫 小鱼在家 - 创始人 & CEO")])]),a("br"),a("p",[s._v("高欣欣 作为主持人采访了 赵勇 与 宋晨枫。")]),a("p",[s._v("格灵深瞳是一家技术驱动的公司，拥有一批机器学习的专家，但在创业初期并没有找好业务方向，以至于后来团队重组，重新聚焦到摄像头与人的识别、数据分析上，才渐渐实现了盈利。")]),a("p",[s._v("从格灵深瞳身上吸取的教训是，在创业初期，得到融资后容易迷失方向，业务遍地开花，但最后难以商业落地。专注做一件事是关键词。")]),a("p",[s._v("小鱼在家与百度合作的小度在家发展的很好，宋晨枫 讲到创业公司寻找方向阶段，与成熟后，与大公司的竞合关系。")]),a("br"),a("p",[s._v("创业公司初期其实是在下赌注，如果你赌的风口对了，就能顺利进入下个阶段 - 大佬的台桌。上了大佬的台桌，你会看到三座大山，以及脱颖而出的竞争对手，你要选择与谁合作，与谁竞争。听下来这个问题是没有标准答案的，不同公司有不同的选择，而 小鱼在家 选择了与百度合作。")]),a("br"),a("p",[s._v("后面的访谈提到了团队管理经验，基本上是找到底层操作系统（学习能力、素质）与业务能力与当前阶段所匹配的人。同时也再次强调了创业团队要招比自己更优秀的人，这与 BAT 的招人标准不谋而合。")]),a("br"),a("h3",{attrs:{id:"ru-he-yong-30-nian-de-shi-jian-shi-xian-yi-ge-zui-chu-de-xiang-fa"}},[s._v("如何用 30 年的时间实现一个最初的想法？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#ru-he-yong-30-nian-de-shi-jian-shi-xian-yi-ge-zui-chu-de-xiang-fa"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("葛 珂 金山办公 - CEO")])]),a("br"),a("p",[s._v("核心词是 时间的沉淀。")]),a("p",[s._v("办公软件领域需要耐得住寂寞，而且非常需要技术驱动，金山办公的 WPS 系列从支持中文，到现在通过模版满足用户需求以打通市场，一共走了 30 年。")]),a("p",[s._v("这个例子与 ThinkPad 那场分享比较像，虽然我很尊敬微软，但办公软件方面，中国必须有自己的核心技术，否则在国家安全方面是得不到保障的。")]),a("br"),a("h3",{attrs:{id:"chuang-xin-de-ou-ran-yu-bi-ran"}},[s._v("创新的偶然与必然 "),a("a",{staticClass:"header-anchor",attrs:{href:"#chuang-xin-de-ou-ran-yu-bi-ran"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("谢阗地 大疆创新 - 品牌负责人")])]),a("br"),a("p",[s._v("大疆无人机已经是智能硬件的代表了，现在最新一代的大疆无人机 2.0 搭载了强大的人工智能系统，甚至可以识别不同的植物喷洒不同的农药。")]),a("p",[s._v("大疆的分享有亮点启发：")]),a("p",[s._v("第一是智能硬件创业市场非常广阔，因为之前 扩博智能 分享的无人机案例其实与大疆无人机使用的技术很想，只是服务的业务场景不同。同样的底层技术运用到不同的行业，可以成就不同的伟大公司。硬件领域相对来说寡头比较少，小玩家都比较有机会占领属于自己的细分领域市场。")]),a("p",[s._v("第二是关于大疆为什么会成功，这个成功很偶然，来源于大疆团队早期对无人机技术的研究，等无人机应用市场成熟了，就自然而然的推进了市场。正因为有前几年的技术沉淀，所以大疆无人机技术上领先竞争对手好几年。")]),a("p",[s._v("这个第二点和 小鱼在家 的 “创业公司在赌未来方向” 挺像，小鱼在家 与 大疆都在早期赌对了方向，所以在市场成熟起来后可以快速实现规模化。")]),a("p",[s._v("这个顺势而为的理念与前面的 顺为资本 谈到的类似，国家和时代需要什么样的技术，做这个技术的人就能取得成功。")]),a("br"),a("h3",{attrs:{id:"50-hou-vs-90-hou-chuang-ye-gai-bian-liao-wo-men-shi-me"}},[s._v("50 后 VS 90 后：创业改变了我们什么？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#50-hou-vs-90-hou-chuang-ye-gai-bian-liao-wo-men-shi-me"}},[s._v("§")])]),a("br"),a("blockquote",[a("p",[s._v("曾德钧 猫王收音机 - 创始人 齐俊元 Teambition - 创始人 & CEO")])]),a("br"),a("p",[s._v("猫王收音机是一款音响产品，在智能音响时代，幸好没有参与到其中，恰恰坚守住了自己的特色，反而对古典美的追求成为了稀缺的东西。我在想，智能音响在互联网大佬眼里其实都是入口，大家都在补贴，砸开用户家中智能硬件的切入点，如果猫王收音机也去竞争，这将是两个维度的碰撞，拿你的核心与别人的诱饵碰，一定会失败的。")]),a("p",[s._v("猫王收音机表达的也是长期主义，和 Thinkpad 演讲的很像，其精髓是，在这个新事物快速取代旧事物的时代，我们还可以发现一些可以被留下来的东西。")]),a("p",[s._v("Teambition 是提高团队工作效率的工具，比如任务管理、协同等功能，和 Coding 的云开发平台类似，不过这个更注重于点子的记录与管理，项目进展管理。")]),a("p",[s._v("比较有感触的点是：创始人对团队产品决策时要拿捏好力度，这对大公司的领导层同样适用。管理层要参与到产品设计中，产品才会更有活力，员工对产品的重视程度会更高，但管理层如果急于证明自己的正确性，往往会扼杀其他人的思考，所以一名睿智的管理者既要参与到产品设计中，又要客观评价事情，最大程度激发每一个员工的创造力。")]),a("br"),a("h3",{attrs:{id:"yi-ge-30-duo-nian-shi-zhong-bao-chi-chuang-zao-li-de-zu-zhi-jing-li-liao-shi-me"}},[s._v("一个 30 多年始终保持创造力的组织，经历了什么？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-ge-30-duo-nian-shi-zhong-bao-chi-chuang-zao-li-de-zu-zhi-jing-li-liao-shi-me"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("Ed Catmull 皮克斯动画 - 联合创始人 & 总裁, 迪士尼动画工作室 - 总裁")])]),a("br"),a("p",[s._v("迪士尼动画的创意给我们的印象深刻，这次迪士尼的总裁 Ed Catmull 带给我们最有启发的一点，就是迪士尼的创新来自于快速试错。")]),a("p",[s._v("迪士尼很多创意在初期都是非常糟糕的，但敢于承认自己会犯错，且积极改正，造就了迪士尼的成功。")]),a("p",[s._v("笔者想到一个不太恰当的比方，就好比写前端页面样式时，完美的动画都是一步步试出来的。一个好的动画，都是通过最原始，最简单的代码一步步尝试和改进，每一个时间参数都要微调，最后用户看到的只是经过无数次调试后的效果，当然会惊讶为什么我们能做的这么棒，其实创造的过程需要尝试。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("微软的转型、投资人的建议、产业互联网，都需要 WHY NOT 的精神。")]),a("p",[s._v("我们需要冷静下来，理解为什么中国有拼多多式的机会，为什么互联网会进入寒冬，新的时代为什么由数据驱动，互联网为什么要与产业结合。以上的解读可以回答这些问题，我们每个互联网从业者都需要认真思考世界正在发生变化的原因。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},fc49:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[s._m(0),s._m(1),s._m(2),s._m(3),s._m(4),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("举例子")])]),a("h3",{attrs:{id:"ju-li-zi"}},[s._v("举例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ju-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),a("br"),a("p",[a("strong",[s._v("相框")])]),a("p",[s._v("照片 + 相框 = 带相框的照片，这背后就是一种装饰器模式：照片具有看的功能，相框具有装饰功能，在你看照片的基础上，还能看到精心设计的相框，增加了美感，同时相框还可以增加照片的保存时间与安全性。")]),a("br"),a("p",[s._v("相框与照片是一种组合关系，任何照片都可以放到相框中，而不是每个照片生成一个特定的相框，显然，组合的方式更加灵活。")]),a("br"),a("p",[a("strong",[s._v("带有缓存的文件读写")])]),a("p",[s._v("假设我们有一个类 "),a("code",[s._v("FileIO")]),s._v(" 用来读写文件，但是没有缓存能力，此时是新建一个 "),a("code",[s._v("CachedFileIO")]),s._v(" 子类好，还是创建一个 "),a("code",[s._v("CachedIO")]),s._v("?")]),a("br"),a("p",[s._v("一眼看上去好像 "),a("code",[s._v("CachedFileIO")]),s._v(" 用起来更方便，而 "),a("code",[s._v("CachedIO")]),s._v(" 的用法是 "),a("code",[s._v("new CachedIO(new FileIO())")]),s._v(" 稍微麻烦一些，但如果我们增加一个网络读写类 "),a("code",[s._v("NetworkIO")]),s._v("，一个数据库读写类 "),a("code",[s._v("DBIO")]),s._v(" 呢？")]),a("br"),a("p",[s._v("显然，继承的方式会使子类数量极速膨胀，而组合的方式则非常灵活，生成一个支持缓存的网络读写器，只需要 "),a("code",[s._v("new CachedIO(new NetworkIO())")]),s._v(" 即可，这就是组合灵活的地方。")]),a("br"),a("p",[s._v("当然，为了实现这个能力，"),a("code",[s._v("CachedIO")]),s._v(" 需要与 "),a("code",[s._v("FileIO")]),s._v("、"),a("code",[s._v("CachedFileIO")]),s._v("、"),a("code",[s._v("CachedIO")]),s._v(" 继承自同一个类，具备相同的接口。")]),a("br"),a("p",[a("strong",[s._v("搭建平台的组件 wrapper")])]),a("p",[s._v("装饰器模式别名也叫 "),a("code",[s._v("wrapper")]),s._v("，"),a("code",[s._v("wrapper")]),s._v(" 也经常在前端搭建场景中遇到，当搭建平台加载一个组件时，希望拓展其基础能力，一般会使用 "),a("code",[s._v("wrapper")]),s._v(" 层对组件进行嵌套，"),a("code",[s._v("wrapper")]),s._v(" 层就是在不改变 API 的基础上，对第三方组件进行增强。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("意图解释")])]),a("h3",{attrs:{id:"yi-tu-jie-shi"}},[s._v("意图解释 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-tu-jie-shi"}},[s._v("§")])]),a("br"),a("p",[a("strong",[s._v("意图：动态地给一个对象添加一些额外的职责。就增加功能来说，Decorator 模式相比生成子类更为灵活。")])]),a("p",[s._v("不同于继承，组合可以在运行时进行，所以称之为 “动态添加”，这里的 “额外职责” 泛指一切功能，比如在按钮点击时进行一些 log 日志的打印，在绘制 text 文本框时，额外绘制一个滚动条和边框等等。")]),a("br"),a("p",[s._v("“就增加功能来说，Decorator 模式相比生成子类更为灵活” 这句话的含义是，组合比继承更灵活，当可拓展的功能很多时，继承方案会产生大量的子类，而组合可以提前写好处理函数，在需要时动态构造，显然是更灵活的。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("结构图")])]),a("h3",{attrs:{id:"jie-gou-tu"}},[s._v("结构图 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jie-gou-tu"}},[s._v("§")])]),a("br"),a("img",{attrs:{width:"600",src:"https://img.alicdn.com/tfs/TB1cmhe3FY7gK0jSZKzXXaikpXa-1624-688.png"}}),a("p",[a("code",[s._v("ConcreteComponent")]),s._v(" 指的是需要被装饰的组件，可以看到，装饰器 "),a("code",[s._v("Decorator")]),s._v(" 与他都继承同一个类，这样能保证 API 的一致，才保证无论装饰多少层，始终符合 "),a("code",[s._v("Component")]),s._v(" 类型。")]),a("br"),a("p",[s._v("装饰器如果有多种，就要将 "),a("code",[s._v("Decorator")]),s._v(" 申明为抽象类，"),a("code",[s._v("ConcreteDecoratorA")]),s._v("、"),a("code",[s._v("ConcreteDecoratorB")]),s._v(" 分别实现它们，如果只有一种装饰器，可以退化到 "),a("code",[s._v("Decorator")]),s._v(" 自身就是一种实现。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("代码例子")])]),a("h3",{attrs:{id:"dai-ma-li-zi"}},[s._v("代码例子 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dai-ma-li-zi"}},[s._v("§")])]),a("br"),a("p",[s._v("下面例子使用 typescript 编写。")]),a("pre",[a("code",{staticClass:"hljs language-typescript"},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-comment"},[s._v("// 具有点击事件")]),s._v("\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" onClick = "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {}\n}\n\n"),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Decorator")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("private")]),s._v(" _component\n\n  "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-title"},[s._v("constructor")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("component")]),s._v(")")]),s._v(" {\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v("._component = component\n  }\n\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("public")]),s._v(" onClick = "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {\n    log("),a("span",{staticClass:"hljs-string"},[s._v("'打点'")]),s._v(")\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v("._component.onClick()\n  }\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" component = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Component()\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 一个普通的点击")]),s._v("\ncomponent.onClick()\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" wrapperComponent = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Decorator(component)\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 一个具有打点功能的点击")]),s._v("\nwrapperComponent.onClick()\n")])]),a("br"),a("p",[s._v("其实方法很简单，通过组合，我们得到了一个能力更强的组件，而实现的方式就是利用构造函数保存组件实例，并在复写函数时，增加一些增强实现。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("弊端")])]),a("h3",{attrs:{id:"bi-duan"}},[s._v("弊端 "),a("a",{staticClass:"header-anchor",attrs:{href:"#bi-duan"}},[s._v("§")])]),a("br"),a("p",[s._v("装饰器的问题也是组合的问题，过多的组合会导致：")]),a("ul",[a("li",[s._v("组合过程的复杂，要生成过多的对象。")]),a("li",[s._v("包装器层次增多，会增加调试成本，我们比较难追溯到一个 bug 是在哪一层包装导致的。")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("组合模式是针对树状结构这个特定场景的统一抽象方案，对降低系统复杂度有很重要的意义，同时也不要忘了过度抽象是有害的，我们要拿捏其中的度。")]),a("br"),a("p",[s._v("装饰器模式是非常常用的模式，Decorator 是一个透明的包装，只要保证包装的透明性，就可以最大限度发挥装饰器模式的优势。")]),a("br"),a("p",[s._v("最后总结一个装饰器应用图：")]),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1wlpgqPMZ7e4jSZFOXXX7epXa-1232-478.png"}})],2)],1)},n=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("blockquote",[a("blockquote",[a("p",[s._v("Decorator")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h2",{attrs:{id:"zhuang-shi-qi-mo-shi"}},[s._v("装饰器模式 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zhuang-shi-qi-mo-shi"}},[s._v("§")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("Decorator（装饰器模式）属于结构型模式，是一种拓展对象额外功能的设计模式，别名 "),a("code",[s._v("wrapper")]),s._v("。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("意图：动态地给一个对象添加一些额外的职责。就增加功能来说，Decorator 模式相比生成子类更为灵活。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("blockquote",[a("blockquote")])])}],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},fc5b:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("极客公园 IFX - 上")])]),a("h2",{attrs:{id:"ji-ke-gong-yuan-ifx---shang"}},[s._v("极客公园 IFX - 上 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ji-ke-gong-yuan-ifx---shang"}},[s._v("§")])])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("这次是极客大会十周年，也正好告别了 2019 年，因此主题是总结互联网前 10 年的发展，并预测下一个 10 年的变化。")]),a("p",[s._v("这次是前半部分的大会感悟。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("h3",{attrs:{id:"wei-xin-de-cheng-gong"}},[s._v("微信的成功 "),a("a",{staticClass:"header-anchor",attrs:{href:"#wei-xin-de-cheng-gong"}},[s._v("§")])]),a("p",[s._v("腾讯和米聊分别在 2010.12、2011.01 上线，起初他们的用户基数相当，"),a("strong",[s._v("每天都有恐怖的 10% 用户量增长")]),s._v("，然而这两家的差距在 2011.07 开始拉大，之后微信便占有绝对优势，米聊彻底失败。")]),a("br"),a("p",[s._v("所以有人说微信抄袭米聊，毕竟微信起步比米聊晚了一个月，然而微信的胜出有更深层的原因。")]),a("br"),a("p",[s._v("大家都知道移动端即时通讯是一个唯一寡头市场，因此当米聊看到微信开始反超的时候，就已经知道这场战争已经结束。当时小米重点业务还在手机，米聊是团队试水的一款产品，但看到歪打误撞进入一个如此蓝海的市场，小米自己也很纠结要不要把资源都投入到米聊上。")]),a("br"),a("p",[s._v("反观微信，当时手机 QQ 也在做，本来怎么也轮不到微信出场，但张小龙、马化腾、张志东在微信建立了深夜小组，每天晚上都即时同步微信的进展，这让微信即时获取到了腾讯内部资源，在各种关键节点帮了很多忙，甚至让手机 QQ 技术大牛直接支持微信改善高并发问题，快速完成 QQ 好友导入功能。")]),a("br"),a("p",[s._v("雷军总结到 “如果腾讯一年后才有所反应，米聊胜率是 50%，如果是腾讯两三个月就有反应，米聊应该 100% 会死掉”。")]),a("br"),a("p",[s._v("很巧的是，张志东事后也总结过一句话 “如果我们当初没有看清这个趋势，没有在微信起量的事后，看清这个本质，微信胜出概率也只有 50%”。")]),a("br"),a("p",[s._v("然而腾讯的反应实在太快了，米聊之后只好走差异化社区路线。")]),a("br"),a("p",[s._v("微信后面的发展也非常精彩，通过源于用户需求的少量功能，比如微信红包，不断引爆微信的增长。夸张的是，微信装机量的增长率始终与智能手机渗透率持平，这说明 "),a("strong",[s._v("微信吃掉了所有新增的流量红利。")])]),a("br"),a("p",[s._v("微信的发展，是一个 "),a("strong",[s._v("工具到平台，平台到生态的演进过程。")]),s._v(" 真正让微信建立生态的是小程序。小程序是一个去中心化模式，当大家都想像公众号一样抢一波风口红利时，微信做的正是去中心化，微信不给任何小程序导量，每个小程序的流量入口都需要开发者自己经营，这种商业模式才可持续发展。")]),a("br"),a("p",[s._v("对公众号也是一样的态度：公众号要持续创造价值，没有初始红利。理解了这一点才理解了现在微信生态一系列做法，只有每位贡献者持续创造价值的生态才是可持续的，生态绝不是在创建之初让抢到先手的用户瓜分平台流量红利，这样是不可持续的。")]),a("br"),a("h3",{attrs:{id:"yi-dong-zhong-duan-de-zhong-chang-zhan-shi"}},[s._v("移动终端的中场战事 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-dong-zhong-duan-de-zhong-chang-zhan-shi"}},[s._v("§")])]),a("p",[s._v("前十年，手机设备制造厂商的格局发生了很大变化。国内经历了从小米，到 OPPO、VIVO，再到华为的演化。")]),a("br"),a("p",[s._v("印象深刻的是看了一个雷军创办小米前夕的访谈视频，雷军说 “大家看到苹果的成功，却没有看到这片蓝海的机会，现在手机制造领域竞争太不激烈了”。同时为了对抗苹果，谷歌开源了安卓源代码，小米利用这个机会打造一款符合中国人口味的手机操作系统，并借助用户社区与性价比优势一举占领了早期市场。")]),a("p",[s._v("2015-2018 年出现了 OV 领跑的情况，即 OPPO、VIVO 后来居上，有两点原因：小米还在强调各项参数指标，但 OV 宣传的概念很易懂 “充电五分钟，通话两小时”；同时 OV 还注意到了下沉市场，通过各种综艺节目冠名与 "),a("strong",[s._v("平均 25 万家线下门店布局")]),s._v("，超越了小米。")]),a("br"),a("p",[s._v("上面两点分别对应了创业的早期与扩张期，然而 2019 年产业进入成熟期，手机出货量开始下降，市场逐渐进入零和博弈阶段，此时大玩家华为入场，华为的入场姿势是投入数万名研发资源进行饱和式攻击，成熟的市场比拼的不是营销而是技术，从争夺用户变成留存用户，这个阶段华为胜出了。")]),a("br"),a("p",[s._v("值得关注的是，从苹果收入年报来看，其中软件服务收入占比正在逐年升高，这也代表了一种未来发展趋势，在垄断了硬件后将收入来源逐渐转化为软件和服务。第三天的 OnePlus 手机恰恰是反其道而行之，仅通过硬件赚钱，商业模式也运转的很好，这个到后面再细说。"),a("strong",[s._v("这就是商业的有趣之处，第一商业历史的精彩程度不亚于国家战争史，第二商业模式没有万能法则，两种完全相反的模式都能活得很好，这是它最有魅力的地方。")])]),a("br"),a("h3",{attrs:{id:"zhi-fu-bao"}},[s._v("支付宝 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zhi-fu-bao"}},[s._v("§")])]),a("p",[s._v("支付宝是典型的工具场景，这次分享核心观点是：只要把工具分内的事情做好，自然会赢得用户，赢得市场。")]),a("br"),a("p",[s._v("第一个例子是早期 PC 支付时代，由于支付需要跳转到各大银行网银页面，整个链路长达 7 次跳转，用户整体付款成功率只有 60%，马云为此在年会上把支付宝团队狠批了一顿，这也促使支付宝在次年研发了快捷支付，将银行支付流程替换为支付宝自己的支付流程，支付成功率提高到了 95%。但这个改动是艰苦的，有一句话印象深刻："),a("strong",[s._v("“为了用户体验，能做的都做了，不能做的也都做了”")]),s._v("。")]),a("br"),a("p",[s._v("无论是二维码支付、芝麻信用还是小程序，都是由用户对工具的需求催生出来的。其中芝麻信用是因为支付宝解决了淘宝上买家与卖家的信任问题，但社会依然存在大量信任问题，芝麻信用的初心就是将淘宝信用解决方案推广到全社会。不积跬步，无以至千里，任何了不起的方案起步都是解决一个具体的问题。")]),a("br"),a("h3",{attrs:{id:"pin-duo-duo"}},[s._v("拼多多 "),a("a",{staticClass:"header-anchor",attrs:{href:"#pin-duo-duo"}},[s._v("§")])]),a("p",[s._v("拼多多给人的刻板印象是“下沉市场”，然而这既不是拼多多的起点，也不是拼多多的终点。")]),a("p",[s._v("在创立拼多多之前，黄峥创建了一个“拼好货”的应用，这个应用瞄准城市人群，本来可以在这个垂直领域深耕，但在拼好多过程中，黄峥发现微信用户已经达到 7 亿日活，有一大半人群还没有网购习惯，但具备了网购能力，因为正好赶上微信红包培养了用户付款习惯。")]),a("br"),a("p",[a("strong",[s._v("为什么淘宝、京东不在微信里卖货？")]),s._v(" 原因是担心成为微信的货架。为什么淘宝当初要切断百度搜索入口？因为一旦用户培养了在百度搜索淘宝的习惯，"),a("strong",[s._v("淘宝就无法成为第一级用户触达者，一旦百度推荐自家电商产品或者切断淘宝流量，淘宝将遭受灭顶之灾。")]),s._v(" 在微信也一样，淘宝和京东都不希望被微信扼住喉咙。但这毕竟是“巨头”担心的事情，就一个创业公司来说，成为微信的货架又如何？这是个很大的市场空白，迟早有人补位。")]),a("br"),a("p",[s._v("拼多多切入点是下沉市场，下沉市场的特点是“有用户，没商品”，因此拼团很好的解决了这个问题，既提高了购买量，提升了物流、供应商效率，大量的订单量也提升了拼多多对供应商谈判的筹码，导致拼多多可以以低价提供给买家，低价又促使买家下更多的单，形成一个小飞轮。")]),a("br"),a("p",[s._v("下沉市场只是拼多多的第一刀，举一个爆品的例子：拼多多与商家合作推出了爆品玻璃碗，又大、又厚、耐高温，一下子成为了爆品，让商家与拼多多双赢。"),a("strong",[s._v("重点在于，打造爆品对促进飞轮运作太有用了，爆品意味着大量单一订单，拼多多对单一商品谈价能力提高到极限，商家制作成本压低到极限，爆品是效率最高的社会生产和消费方式。")]),s._v(" 在这个过程中，拼多多主动帮助商家打造爆品，“平台”干预商家带来双赢可能是未来一个强有力的竞争武器。")]),a("br"),a("h3",{attrs:{id:"mei-tuan-de-shang-ye-luo-ji"}},[s._v("美团的商业逻辑 "),a("a",{staticClass:"header-anchor",attrs:{href:"#mei-tuan-de-shang-ye-luo-ji"}},[s._v("§")])]),a("p",[s._v("“不设限”是对美团比较好的理解。大家都觉得美团什么都做，其实美团就是坚信“按照规律做事”，从模仿美国的 facebook - 校内网、twitter - 饭否、groupon - 美团，好的借鉴也是一种成功哲学。")]),a("p",[a("strong",[s._v("四纵三横的思想，更透彻理解不同平台做的事情：")])]),a("table",{staticClass:"table"},[a("thead",[a("tr",[a("th"),a("th",[a("strong",[s._v("咨询")])]),a("th",[a("strong",[s._v("通信")])]),a("th",[a("strong",[s._v("娱乐")])]),a("th",[a("strong",[s._v("电商")])])])]),a("tbody",[a("tr",[a("td",[a("strong",[s._v("搜索")])]),a("td",[s._v("百度")]),a("td",[s._v("QQ")]),a("td",[s._v("热血传奇")]),a("td",[s._v("淘宝网")])]),a("tr",[a("td",[a("strong",[s._v("社交")])]),a("td",[s._v("新浪微博")]),a("td",[s._v("人人网")]),a("td",[s._v("开心网")]),a("td",[s._v("蘑菇街")])]),a("tr",[a("td",[a("strong",[s._v("移动")])]),a("td",[s._v("今日头条")]),a("td",[s._v("微信")]),a("td"),a("td")])])]),a("p",[s._v("练好基本功，提升工作效率，管理层按规律做事，合适的事找合适的人，没做过的事就自己探索，这是美团总结的经验。")]),a("br"),a("h3",{attrs:{id:"zi-jie-tiao-dong"}},[s._v("字节跳动 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zi-jie-tiao-dong"}},[s._v("§")])]),a("p",[s._v("字节跳动的估值几乎是百度的两倍了，为什么看似体量更大、资源更多的百度会被字节跳动超越？大家都很感兴趣这个话题。")]),a("p",[s._v("字节跳动核心能力是个 "),a("strong",[s._v("性化推荐引擎")]),s._v("，旗下产品 “社交、自拍、咨询、教育、金融理财、短视频、问答、电商”都利用了技术中台输出的个性化推荐算法作为核心竞争力。")]),a("p",[s._v("字节跳动推出的成功产品很多，像今日头条、抖音、火山、西瓜，背后的方法论就是“产品、技术、文化”。")]),a("p",[s._v("产品上，地毯式孵化许多产品，并且根据上面总结的领域乘以个性化推荐进行了许多尝试，比如社交 X 个性化推荐，短视频 X 个性化推荐，咨询 X 个性化推荐。产品迭代也是个逐步的过程，比如抖音从直播，到小学生短视频工具，最终找到了城市潮人工具这个最合适的定位。")]),a("p",[s._v("技术上，首先是大量从百度挖人，而且挖的都是核心技术架构骨干。其次，打造了技术中台：技术部分为“算法组、互娱组、产品技术组、垂直产品组”，最核心的技术人员在算法组，为所有产品横向赋能。总结一下就是豪华技术团队 + 技术能力中台化。")]),a("p",[s._v("文化上，字节跳动保持很大的信息透明度，比如新员工可以查看所有历史工作资料与聊天记录，公司所有决定都是透明可查询的，公司管理扁平化。")]),a("br"),a("h3",{attrs:{id:"gong-xiang-chu-xing-yu-gong-xiang-jing-ji"}},[s._v("共享出行与共享经济 "),a("a",{staticClass:"header-anchor",attrs:{href:"#gong-xiang-chu-xing-yu-gong-xiang-jing-ji"}},[s._v("§")])]),a("br"),a("h4",[s._v("滴滴")]),a("p",[s._v("2010 ～ 2019 年，共享出行的代表就是滴滴，这个话题从滴滴开始剖析了整个共享经济行业，非常有意思。")]),a("p",[s._v("切入点是 "),a("strong",[s._v("融资")]),s._v("。BAT 上市融资额度分别是：百度：1.112 亿美元、"),a("strong",[s._v("阿里巴巴 69.88 亿美元")]),s._v("、腾讯 0.2188 亿美元，总额 71.2 亿美元。"),a("strong",[s._v("而滴滴到目前为止的融资已经达到 208 亿美元，")]),s._v(" 滴滴融资超过 BAT 总和，这说明了什么？这说明滴滴走了一条不正常的商业路线，即先疯狂再冷静的烧钱路线。")]),a("p",[s._v("当一个行业增长速度极速增加时，老玩家将失去优势和壁垒，所以谁能更快扩张谁就能成为最终赢家，此时如果有大量资本投入快速占领市场，让企业成为这个领域的绝对霸主，投资者就可以通过上市退出的方式把之前烧的钱赚回来。然而这种烧钱商业模式是有前提的，即 "),a("strong",[s._v("极度充裕的资本 + 清晰的结构性机会")]),s._v("，滴滴的结构性机会非常清晰，先垄断再收割。")]),a("blockquote",[a("p",[s._v("传统商业模式：融资 -> 赚钱。")]),a("p",[s._v("非常态的商业模式：融资 -> 烧钱 -> 烧钱 -> 烧钱... -> 赚大钱。")])]),a("p",[s._v("Uber 创始人 特拉维斯·卡兰尼克 说了一句很经典的话，翻译过来就是：一个赛道上只要出现一个 “疯子”，所有人都必须变成 “疯子”。即一旦你所在的领域开始有公司利用融资 + 烧钱的方式运作时，你也必须这么做，否则你的市场会被对手抢走。")]),a("p",[a("strong",[s._v("然而也可以看到这几年大量烧钱的公司开始合并")]),s._v("，比如滴滴和快的打车、同城和赶集网、美团和大众点评、携程和去哪儿，这些公司合并的背后都是投资人运作的，那为什么要合并呢？道理很简单，双方投资人都在砸钱，谁也扳不倒谁，"),a("strong",[s._v("此时投资人会计算现在烧的钱在垄断市场后能否收回来")]),s._v("，如果收不回来，双方投资人都不傻，大家为了不赔本，一定会促使两家公司合并，这样才能停止烧钱，即时上市止血。")]),a("p",[s._v("有意思的是，滴滴从抢单模式变成派单模式，就体现了烧钱抢市场到精细化运营考虑盈利的一种转变。")]),a("br"),a("h4",[s._v("摩拜和 OFO")]),a("p",[s._v("摩拜和 OFO 的发展本应该比较平静的，因为共享单车要解决的问题是 “看得见和愿意骑”，投放更多的车可以解决看得见问题，提升骑行体验可以解决愿意骑的问题，然而大量投资人从滴滴大战中大赚了一笔，想要把模式复制到共享单车领域，战斗就开始了。")]),a("p",[s._v("由于资本的投入，摩拜和 OFO 重点都放在了“投更多的车”上，但这种抢占市场的方式并不像滴滴一样合理：")]),a("p",[s._v("滴滴将大量私家车借给没车的人使用，本质是将“私人交通工具”变成“公共交通工具”，提升了“私人交通工具”的利用效率，对社会有益的事情自然能站得住脚。")]),a("p",[s._v("共享单车的问题在于，"),a("strong",[s._v("大家不会把自家自行车骑出来借给别人用，毕竟开着汽车可以带乘客，但骑着自行车带人变成服务也太奇怪了。")]),s._v(" 所以各公司大量制造新的自行车投入市场，"),a("strong",[s._v("要解决的是公共交通问题，但这些自行车并没总在路上跑着，而是在街头大量闲置，")]),s._v(" 这样其实降低了自行车的工具利用效率，从根本来看没有创造剩余价值，因此盈利模式不太明朗。")]),a("br"),a("h4",[s._v("更多共享模式")]),a("p",[s._v("后来出现的共享充电宝、共享车位、共享雨伞等等细分领域的创业，本来资本也想走烧钱模式，但发现走不通，还是回到了最初健康的模式。根本原因可能是这些行业无法产生寡头垄断，无法通过烧钱的方式快速占领市场并回收资本。")]),a("br"),a("h3",{attrs:{id:"chan-ye-hu-lian-wang-yu-shuai-tui-qi"}},[s._v("产业互联网与衰退期 "),a("a",{staticClass:"header-anchor",attrs:{href:"#chan-ye-hu-lian-wang-yu-shuai-tui-qi"}},[s._v("§")])]),a("p",[s._v("看未来十年，互联网也许进入了一个“衰退周期”，互联网从纯线上变成与产业结合，比如软硬件都做，或者线上线下结合才能继续破局，反过来说，以前纯线上一本万利的高速扩张模式一去不复返了，互联网要深度与社会结合，发挥更多实际的价值才能得到自身成长，这是一个泡沫破裂的过程，也是互联网回归到真实价值的过程。")]),a("p",[s._v("如果资本不充裕了，对创业者来说也还有机会，比如相应的会带来低人力成本与低广告投放成本。")]),a("p",[s._v("最后，周航宣传了一个创业孵化项目，即投资人与创业者深度交流几个月，在这几个月内让创业者得到成长，让投资人能看清创业者是否具备潜力，这种投资者与创业者培养感情的孵化方式是比较新颖的，相对面试来说，有更多机会呆在一起可以看人看得更清楚，投资者与创业者更容易建立信任关系。")]),a("br"),a("h3",{attrs:{id:"yu-yan-ai-de-wei-lai-gou-xiang"}},[s._v("语言 AI 的未来构想 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yu-yan-ai-de-wei-lai-gou-xiang"}},[s._v("§")])]),a("p",[s._v("搜狗在 AI 语音布局很久了，我们熟悉的搜狗产品有“搜狗输入法”和“搜狗搜索”，这两个都是语言入口，所以搜狗基于语言来布局。")]),a("p",[s._v("语言 AI 的发展方向是自然交互 + 知识计算。自然交互指人机自然的语言交互，利用语音技术、图像技术、视觉技术识别；知识计算指的是利用知识对语言进行处理，比如翻译、问答、对话。综合两者有可能产生未来的智能助理。")]),a("p",[s._v("语音皮肤在知识付费领域就有应用场景，通过识别人的声音，将其特征提取后把另一个人的声音音色覆盖掉，这样就能让任何人代替讲师录制音频了。同样在导航语音也有类似适用场景，后面百度地图的分享会提到。")]),a("br"),a("h3",{attrs:{id:"fa-sheng-zai-bian-yuan-de-ai-ji-suan-ge-ming"}},[s._v("发生在边缘的 AI 计算革命 "),a("a",{staticClass:"header-anchor",attrs:{href:"#fa-sheng-zai-bian-yuan-de-ai-ji-suan-ge-ming"}},[s._v("§")])]),a("p",[s._v("所谓边缘计算指的是去中心化的本地分散运算，比如自动驾驶，就是发生在每个车上的本地计算。为什么不是云计算？因为本地计算一般都需要即时响应，尤其是自动驾驶只有几百毫秒的生命线，万一网络出现延迟，后果是谁也承担不起的。")]),a("p",[s._v("边缘计算产生的数据量非常庞大，一辆自动驾驶汽车平均每天产生 600-1000 TB 量的计算，而且自动驾驶 L1 - L5 需要的算力也是呈指数级增长的，要解决这个问题，自研芯片与算法的软硬配合是一种突破方式。")]),a("p",[s._v("地平线公司要做的是智能互联的底层，做手机领域的思科，做智能化时代的底层基础设施。")]),a("br"),a("h3",{attrs:{id:"tong-wang-ren-ji-jiao-hu-zhong-ji-zi-you-de-ai-zhi-lu"}},[s._v("通往人机交互“终极自由”的 AI 之路 "),a("a",{staticClass:"header-anchor",attrs:{href:"#tong-wang-ren-ji-jiao-hu-zhong-ji-zi-you-de-ai-zhi-lu"}},[s._v("§")])]),a("p",[s._v("报告显示全球有 26% 的手机用户每天使用手机超过 7 小时，35 岁以下人群平均每天解锁手机，人类都要成为手机的奴隶了，看似拓展了人类生活自由，但反而感觉人类被手机束缚住了。")]),a("p",[s._v("原因有几块：")]),a("ol",[a("li",[s._v("交互方式不自然：按键和触屏都不方便。")]),a("li",[s._v("智能手机不智能：appStore 就是智能手机了？就算有语音助手加持，也无法理解连续语义。")])]),a("p",[s._v("解决办法就是更自然的，让人类感受不到的电子设备交互方式，比如微型音频设备，AR 眼镜，体内芯片等外挂方式，交互上需要进化为语音交互、手势交互、脑波信号等。")]),a("p",[s._v("目前这个阶段，智能手表和智能耳机都是较能符合这个进步趋势的尝试。")]),a("br"),a("h3",{attrs:{id:"di-tu-de-po-ju"}},[s._v("地图的破局 "),a("a",{staticClass:"header-anchor",attrs:{href:"#di-tu-de-po-ju"}},[s._v("§")])]),a("p",[s._v("比较有意思的是利用 20 秒对话训练，可以产生一个你自己语音包，用你自己的声音导航。")]),a("p",[s._v("另一个功能是预测第二天路况，并根据到达时间推荐一个合适的出发时间。")]),a("p",[s._v("百度地图不止于导航，在如何挖掘地图额外价值方面也在做积极的尝试。")]),a("br"),a("h3",{attrs:{id:"yi-qi-chuang-zao-suo-jian-ji-suo-neng-de-ping-xing-shi-jie"}},[s._v("一起创造【所见及所能】的平行世界 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yi-qi-chuang-zao-suo-jian-ji-suo-neng-de-ping-xing-shi-jie"}},[s._v("§")])]),a("p",[s._v("外号科技介绍了一款产品：远距离二维码。")]),a("p",[s._v("我们现在看到的二维码基本都是近距离的，近距离二维码可以：支付、加好友、账号登录、近距离信息获取等。")]),a("p",[s._v("而远距离二维码是相对于近距离二维码的，在极端情况下甚至可以达到一公里的距离。")]),a("p",[s._v("远距离二维码的适用场景有四种：")]),a("ol",[a("li",[s._v("远距离信息获取：服务机器人定位导航、无人机遂窗配送、电子围栏。")]),a("li",[s._v("高精度定位：实时物流、室内定位报警。")]),a("li",[s._v("增强现实：景区 AR 改造、AR 多人游戏、室内沉浸式导航、机场电子指示牌。")]),a("li",[s._v("数据重建：室内测距和建模。")])]),a("br"),a("h3",{attrs:{id:"dang-ke-ji-la-jin-wo-men-yu-shi-jie-de-ju-chi"}},[s._v("当科技拉近我们与世界的距离 "),a("a",{staticClass:"header-anchor",attrs:{href:"#dang-ke-ji-la-jin-wo-men-yu-shi-jie-de-ju-chi"}},[s._v("§")])]),a("p",[s._v("这个演讲者是一名了不起的盲人曹军，他创立了保益科技帮助盲人像明眼人一样生活。")]),a("p",[s._v("记忆最深刻的一句话是："),a("strong",[s._v("不要总以为帮助盲人就是出一款盲人专用手机、盲人专用 App，其实盲人最大诉求是像普通人一样享受科技的便利，普通人能用的手机、能用的 App、能开的车，盲人也都想用，")]),s._v(" 普通人应该想办法把自己用的手机、软件改造成盲人可以使用的版本。这是最大的换位思考。")]),a("br"),a("h3",{attrs:{id:"peng-you-shuo---fu-sheng"}},[s._v("鹏友说 - 傅盛 "),a("a",{staticClass:"header-anchor",attrs:{href:"#peng-you-shuo---fu-sheng"}},[s._v("§")])]),a("p",[s._v("傅盛带领的猎豹做智能机器人已经有几年了，今年有了最新进展，出货量达到 5000 台。")]),a("p",[s._v("傅盛提到一点非常关键，就是机器人这个名字起的很不好，总让人觉得机器就应该拥有人一样的智慧，其实我们这个阶段还做不到，而且行业也不需要那样聪明的机器，要的而是一个服务工具。")]),a("p",[s._v("举个例子，博物馆的导游可以被机器人替代，因为一方面机器人信息储备量大，工作效率高，而且还能听懂任何国家语言，这样一个机器人甚至能胜过好几位资深导游，而导游这种场景也相对局限，容易实现。")]),a("p",[s._v("机器人也不一定要长得像人，在不同领域可以做出不同体型，适配不同的工作场景。"),a("strong",[s._v("机器在某些垂直领域完全可以超越人类。")])]),a("br"),a("h3",{attrs:{id:"tan-mi-ren-gong-zhi-neng-bei-hou-de-ying-he-ying-xiong"}},[s._v("探秘人工智能背后的【硬核英雄】 "),a("a",{staticClass:"header-anchor",attrs:{href:"#tan-mi-ren-gong-zhi-neng-bei-hou-de-ying-he-ying-xiong"}},[s._v("§")])]),a("p",[s._v("未来 10 年定制化数据服务领域可能分为 5 大块：")]),a("br"),a("p",[a("strong",[s._v("设备的定制化")])]),a("p",[s._v("比如无人车的场景，从多摄像头到摄像头 + 激光雷达的方案，随着业务场景不断多元化，对设备定制要求也会不断提高。")]),a("br"),a("p",[a("strong",[s._v("场景的定制化")])]),a("p",[s._v("还是无人驾驶场景，为了保证在多场景的安全性，需要模拟出许多情况下的交通场景，比如不同光线强度、角度、不同车道、不同车型、不同类似司机、人群和环境。")]),a("br"),a("p",[a("strong",[s._v("样本的定制化")])]),a("p",[s._v("今天很多 AI 是以人为中心，人群可以根据不同肤色、不同语言、不同年龄段、不同爱好等进行区分，所以根据基于样本的定制也是一大趋势。")]),a("p",[a("strong",[s._v("工作的协同化")]),s._v(" 和 "),a("strong",[s._v("工作的专业化")]),s._v("，即随着分工不断细化，协同度与专业化程度都会提高。")]),a("br"),a("h3",{attrs:{id:"zhi-neng-jiao-tong"}},[s._v("智能交通 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zhi-neng-jiao-tong"}},[s._v("§")])]),a("p",[s._v("九号机器人这家公司为了解决开车与步行之间存在的空白的问题，九号机器人提供了大量代步机器，比如智能滑板车，智能电动车，所有车辆都是“电动化、网络化”的，预测下一个 10 年会 加上“智能化”。")]),a("p",[s._v("开车与步行之间的机器人除了代步，还有快递和配送这个巨大场景，而这个场景的优势在于，低速场景的机器人自动驾驶危险系数小，技术上较容易实现，因此可以快速投入到线下上进快速迭代。")]),a("p",[s._v("未来十年可能是去智能化的十年，即所有的硬件都是智能硬件，所有车辆都是机器人，即智能化会极大的普及。")]),a("br"),a("h3",{attrs:{id:"ke-zhe-die-shou-ji"}},[s._v("可折叠手机 "),a("a",{staticClass:"header-anchor",attrs:{href:"#ke-zhe-die-shou-ji"}},[s._v("§")])]),a("p",[s._v("介绍了联想集团出的一款可折叠手机，据说是全球首款无痕的可折叠手机 Moto Razr。")]),a("p",[s._v("从视频来看，无痕可折叠的最大秘密在于，并没有将屏幕折叠到 180 度这个死角，折叠到 180 度目前没有任何一个屏幕材料不产生折痕，这款手机通过非常精巧的设计，让 "),a("strong",[s._v("在外部折叠到 180 度时，内部屏幕仅折叠 100 度左右。")])]),a("br"),a("h3",{attrs:{id:"xia-yi-ge-shi-nian-ke-ji-lian-jie-jian-kang"}},[s._v("下一个十年：科技链接健康 "),a("a",{staticClass:"header-anchor",attrs:{href:"#xia-yi-ge-shi-nian-ke-ji-lian-jie-jian-kang"}},[s._v("§")])]),a("p",[s._v("下一个十年，科技会更加关注健康领域，比如手环检测心跳是否异常，或者通过智能设备检测健康是否达标，以决定是否要去医院就诊，甚至以此决定医保的折扣率。")]),a("br"),a("h3",{attrs:{id:"wei-lai-de-nian-qing-ren-chi-shi-me"}},[s._v("未来的年轻人吃什么？ "),a("a",{staticClass:"header-anchor",attrs:{href:"#wei-lai-de-nian-qing-ren-chi-shi-me"}},[s._v("§")])]),a("p",[s._v("这个标题有点标题党嫌疑，其实说的是一个减肥棒产品，吃了可以减肥。")]),a("p",[s._v("一个原始年轻人的食谱，碳水化合物、脂肪、蛋白质含量分别占 22%-40%、28%-58%、19%-35%，总结起来就是低糖、优质蛋白质。")]),a("p",[s._v("而进入农耕时代，一个年轻人的食谱，脂肪、蛋白质、碳水化合物分别占 10%-20%，10%-20%，50%-70%，即碳水化合物太多，糖分过多，而摄入蛋白质的量严重不足，这带来了大量肥胖问题。")]),a("p",[s._v("解决办法就是做一个低糖、优脂、优蛋白的产品，所以这款产品最终效果就是“无糖、易吸收的小分子蛋白、好吃”，至于好吃是怎么做到的，因为做了这两个方面的优化：")]),a("ol",[a("li",[s._v("食材可见：比如大块杏仁碎、大块黄桃粒等。")]),a("li",[s._v("口味丰富：芝士、椰子、巧克力、曲奇。")])]),a("p",[s._v("我一位朋友当场就订购了几箱，说实话还是蛮有诱惑力的，产品叫 ffit8，可以天猫自行搜索。")]),a("p",[s._v("极客大会每个人都送了几袋，尝了一下还是蛮好吃的，有甜味，但为什么说无糖呢，查了一下原因，原来用的是低聚异麦芽糖，这种麦芽糖难以被吸收，所以也就可以认为是无糖的啦。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("前十年，无论巨头还是创业公司都经历了起起伏伏，商业路上哪有一帆风顺，唯有真正为社会创造价值，为用户解决问题的企业才可能成功。")]),a("p",[s._v("最后留下一道思考题，你对互联网上个十年有什么感悟吗？")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports},fc9c:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",{staticClass:"content element-doc"},[a("header-block",[a("template",{slot:"title"},[a("p",[s._v("前端调试技巧")])]),a("h2",{attrs:{id:"qian-duan-diao-shi-ji-qiao"}},[s._v("前端调试技巧 "),a("a",{staticClass:"header-anchor",attrs:{href:"#qian-duan-diao-shi-ji-qiao"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("本期精读的文章是："),a("a",{attrs:{href:"https://css-tricks.com/debugging-tips-tricks/?utm_source=javascriptweekly&utm_medium=email"}},[s._v("debugging-tips-tricks")])])]),a("blockquote",[a("p",[s._v("编码只是开发过程中的一小部分，为了使我们工作更加高效，我们必须学会调试，并擅长调试。")])]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i2/O1CN01JC1TZ51Nxn24teojP_!!6000000001637-2-tps-1024-1296.png",width:"500",alt:"logo"}})],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("引言")])]),a("h3",{attrs:{id:"yin-yan"}},[s._v("引言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#yin-yan"}},[s._v("§")])]),a("br"),a("p",[s._v("梵高这幅画远景漆黑一片，近景的咖啡店色彩却反差很大，他只是望着黑夜中温暖的咖啡馆，交织着矛盾与孤独。代码不可能没有 BUG，调试与开发也始终交织在一起，我们在这两种矛盾中不断成长。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("内容概要")])]),a("h3",{attrs:{id:"nei-rong-gai-yao"}},[s._v("内容概要 "),a("a",{staticClass:"header-anchor",attrs:{href:"#nei-rong-gai-yao"}},[s._v("§")])]),a("blockquote",[a("p",[s._v("文中列举了常用调试技巧，如下：")])]),a("p",[a("strong",[s._v("Debugger")])]),a("p",[s._v("在代码中插入 "),a("code",[s._v("debugger")]),s._v(" 可以在其位置触发断点调试。")]),a("br"),a("p",[a("strong",[s._v("Console.dir")])]),a("p",[s._v("使用 "),a("code",[s._v("console.dir")]),s._v(" 命令，可以打印出对象的结构，而 "),a("code",[s._v("console.log")]),s._v(" 仅能打印返回值，在打印 "),a("code",[s._v("document")]),s._v(" 属性时尤为有用。")]),a("blockquote",[a("p",[s._v("ps: 大部分时候，对象返回值就是其结构")])]),a("br"),a("p",[a("strong",[s._v("使用辅助工具，语法高亮、linting")])]),a("p",[s._v("它可以帮助我们快速定位问题，其实 flow 与 typescript 也起到了很好的调试作用。")]),a("br"),a("p",[a("strong",[s._v("浏览器拓展")])]),a("p",[s._v("使用类似 "),a("a",{attrs:{href:"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi"}},[s._v("ReactDTools")]),s._v(" "),a("a",{attrs:{href:"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd"}},[s._v("VueDTools")]),s._v(" 调试对应框架。")]),a("br"),a("p",[a("strong",[s._v("借助 DevTools")])]),a("p",[s._v("Chrome Dev Tools 非常强大，"),a("a",{attrs:{href:"https://umaar.com/dev-tips/"}},[s._v("dev-tips")]),s._v(" 列出了 100 多条它可以做的事。")]),a("br"),a("p",[a("strong",[s._v("移动端调试工具")])]),a("p",[s._v("最靠谱的应该是 "),a("a",{attrs:{href:"http://eruda.liriliri.io/"}},[s._v("eruda")]),s._v("，可以内嵌在任何 h5 页面，充当 DevTools 控制台的作用。")]),a("br"),a("p",[a("strong",[s._v("实时调试")])]),a("p",[s._v("不需要预先埋点，比如 "),a("code",[s._v("document.activeElement")]),s._v(" 可以打印最近 focus 过的元素，因为打开控制台导致失去焦点，但我们可以通过此 api 获取它。")]),a("br"),a("p",[a("strong",[s._v("结构化打印对象瞬时状态")])]),a("p",[a("code",[s._v("JSON.stringify(obj, null, 2)")]),s._v(" 可以结构化打印出对象，因为是字符串，不用担心引用问题。")]),a("br"),a("p",[a("strong",[s._v("数组调试")])]),a("p",[s._v("通过 "),a("code",[s._v("Array.prototype.find")]),s._v(" 快速寻找某个元素。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("精读")])]),a("h3",{attrs:{id:"jing-du"}},[s._v("精读 "),a("a",{staticClass:"header-anchor",attrs:{href:"#jing-du"}},[s._v("§")])]),a("br"),a("p",[s._v("本精读由 "),a("a",{attrs:{href:"https://github.com/rccoder"}},[s._v("rccoder")]),s._v(" "),a("a",{attrs:{href:"https://github.com/ascoders"}},[s._v("ascoders")]),s._v(" "),a("a",{attrs:{href:"https://github.com/NE-SmallTown"}},[s._v("NE-SmallTown")]),s._v(" "),a("a",{attrs:{href:"https://github.com/BlackGanglion"}},[s._v("BlackGanglion")]),s._v(" "),a("a",{attrs:{href:"https://github.com/jasonslyvia"}},[s._v("jasonslyvia")]),s._v(" "),a("a",{attrs:{href:"https://github.com/alcat2008"}},[s._v("alcat2008")]),s._v(" "),a("a",{attrs:{href:"https://github.com/DanielWLam"}},[s._v("DanielWLam")]),s._v(" "),a("a",{attrs:{href:"https://github.com/HsuanXyz"}},[s._v("HsuanXyz")]),s._v(" "),a("a",{attrs:{href:"https://github.com/huxiaoyun"}},[s._v("huxiaoyun")]),s._v(" "),a("a",{attrs:{href:"https://github.com/vagusX"}},[s._v("vagusX")]),s._v(" 讨论而出。")]),a("br"),a("p",[a("strong",[s._v("移动端真机测试")])]),a("p",[s._v("由于 webview 不一定支持连接 chrome 控制台调试，只有真机测试才能复现真实场景。")]),a("p",[a("a",{attrs:{href:"https://www.browserstack.com/"}},[s._v("browserstack")]),s._v(" "),a("a",{attrs:{href:"https://www.dynatrace.com/platform/offerings/customer-experience-monitoring/"}},[s._v("dynatrace")]),s._v(" 都是真机测试平台，公司内部应该也会搭建这种平台。")]),a("br"),a("p",[s._v("** 移动端控制台**")]),a("ul",[a("li",[a("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools/remote-debugging/webviews"}},[s._v("Chrome 远程调试")]),s._v(" app 支持后，连接 usb 或者局域网，即可通过 Dev Tools 调试 webview 页面。")]),a("li",[a("a",{attrs:{href:"http://people.apache.org/~pmuellr/weinre/docs/latest/Home.html"}},[s._v("Weinre")]),s._v(" 通过页面加载脚本，与 pc 端调试器通信。")]),a("li",[s._v("通过内嵌控制台解决，比如 "),a("a",{attrs:{href:"http://eruda.liriliri.io/"}},[s._v("eruda")]),s._v(" "),a("a",{attrs:{href:"https://github.com/WechatFE/vConsole"}},[s._v("VConsole")])]),a("li",[a("a",{attrs:{href:"http://alloyteam.github.io/Rosin/"}},[s._v("Rosin")]),s._v(" fiddler 的一个插件，协助移动页面调试。")]),a("li",[a("a",{attrs:{href:"https://jsconsole.com/"}},[s._v("jsconsole")]),s._v(" 在本地部署后，手机访问对应 ip，可以测试对应浏览器的控制台。")])]),a("p",[a("strong",[s._v("请求代理")])]),a("p",[a("a",{attrs:{href:"http://www.charlesproxy.com/"}},[s._v("charles")]),s._v(" "),a("a",{attrs:{href:"http://www.telerik.com/fiddler"}},[s._v("Fiddler")]),s._v(" 可以抓包，更重要是可以代理请求。假数据、边界值测试、开发环境代码加载，每一项都非常有用。")]),a("br"),a("p",[a("strong",[s._v("定制 Chrome 拓展")])]),a("p",[s._v("对于特定业务场景也可以通过开发 chrome 插件来做，比如分析自己网站的结构、版本、代码开发责任人、一键切换开发环境。")]),a("br"),a("p",[a("strong",[s._v("在用户设备调试")])]),a("p",[s._v("把控制台输出信息打到服务器，本地通过与服务器建立 socket 链接实时查看控制台信息。要知道实时根据用户 id 开启调试信息，并看用户真是环境的控制台打印信息是非常有用的，能解决很多难以复现问题。")]),a("p",[s._v("代码中可以使用封装过的 "),a("code",[s._v("console.log")]),s._v("，当服务端开启调试状态后，对应用户网页会源源不断打出 log。")]),a("br"),a("p",[a("strong",[s._v("DOM 断点、事件断点")])]),a("ul",[a("li",[s._v("DOM 断点，在 dom 元素右键，选择 （Break on subtree modifications），可以在此 dom 被修改时触发断点，在不确定 dom 被哪段 js 脚本修改时可能有用。")]),a("li",[s._v("Event Listener Breakpoints，神器之一，对于任何事件都能进入断点，比如 click，touch，script 事件统统能监听。")])]),a("br"),a("p",[a("strong",[s._v("使用错误追踪平台")])]),a("p",[s._v("对错误信息采集、分析、报警是很必要的，这里有一些对外服务："),a("a",{attrs:{href:"https://sentry.io/welcome/"}},[s._v("sentry")]),s._v(" "),a("a",{attrs:{href:"https://trackjs.com/"}},[s._v("trackjs")])]),a("br"),a("p",[a("strong",[s._v("黑盒调试")])]),a("p",[s._v("SourceMap 可以精准定位到代码，但有时候报错是由某处代码统一抛出的，比如 "),a("a",{attrs:{href:"https://github.com/zertosh/invariant"}},[s._v("invariant")]),s._v(" 让人又爱又恨的库，所有定位全部跑到这个库里了（要你有何用），这时候，可以在 DevTools 源码中右键，选中 "),a("code",[s._v("BlackBox Script")]),s._v("，它就变成黑盒了，下次 log 的定位将会是准确的。")]),a("p",[a("a",{attrs:{href:"https://hacks.mozilla.org/2013/08/new-features-of-firefox-developer-tools-episode-25/"}},[s._v("FireFox")]),s._v("、"),a("a",{attrs:{href:"https://umaar.com/dev-tips/128-blackboxing/"}},[s._v("Chrome")]),s._v("。")]),a("br"),a("p",[a("strong",[s._v("删除无用的 css")])]),a("p",[s._v("Css 不像 Js 一样方便分析规则是否存在冗余，Chrome 帮我们做了这件事："),a("a",{attrs:{href:"https://umaar.com/dev-tips/126-css-tracker/"}},[s._v("CSS Tracker")]),s._v("。")]),a("br"),a("p",[a("strong",[s._v("在 Chrome 快速查找元素")])]),a("p",[s._v("Chrome 会记录最后插入的 5 个元素，分别以 "),a("code",[s._v("$0")]),s._v(" ~ "),a("code",[s._v("$4")]),s._v(" 的方式在控制台直接输出。")]),a("img",{attrs:{src:"https://img.alicdn.com/imgextra/i4/O1CN01xsKHb822gkXhDDcCA_!!6000000007150-2-tps-417-516.png",width:"500",alt:"last-items"}}),a("p",[a("strong",[s._v("Console.table")])]),a("p",[s._v("以表格形式打印，对于对象数组尤为合适。")]),a("br"),a("p",[a("strong",[s._v("监听特定函数调用")])]),a("p",[a("code",[s._v("monitor")]),s._v(" 有点像 "),a("code",[s._v("proxy")]),s._v("，用 "),a("code",[s._v("monitor")]),s._v(" 包裹住的 function，在其调用后，会在控制台输出其调用信息。")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("> "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("func")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("num")]),s._v(")")]),s._v("{}\n> monitor(func)\n> func("),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(")\n"),a("span",{staticClass:"hljs-comment"},[s._v("// < function func called with arguments: 3")]),s._v("\n")])]),a("br"),a("p",[a("strong",[s._v("模拟发送请求利器 PostMan")])]),a("p",[a("a",{attrs:{href:"https://www.getpostman.com/products"}},[s._v("PostMan")]),s._v(", FireFox 控制台 Network 也支持此功能。")]),a("br"),a("p",[a("strong",[s._v("找到控制台最后一个对象")])]),a("p",[s._v("有了 "),a("code",[s._v("$_")]),s._v("，我们就不需要定义新的对象来打印值了，比如：")]),a("pre",[a("code",{staticClass:"hljs language-javascript"},[s._v("> ["),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("]\n< ["),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("]\n> $_.length\n"),a("span",{staticClass:"hljs-comment"},[s._v("// < 4")]),s._v("\n")])]),a("p",[s._v("更多控制台相关技巧可以查看："),a("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools/console/command-line-reference?utm_source=dcc&utm_medium=redirect&utm_campaign=2016q3"}},[s._v("command-line-reference")]),s._v("。")])],2),a("header-block",[a("template",{slot:"title"},[a("p",[s._v("总结")])]),a("h3",{attrs:{id:"zong-jie"}},[s._v("总结 "),a("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[s._v("§")])]),a("br"),a("p",[s._v("虽然在抛砖引玉，但整理完之后发现仍然是块砖头，调试技巧繁多，里面包含了通用的、不通用的，精读不可能一一列举。希望大家能根据自己的业务场景，掌握相关的调试技巧，让工作更加高效。")])],2)],1)},n=[],l=a("2877"),i={},r=Object(l["a"])(i,e,n,!1,null,null,null);t["default"]=r.exports}}]);